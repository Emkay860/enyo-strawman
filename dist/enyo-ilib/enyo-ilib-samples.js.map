{"version":3,"sources":["src\\ResBundle.js","..\\strawman\\LinkSupport.js","..\\strawman\\Title\\Title.js","..\\strawman\\AppRouter.js","..\\strawman\\Link\\Link.js","src\\ChooseLocale.js","src\\ChooseCurrency.js","src\\AddressFormatting.js","src\\AddressParsing.js","src\\LocaleInfo\\LocaleInfo.js","..\\strawman\\List\\List.js","src\\NameFormatting\\NameFormatting.js","src\\NameParsing\\NameParsing.js","src\\NumberFormatting\\NumberFormatting.js","..\\strawman\\SampleList\\SampleList.js","..\\strawman\\ScrollingSampleList.js","index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChthEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"generated.js","sourceRoot":"","sourcesContent":["var\r\n\tResBundle = require('enyo-ilib/ResBundle');\r\n\r\nmodule.exports = new ResBundle();","/*\r\n * LinkSupport\r\n *\r\n * Add automatic on-tap support for controls with a href attribute\r\n */\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tkind = require('enyo/kind');\r\n\r\nmodule.exports = {\r\n\tname: 'LinkSupport',\r\n\ttap: kind.inherit(function (sup) {\r\n\t\treturn function (sender, ev) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tvar link = this.get('href') || ev.originator.get('href') || ev.originator.parent.get('href');\r\n\t\t\tif (link) {\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\twindow.location.href = link;\r\n\t\t\t}\r\n\t\t};\r\n\t})\r\n};\r\n","var\r\n\tkind = require('enyo/kind');\r\n\r\nmodule.exports = kind({\r\n\ttag: 'h1'\r\n});\r\n","/*\r\n * AppRouter\r\n *\r\n * Hash sample routing for Enyo Strawman samples.\r\n */\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tkind = require('enyo/kind'),\r\n\tRouter = require('enyo/Router');\r\n\r\nmodule.exports = kind({\r\n\tkind: Router,\r\n\tuseHistory: true,\r\n\ttriggerOnStart: true,\r\n\troutes: [\r\n\t\t{path: ':sampleName/:locale', handler: 'handleRoute'},\r\n\t\t{path: ':sampleName', handler: 'handleRoute'},\r\n\t\t{path: '/:locale', handler: 'handleRouteLocaleOnly'}\r\n\t],\r\n\tevents: {\r\n\t\tonRouteChange: ''\r\n\t},\r\n\thandleRoute: function (sampleName, locale) {\r\n\t\tthis.doRouteChange({sampleName: sampleName, locale: locale || 'local'});\r\n\t},\r\n\thandleRouteLocaleOnly: function (locale) {\r\n\t\tthis.handleRoute(null, locale);\r\n\t}\r\n});\r\n\r\n","var\r\n\tkind = require('enyo/kind'),\r\n\tControl = require('enyo/Control');\r\n\r\nvar\r\n\tLinkSupport = require('../LinkSupport');\r\n\r\nmodule.exports = kind({\r\n\tname: 'Link',\r\n\tkind: Control,\r\n\ttag: 'span',\r\n\tclasses: 'link',\r\n\tspotlight: true,\r\n\tmixins: [LinkSupport],\r\n\tbadgeClassesChanged: function (was, is) {\r\n\t\tif (was) this.addRemoveClasses(was, false);\r\n\t\tif (is) this.addRemoveClasses(is, true);\r\n\t},\r\n\taddRemoveClasses: function (classes, state) {\r\n\t\tif (classes) {\r\n\t\t\tclasses = classes.split(/\\s+/);\r\n\t\t\tfor (var i = 0; i < classes.length; i++) {\r\n\t\t\t\tthis.addRemoveClass(classes[i], state);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n","var\r\n    kind = require('enyo/kind'),\r\n    ilib = require('enyo-ilib');\r\n\r\nvar\r\n    Select = require('enyo/Select');\r\n\r\n\r\nmodule.exports = kind({\r\n    name: 'ilib.sample.ChooseLocale',\r\n    tag: 'span',\r\n\r\n    published: {\r\n        'value': 'en-US'\r\n    },\r\n\r\n    locales: [\r\n        {locale: 'sq-AL', label: 'Albanian - Albania', label_ol: 'shqipe - Shqipëri'},\r\n        {locale: 'sq-ME', label: 'Albanian - Montenegro', label_ol: 'shqipe - Montenegro'},\r\n        {locale: 'ar-DZ', label: 'Arabic - Algeria', label_ol: 'العربية - الجزائر'},\r\n        {locale: 'ar-BH', label: 'Arabic - Bahrain', label_ol: 'العربية - البحرين'},\r\n        {locale: 'ar-DJ', label: 'Arabic - Djibouti', label_ol: 'العربية - جيبوتي'},\r\n        {locale: 'ar-EG', label: 'Arabic - Egypt', label_ol: 'العربية - مصر'},\r\n        {locale: 'ar-IQ', label: 'Arabic - Iraq', label_ol: 'العربية - العراق'},\r\n        {locale: 'ar-JO', label: 'Arabic - Jordan', label_ol: 'العربية - الأردن'},\r\n        {locale: 'ar-KW', label: 'Arabic - Kuwait', label_ol: 'العربية - الكويت'},\r\n        {locale: 'ar-LB', label: 'Arabic - Lebanon', label_ol: 'العربية - لبنان'},\r\n        {locale: 'ar-LY', label: 'Arabic - Libya', label_ol: 'العربية - ليبيا'},\r\n        {locale: 'ar-MR', label: 'Arabic - Mauritania', label_ol: 'العربية - موريتانيا'},\r\n        {locale: 'ar-MA', label: 'Arabic - Morocco', label_ol: 'العربية - مغربي'},\r\n        {locale: 'ar-OM', label: 'Arabic - Oman', label_ol: 'العربية - عمان'},\r\n        {locale: 'ar-QA', label: 'Arabic - Qatar', label_ol: 'العربية - قطر'},\r\n        {locale: 'ar-SA', label: 'Arabic - Saudi Arabia', label_ol: 'العربية - العربية السعودية'},\r\n        {locale: 'ar-SD', label: 'Arabic - Sudan', label_ol: 'العربية - سودان'},\r\n        {locale: 'ar-SY', label: 'Arabic - Syria', label_ol: 'العربية - سوريا'},\r\n        {locale: 'ar-TN', label: 'Arabic - Tunisia', label_ol: 'العربية - تونس'},\r\n        {locale: 'ar-AE', label: 'Arabic - UAE', label_ol: 'العربية - الأمارات العربية المتحدة'},\r\n        {locale: 'ar-YE', label: 'Arabic - Yemen', label_ol: 'العربية - يمني'},\r\n        {locale: 'bs-Latn-BA', label: 'Bosnian - Bosnia', label_ol: 'bosanski - Bosna i Hercegovina'},\r\n        {locale: 'bs-Latn-ME', label: 'Bosnian - Montenegro', label_ol: 'bosanski - Montenegro'},\r\n        {locale: 'bg-BG', label: 'Bulgarian - Bulgaria', label_ol: 'български - България'},\r\n        {locale: 'zh-Hans-CN', label: 'Chinese - China', label_ol: '中文 - 简体'},\r\n        {locale: 'zh-Hant-HK', label: 'Chinese - Hong Kong', label_ol: '中文 - 繁体'},\r\n        {locale: 'zh-Hant-MY', label: 'Chinese - Malaysia', label_ol: '中文 - 馬來西亞'},\r\n        {locale: 'zh-Hans-SG', label: 'Chinese - Singapore', label_ol: '中文 - 新加坡'},\r\n        {locale: 'zh-Hant-TW', label: 'Chinese - Taiwan', label_ol: '中文 - 台灣'},\r\n        {locale: 'hr-HR', label: 'Croatian - Croatia', label_ol: 'Hrvatski - Hrvatska'},\r\n        {locale: 'hr-ME', label: 'Croatian - Montenegro', label_ol: 'Hrvatski - Montenegro'},\r\n        {locale: 'cz-CZ', label: 'Czech - Czech Republic', label_ol: 'Český - Česká republika'},\r\n        {locale: 'da-DK', label: 'Danish - Denmark', label_ol: 'dansk - Danmark'},\r\n        {locale: 'nl-BE', label: 'Dutch - Belgium', label_ol: 'Nederlands - België'},\r\n        {locale: 'nl-NL', label: 'Dutch - Netherlands', label_ol: 'Nederlands - Nederland'},\r\n        {locale: 'en-AM', label: 'English - Armenia', label_ol: 'English - Armenia'},\r\n        {locale: 'en-AU', label: 'English - Australia', label_ol: 'English - Australia'},\r\n        {locale: 'en-AZ', label: 'English - Azerbaijan', label_ol: 'English - Azerbaijan'},\r\n        {locale: 'en-CA', label: 'English - Canada', label_ol: 'English - Canada'},\r\n        {locale: 'en-ET', label: 'English - Ethiopia', label_ol: 'English - Ethiopia'},\r\n        {locale: 'en-GM', label: 'English - Gambia', label_ol: 'English - Gambia'},\r\n        {locale: 'en-GH', label: 'English - Ghana', label_ol: 'English - Ghana'},\r\n        {locale: 'en-HK', label: 'English - Hong Kong', label_ol: 'English - Hong Kong'},\r\n        {locale: 'en-IS', label: 'English - Iceland', label_ol: 'English - Iceland'},\r\n        {locale: 'en-IN', label: 'English - India', label_ol: 'English - India'},\r\n        {locale: 'en-IE', label: 'English - Ireland', label_ol: 'English - Ireland'},\r\n        {locale: 'en-KE', label: 'English - Kenya', label_ol: 'English - Kenya'},\r\n        {locale: 'en-LR', label: 'English - Liberia', label_ol: 'English - Liberia'},\r\n        {locale: 'en-MW', label: 'English - Malawi', label_ol: 'English - Malawi'},\r\n        {locale: 'en-MY', label: 'English - Malaysia', label_ol: 'English - Malaysia'},\r\n        {locale: 'en-MM', label: 'English - Myanmar', label_ol: 'English - Myanmar'},\r\n        {locale: 'en-NZ', label: 'English - New Zealand', label_ol: 'English - New Zealand'},\r\n        {locale: 'en-NG', label: 'English - Nigeria', label_ol: 'English - Nigeria'},\r\n        {locale: 'en-PK', label: 'English - Pakistan', label_ol: 'English - Pakistan'},\r\n        {locale: 'en-PH', label: 'English - Philippines', label_ol: 'English - Philippines'},\r\n        {locale: 'en-PR', label: 'English - Puerto Rico', label_ol: 'English - Puerto Rico'},\r\n        {locale: 'en-RW', label: 'English - Rwanda', label_ol: 'English - Rwanda'},\r\n        {locale: 'en-SL', label: 'English - Sierra Leone', label_ol: 'English - Sierra Leone'},\r\n        {locale: 'en-SG', label: 'English - Singapore', label_ol: 'English - Singapore'},\r\n        {locale: 'en-ZA', label: 'English - South Africa', label_ol: 'English - South Africa'},\r\n        {locale: 'en-LK', label: 'English - Sri Lanka', label_ol: 'English - Sri Lanka'},\r\n        {locale: 'en-SD', label: 'English - Sudan', label_ol: 'English - Sudan'},\r\n        {locale: 'en-TZ', label: 'English - Tanzania', label_ol: 'English - Tanzania'},\r\n        {locale: 'en-GB', label: 'English - UK', label_ol: 'English - UK'},\r\n        {locale: 'en-US', label: 'English - USA', label_ol: 'English - USA'},\r\n        {locale: 'en-UG', label: 'English - Uganda', label_ol: 'English - Uganda'},\r\n        {locale: 'en-ZM', label: 'English - Zambia', label_ol: 'English - Zambia'},\r\n        {locale: 'et-EE', label: 'Estonian - Estonia', label_ol: 'eesti - Eesti'},\r\n        {locale: 'fa-AF', label: 'Farsi - Afghanistan', label_ol: 'فارسی - جمهوری اسلامی ایران'},\r\n        {locale: 'fa-IR', label: 'Farsi - Iran', label_ol: 'فارسی - جمهوری اسلامی افغانستان'},\r\n        {locale: 'fi-FI', label: 'Finnish - Finland', label_ol: 'suomi - Suomi'},\r\n        {locale: 'fr-DZ', label: 'French - Algeria', label_ol: 'français - Algérie'},\r\n        {locale: 'fr-BE', label: 'French - Belgium', label_ol: 'français - Belgique'},\r\n        {locale: 'fr-BJ', label: 'French - Benin', label_ol: 'français - Bénin'},\r\n        {locale: 'fr-BF', label: 'French - Burkina Faso', label_ol: 'français - Burkina Faso'},\r\n        {locale: 'fr-CM', label: 'French - Cameroon', label_ol: 'français - Cameroun'},\r\n        {locale: 'fr-CA', label: 'French - Canada', label_ol: 'français - Canada'},\r\n        {locale: 'fr-CF', label: 'French - Central African Republic', label_ol: 'français - République centrafricaine'},\r\n        {locale: 'fr-CD', label: 'French - Democratic Republic of the Congo', label_ol: 'français - République démocratique du Congo'},\r\n        {locale: 'fr-DJ', label: 'French - Djibouti', label_ol: 'français - Djibouti'},\r\n        {locale: 'fr-CQ', label: 'French - Equatorial Guinea', label_ol: 'français - Guinée équatoriale'},\r\n        {locale: 'fr-FR', label: 'French - France', label_ol: 'français - France'},\r\n        {locale: 'fr-GA', label: 'French - Gabon', label_ol: 'français - Gabon'},\r\n        {locale: 'fr-GN', label: 'French - Guinea', label_ol: 'français - Guinée'},\r\n        {locale: 'fr-CI', label: 'French - Ivory Coast', label_ol: 'français - Côte-d\\'Ivoire'},\r\n        {locale: 'fr-LB', label: 'French - Lebanon', label_ol: 'français - Liban'},\r\n        {locale: 'fr-LU', label: 'French - Luxemburg', label_ol: 'français - Luxembourg'},\r\n        {locale: 'fr-ML', label: 'French - Mali', label_ol: 'français - Mali'},\r\n        {locale: 'fr-CG', label: 'French - Republic of the Congo (Congo-Brazzaville)', label_ol: 'français - République du Congo'},\r\n        {locale: 'fr-RW', label: 'French - Rwanda', label_ol: 'français - Rwanda'},\r\n        {locale: 'fr-SN', label: 'French - Senegal', label_ol: 'français - Sénégal'},\r\n        {locale: 'fr-CH', label: 'French - Swizerland', label_ol: 'français - Suisse'},\r\n        {locale: 'fr-TG', label: 'French - Togo', label_ol: 'français - Togo'},\r\n        {locale: 'ga-IE', label: 'Gaelic - Ireland', label_ol: 'Gaeilge - Éire'},\r\n        {locale: 'de-AT', label: 'German - Austria', label_ol: 'Deutsch - Österreich'},\r\n        {locale: 'de-DE', label: 'German - Germany', label_ol: 'Deutsch - Deutschland'},\r\n        {locale: 'de-LU', label: 'German - Luxemburg', label_ol: 'Deutsch - Luxemburg'},\r\n        {locale: 'de-CH', label: 'German - Swizerland', label_ol: 'Deutsch - Schweiz'},\r\n        {locale: 'el-CY', label: 'Greek - Cyprus', label_ol: 'Ελληνική - Κύπρος'},\r\n        {locale: 'el-GR', label: 'Greek - Greece', label_ol: 'Ελληνική - Ελλάδα'},\r\n        {locale: 'he-IL', label: 'Hebrew - Israel', label_ol: 'עברית - ישראל'},\r\n        {locale: 'hi-IN', label: 'Hindi - India', label_ol: 'हिन्दी - भारत'},\r\n        {locale: 'hu-HU', label: 'Hungarian - Hungary', label_ol: 'magyar - Magyarország'},\r\n        {locale: 'id-ID', label: 'Indonesian - Indonesia', label_ol: 'bahasa Indonesia - Indonesia'},\r\n        {locale: 'it-IT', label: 'Italian - Italy', label_ol: 'italiano - Italia'},\r\n        {locale: 'it-CH', label: 'Italian - Swizerland', label_ol: 'italiano - Svizzeria'},\r\n        {locale: 'ja-JP', label: 'Japanese - Japan', label_ol: '日本語 - 日本'},\r\n        {locale: 'kk-Cyrl-KZ', label: 'Kazahk - Kazakhstan', label_ol: 'қазақ тілі - Қазақстан Республикасы'},\r\n        {locale: 'ko-KR', label: 'Korean - Korea', label_ol: '한국어 - 한국'},\r\n        {locale: 'ku-Arab-IQ', label: 'Kurdish - Iraq', label_ol: 'کوردی - العـراق'},\r\n        {locale: 'lv-LV', label: 'Latvian - Latvia', label_ol: 'Latvijas - Latvija'},\r\n        {locale: 'lt-LT', label: 'Lithuanian - Lithuania', label_ol: 'lietuviešu - Lietuva'},\r\n        {locale: 'mk-MK', label: 'Macedonian - Macedonia', label_ol: 'македонски - Поранешна Југословенска Република Македонија'},\r\n        {locale: 'ms-MY', label: 'Malaysian - Malaysia', label_ol: 'bahasa Melayu - Malaysia'},\r\n        {locale: 'ms-SG', label: 'Malaysian - Singapore', label_ol: 'bahasa Melayu - Singapore'},\r\n        {locale: 'mn-Cyrl-MN', label: 'Mongolian - Mongolia', label_ol: 'Монгол хэл - Монгол улс'},\r\n        {locale: 'nb-NO', label: 'Norwegian - Norway', label_ol: 'norsk - Norge'},\r\n        {locale: 'pl-PL', label: 'Polish - Poland', label_ol: 'polski - Polska'},\r\n        {locale: 'pt-AO', label: 'Portuguese - Angola', label_ol: 'português - Angola'},\r\n        {locale: 'pt-BR', label: 'Portuguese - Brazil', label_ol: 'português - Brasil'},\r\n        {locale: 'pt-CV', label: 'Portuguese - Cape Verde', label_ol: 'português - Ilhas de Cabo Verde'},\r\n        {locale: 'pt-CQ', label: 'Portuguese - Equatorial Guinea', label_ol: 'português - Guiné Equatorial'},\r\n        {locale: 'pt-PT', label: 'Portuguese - Portugal', label_ol: 'português - Portugal'},\r\n        {locale: 'ro-RO', label: 'Romanian - Romania', label_ol: 'română - România'},\r\n        {locale: 'ru-BY', label: 'Russian - Belarus', label_ol: 'русский - Беларусь'},\r\n        {locale: 'ru-GE', label: 'Russian - Georgia', label_ol: 'русский - Грузия'},\r\n        {locale: 'ru-KG', label: 'Russian - Kyrgyzstan', label_ol: 'русский - Киргизия'},\r\n        {locale: 'ru-KZ', label: 'Russian - Kazahkstan', label_ol: 'русский - Казахстан'},\r\n        {locale: 'ru-RU', label: 'Russian - Russia', label_ol: 'русский - Русские Федерации'},\r\n        {locale: 'ru-UA', label: 'Russian - Ukraine', label_ol: 'русский - Украина'},\r\n        {locale: 'sr-Latn-ME', label: 'Serbian - Montenegro', label_ol: 'srpski - Montenegro'},\r\n        {locale: 'rs-Latn-RS', label: 'Serbian - Serbia', label_ol: 'srpski - Srbija'},\r\n        {locale: 'sk-SK', label: 'Slovakian - Slovakia', label_ol: 'slovenský - Slovensko'},\r\n        {locale: 'sl-SI', label: 'Slovenian - Slovenia', label_ol: 'Slovenski - Slovenija'},\r\n        {locale: 'es-AR', label: 'Spanish - Argentina', label_ol: 'español - Argentina'},\r\n        {locale: 'es-BO', label: 'Spanish - Bolivia', label_ol: 'español - Bolivia'},\r\n        {locale: 'es-CL', label: 'Spanish - Chile', label_ol: 'español - Chile'},\r\n        {locale: 'es-CO', label: 'Spanish - Colombia', label_ol: 'español - Colombia'},\r\n        {locale: 'es-CR', label: 'Spanish - Costa Rica', label_ol: 'español - Costa Rica'},\r\n        {locale: 'es-DO', label: 'Spanish - Dominican Republic', label_ol: 'español - República Dominicana'},\r\n        {locale: 'es-EC', label: 'Spanish - Ecuador', label_ol: 'español - Ecuador'},\r\n        {locale: 'es-SV', label: 'Spanish - El Salvador', label_ol: 'español - El Salvador'},\r\n        {locale: 'es-GQ', label: 'Spanish - Equatorial Guinea', label_ol: 'español - Guinea Ecuatorial'},\r\n        {locale: 'es-GT', label: 'Spanish - Guatemala', label_ol: 'español - Guatamala'},\r\n        {locale: 'es-HN', label: 'Spanish - Honduras', label_ol: 'español - Honduras'},\r\n        {locale: 'es-MX', label: 'Spanish - Mexico', label_ol: 'español - México'},\r\n        {locale: 'es-NI', label: 'Spanish - Nicaragua', label_ol: 'español - Nicaragua'},\r\n        {locale: 'es-PA', label: 'Spanish - Panama', label_ol: 'español - Panamá'},\r\n        {locale: 'es-PY', label: 'Spanish - Paraguay', label_ol: 'español - Paraguay'},\r\n        {locale: 'es-PE', label: 'Spanish - Peru', label_ol: 'español - Perú'},\r\n        {locale: 'es-PH', label: 'Spanish - Philippines', label_ol: 'español - Filipinas'},\r\n        {locale: 'es-PR', label: 'Spanish - Puerto Rico', label_ol: 'español - Puerto Rico'},\r\n        {locale: 'es-ES', label: 'Spanish - Spain', label_ol: 'español - España'},\r\n        {locale: 'es-US', label: 'Spanish - USA', label_ol: 'español - Estados Unidos'},\r\n        {locale: 'es-UY', label: 'Spanish - Uruguay', label_ol: 'español - Uruguay'},\r\n        {locale: 'es-VE', label: 'Spanish - Venezuela', label_ol: 'español - Venezuela'},\r\n        {locale: 'sv-FI', label: 'Swedish - Finland', label_ol: 'svenska - Finland'},\r\n        {locale: 'sv-SE', label: 'Swedish - Sweden', label_ol: 'svenska - Sverige'},\r\n        {locale: 'th-TH', label: 'Thai - Thailand', label_ol: 'ภาษาไทย - ประเทศไทย'},\r\n        {locale: 'tr-AM', label: 'Turkish - Armenia', label_ol: 'Türk - Ermenistan'},\r\n        {locale: 'tr-AZ', label: 'Turkish - Azerbaijan', label_ol: 'Türk - Azerbeycan'},\r\n        {locale: 'tr-CY', label: 'Turkish - Cyprus', label_ol: 'Türk - Kıbrıs'},\r\n        {locale: 'tr-TR', label: 'Turkish - Turkey', label_ol: 'Türk - Türkiye'},\r\n        {locale: 'uk-UA', label: 'Ukranian - Ukraine', label_ol: 'Українська - Україна'},\r\n        {locale: 'uz-Cyrl-UZ', label: 'Uzbek - Uzbekistan', label_ol: 'Ўзбек - Ўзбекистон Республикаси'},\r\n        {locale: 'uz-Latn-UZ', label: 'Uzbek - Uzbekistan', label_ol: 'Oʻzbek - O‘zbekiston Respublikasi'},\r\n        {locale: 'vi-VN', label: 'Vietnamese - Vietnam', label_ol: 'Việt - Việt Nam'},\r\n        {locale: 'as-IN', label: 'Assamese - India', label_ol: 'অসমীয়া - ভাৰত'},\r\n        {locale: 'bn-IN', label: 'Bengali - India', label_ol: 'বাংলা - ভারত'},\r\n        {locale: 'gu-IN', label: 'Gujarati - India', label_ol: 'ગુજરાતી - ભારત'},\r\n        {locale: 'kn-IN', label: 'Kannada - India', label_ol: 'ಕನ್ನಡ - ಭಾರತ'},\r\n        {locale: 'ml-IN', label: 'Malayalam - India', label_ol: 'മലയാളം - ഇന്ത്യ'},\r\n        {locale: 'mr-IN', label: 'Marathi - India', label_ol: 'मराठी - भारत'},\r\n        {locale: 'pa-IN', label: 'Punjabi - India', label_ol: 'ਪੰਜਾਬੀ - ਭਾਰਤ'},\r\n        {locale: 'pa-PK', label: 'Punjabi - Pakistan', label_ol: 'ਪੰਜਾਬੀ - ਪਾਕਿਸਤਾਨ'},\r\n        {locale: 'ta-IN', label: 'Tamil - India', label_ol: 'தமிழ் - இந்தியா'},\r\n        {locale: 'te-IN', label: 'Telugu - India', label_ol: 'తెలుగు - ఇండియా'},\r\n        {locale: 'ur-IN', label: 'Urdu - India', label_ol: 'بھارت -  اُردُو'},\r\n        {locale: 'ur-PK', label: 'Urdu - Pakistan', label_ol: 'پاکستان -  اُردُو'}\r\n    ],\r\n\r\n    components: [\r\n        {name: 'switcherLocale', kind: Select, onchange: 'setLocale'}\r\n    ],\r\n\r\n    create: function () {\r\n        this.inherited(arguments);\r\n        var curLocale = ilib.getLocale();\r\n        for(var i = 0; i < this.locales.length; i++) {\r\n            this.$.switcherLocale.createComponent({value: this.locales[i].locale, content: this.locales[i].locale +' ('+ this.locales[i].label +' / '+ this.locales[i].label_ol +')', selected: this.locales[i].locale.toLowerCase() === curLocale.toLowerCase()});\r\n        }\r\n    },\r\n\r\n    setLocale: function (sender, ev) {\r\n        this.setValue(this.$.switcherLocale.value);\r\n        this.bubble('onSelectedLocale', {content: this.$.switcherLocale.value});\r\n    }\r\n});","var\r\n\tkind = require('enyo/kind'),\r\n\tSelect = require('enyo/Select');\r\n\r\nvar\r\n\tCurrency = require('enyo-ilib/Currency'),\r\n\tLocaleInfo = require('enyo-ilib/LocaleInfo');\r\n\r\nvar\r\n\trb = require('./ResBundle');\r\n\r\nmodule.exports = kind({\r\n\tname: 'ilib.sample.ChooseCurrency',\r\n\r\n\tpublished: {\r\n\t\t'value': ''\r\n\t},\r\n\r\n\tcomponents: [\r\n\t\t{content: rb.getString('Currency'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t{name: 'currencies', kind: Select, onselect: 'setCurrency'}\r\n\t],\r\n\r\n\tcreate: function () {\r\n\t\tthis.inherited(arguments);\r\n\t\tthis.initCurrencies();\r\n\t\tthis.value = this.$.currencies.selected.content;\r\n\t},\r\n\r\n\tinitCurrencies: function () {\r\n\t\tvar currencies = Currency.getAvailableCurrencies();\r\n\t\tfor (var i = 0; i < currencies.length; ++i) {\r\n\t\t\tthis.$.currencies.createComponent({content: currencies[i]});\r\n\t\t}\r\n\t\t// pre-selects the current locale's currency\r\n\t\tthis.selectCurrency();\r\n\t},\r\n\r\n\tselectCurrency: function (locale) {\r\n\t\tvar li = new LocaleInfo(locale);\r\n\t\tvar currency = li['info'].currency;\r\n\t\tvar components = this.$.currencies.getClientControls();\r\n\t\tvar selected;\r\n\t\tif (components[0])\r\n\t\t\tselected = components[0];\r\n\t\tfor (var i = 0; i < components.length; ++i)\r\n\t\t\tif (components[i].content === currency) {\r\n\t\t\t\tselected = components[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\tthis.$.currencies.setSelected(selected);\r\n\t},\r\n\r\n\tsetCurrency: function (sender, ev) {\r\n\t\tthis.setValue(ev.selected.content);\r\n\t\tthis.bubble('onSelectedCurrency', {content: ev.selected.content});\r\n\t}\r\n});\r\n","var\r\n\tkind = require('enyo/kind'),\r\n\tButton = require('enyo/Button'),\r\n\tControl = require('enyo/Control'),\r\n\tInput = require('enyo/Input');\r\n\r\nvar\r\n\tAddress = require('enyo-ilib/Address'),\r\n\tAddressFmt = require('enyo-ilib/AddressFmt');\r\n\r\nvar\r\n\tChooseLocale = require('./ChooseLocale'),\r\n\trb = require('./ResBundle');\r\n\r\nmodule.exports = kind({\r\n\tname: 'ilib.sample.AddressFormatting',\r\n\tkind: Control,\r\n\r\n\tcomponents: [\r\n\t\t{style: 'margin: 10px;', components: [\r\n\t\t\t{kind: ChooseLocale, name: 'localeSelector'},\r\n\t\t\t{tag: 'span', style: 'display: inline-block; width: 20px'},\r\n\t\t\t{kind: Button, content: rb.getString('Apply'), ontap: 'calcFormat', style: 'vertical-align: bottom;', classes: 'onyx-affirmative'}\r\n\t\t]},\r\n\t\t{classes: 'sample-result-box', components: [\r\n\t\t\t{classes: 'sample-result-box-header', content: rb.getString('Street Address')},\r\n\t\t\t{tag: 'label', components: [\r\n\t\t\t\t{kind: Input, style: 'width:100%', name: 'stAddress',placeholder: rb.getString('Enter Street')}\r\n\t\t\t]}\r\n\t\t]},\r\n\t\t{classes: 'sample-result-box', components: [\r\n\t\t\t{classes: 'sample-result-box-header', content: rb.getString('City/Locality')},\r\n\t\t\t{tag: 'label', components: [\r\n\t\t\t\t{kind: Input, style: 'width:100%', name: 'city', placeholder: rb.getString('Enter city')}\r\n\t\t\t]}\r\n\t\t]},\r\n\t\t{classes: 'sample-result-box', components: [\r\n\t\t\t{classes: 'sample-result-box-header', content: rb.getString('postal code/Zip')},\r\n\t\t\t{tag: 'label', components: [\r\n\t\t\t\t{kind: Input, style: 'width:100%', name: 'postalCode', placeholder: rb.getString('Enter postalcode')}\r\n\t\t\t]}\r\n\t\t]},\r\n\t\t{classes: 'sample-result-box', components: [\r\n\t\t\t{classes: 'sample-result-box-header', content: rb.getString('State/Province')},\r\n\t\t\t{tag: 'label', components: [\r\n\t\t\t\t{kind: Input, style: 'width:100%', name: 'state', placeholder: rb.getString('Enter state')}\r\n\t\t\t]}\r\n\t\t]},\r\n\t\t{classes: 'sample-result-box', components: [\r\n\t\t\t{classes: 'sample-result-box-header', content: rb.getString('Country')},\r\n\t\t\t{tag: 'label', components: [\r\n\t\t\t\t{kind: Input, style: 'width:100%', name: 'country', placeholder: rb.getString('Enter Country')}\r\n\t\t\t]}\r\n\t\t]},\r\n\t\t{classes: 'sample-result-box', components: [\r\n\t\t\t{classes: 'sample-result-box-header', content: rb.getString('Format result: ')},\r\n\t\t\t{name: 'rtlResult', allowHtml:true, content: '-', style: 'padding: 10px'}\r\n\t\t]}\r\n\t],\r\n\r\n\tcalcFormat: function (sender, ev) {\r\n\t\t// Processing parameters\r\n\t\tvar options = {\r\n\t\t\tlocale: this.$.localeSelector.getValue()\r\n\t\t};\r\n\r\n\t\tvar address = new Address({\r\n\t\t\tstreetAddress:this.$.stAddress.getValue(),\r\n\t\t\tlocality: this.$.city.getValue(),\r\n\t\t\tpostalCode: this.$.postalCode.getValue(),\r\n\t\t\tregion: this.$.state.getValue(),\r\n\t\t\tcountry:this.$.country.getValue()\r\n\t\t});\r\n\r\n\t\tvar formatter = new AddressFmt(options);\r\n\t\tvar postFmtData = formatter.format(address);\r\n\t\tthis.$.rtlResult.setContent(postFmtData);\r\n\t}\r\n});\r\n","var\r\n\tkind = require('enyo/kind'),\r\n\tButton = require('enyo/Button'),\r\n\tControl = require('enyo/Control'),\r\n\tInput = require('enyo/Input');\r\n\r\nvar\r\n\tAddress = require('enyo-ilib/Address');\r\n\r\nvar\r\n\tChooseLocale = require('./ChooseLocale'),\r\n\trb = require('./ResBundle');\r\n\r\nmodule.exports = kind({\r\n\tname: 'ilib.sample.AddressParsing',\r\n\tkind: Control,\r\n\tcomponents: [\r\n\t\t{style: 'margin: 10px;', components: [\r\n\t\t\t{kind: ChooseLocale, name: 'localeSelector'},\r\n\t\t\t{tag: 'span', style: 'display: inline-block; width: 20px'},\r\n\t\t\t{kind: Button, content: rb.getString('Apply'), ontap: 'calcFormat', style: 'vertical-align: bottom;', classes: 'onyx-affirmative'}\r\n\t\t]},\r\n\t\t{classes: 'sample-result-box', components: [\r\n\t\t\t{classes: 'sample-result-box-header', content: rb.getString('Address')},\r\n\t\t\t{tag: 'label', components: [\r\n\t\t\t\t{kind: Input, style: 'width:100%', name: 'address', placeholder: rb.getString('Enter Address')}\r\n\t\t\t]}\r\n\t\t]},\r\n\t\t{classes: 'sample-result-box', components: [\r\n\t\t\t{classes: 'sample-result-box-header', content: rb.getString('Format result: ')},\r\n\t\t\t{name: 'rtlResult', allowHtml: true, content: '-', style: 'padding: 10px'}\r\n\t\t]}\r\n\t],\r\n\r\n\tcalcFormat: function (sender, ev) {\r\n\t\t// Formatting\r\n\t\tvar parsedAddress = new Address(this.$.address.getValue());\r\n\r\n\t\tvar output = '';\r\n\r\n\t\tif (parsedAddress) {\r\n\t\t\tif (parsedAddress.streetAddress) {\r\n\t\t\t\toutput += 'streetAddress: ' + parsedAddress.streetAddress + '<br>';\r\n\t\t\t}\r\n\t\t\tif (parsedAddress.locality) {\r\n\t\t\t\toutput += 'locality: ' + parsedAddress.locality + '<br>';\r\n\t\t\t}\r\n\t\t\tif (parsedAddress.region) {\r\n\t\t\t\toutput += 'region: ' + parsedAddress.region + '<br>';\r\n\t\t\t}\r\n\t\t\tif (parsedAddress.postalCode) {\r\n\t\t\t\toutput += 'Postal code: ' + parsedAddress.postalCode + '<br>';\r\n\t\t\t}\r\n\t\t\tif (parsedAddress.country) {\r\n\t\t\t\toutput += 'country: ' + parsedAddress.country + '<br>';\r\n\t\t\t}\r\n\t\t\tif (parsedAddress.countryCode) {\r\n\t\t\t\toutput += 'countryCode: ' + parsedAddress.countryCode + '<br>';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.$.rtlResult.setContent(output);\r\n\t}\r\n});\r\n","var\r\n\tkind = require('enyo/kind'),\r\n\tGroup = require('enyo/Group'),\r\n\tTextArea = require('enyo/TextArea');\r\n\r\nvar\r\n\tilib = require('enyo-ilib'),\r\n\tLocaleInfo = require('enyo-ilib/LocaleInfo');\r\n\r\nvar\r\n\tChooseLocale = require('../ChooseLocale'),\r\n\trb = require('../ResBundle');\r\n\r\n\r\nmodule.exports = kind({\r\n\tname: 'ilib.sample.LocaleInfo',\r\n\tclasses: 'onyx ilib-onyx-sample enyo-fit',\r\n\r\n\tcomponents: [\r\n\t\t/* Header with selecting locale */\r\n\t\t{kind: ChooseLocale, onSelectedLocale: 'setLocale'},\r\n\t\t{tag: 'br'},\r\n\t\t{kind: Group, classes: 'onyx-sample-result-box', components: [\r\n\t\t\t{content: rb.getString('Current Locale')},\r\n\t\t\t{name: 'currentLocateData', kind: TextArea, style: 'box-sizing: border-box; width: 100%; height: 600px;'}\r\n\t\t]}\r\n\t],\r\n\r\n\tcreate: function () {\r\n\t\tthis.inherited(arguments);\r\n\t\t/* Fill in info on current locale */\r\n\t\tthis.printItemLocale(ilib.getLocale());\r\n\t},\r\n\r\n\tsetLocale: function (sender, ev) {\r\n\t\t/* Fill in info on selected locale */\r\n\t\tthis.printItemLocale(ev.content);\r\n\t},\r\n\r\n\tprintItemLocale: function (locale) {\r\n\t\tif (this.$['currentLocateData']) {\r\n\t\t\tthis.$.currentLocateData.destroyComponents();\r\n\t\t\tthis.$.currentLocateData.createComponent({content: 'getLocale : ' + locale, style: 'font-size: 16px'});\r\n\t\t\tvar localeInfo = new LocaleInfo(locale);\r\n\t\t\tvar str = JSON.stringify(localeInfo, null, '\\t').replace(/\"([^\"]+)\"/g, '$1').replace(/,$/mg, '');\r\n\t\t\tthis.$.currentLocateData.set('value', str);\r\n\t\t}\r\n\t}\r\n});\r\n","var\r\n\tkind = require('enyo/kind');\r\n\r\nvar\r\n\tCollection = require('enyo/Collection'),\r\n\tScroller = require('enyo/Scroller'),\r\n\tDataRepeater = require('enyo/DataRepeater');\r\n\r\nvar\r\n\tLink = require('../Link');\r\n\r\nmodule.exports = kind({\r\n\tkind: Scroller,\r\n\tclasses: 'strawman-list enyo-fit',\r\n\tsamples: null,\r\n\tlibraryName: '',\r\n\tlistType: 'list',\r\n\tcomponents: [\r\n\t\t{name: 'repeater', classes: 'list-frame', kind: DataRepeater, components: [\r\n\t\t\t{kind: Link, classes: 'item', bindings: [\r\n\t\t\t\t{from: 'model.name', to: 'href', transform: function (v) {\r\n\t\t\t\t\t\tvar href = \"#\" + v;\r\n\t\t\t\t\t\tif (!this.owner.libraryName) { href = v + '/index.html'; }\r\n\t\t\t\t\t\treturn href;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{from: 'model.name', to: 'content', transform: function (v) {\r\n\t\t\t\t\t\tvar name = v.replace(/Sample$/i, '');\r\n\t\t\t\t\t\tif (!this.owner.libraryName) {\r\n\t\t\t\t\t\t\tname = this.owner.samples[v] || name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn name;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{from: 'model.badgeClasses', to: 'badgeClasses'}\r\n\t\t\t]}\r\n\t\t]}\r\n\t],\r\n\tbindings: [\r\n\t\t{from: 'samples', to: '$.repeater.collection', transform: function (v) {\r\n\t\t\t\tif (!v) { return v; }\r\n\t\t\t\treturn (v instanceof Collection) ? v : new Collection(Object.keys(v).map(function (key) {\r\n\t\t\t\t\t// Make an object that contains all of the strings and booleans etc that we can use as a model for our sample collection.\r\n\t\t\t\t\tvar sampleModel = {name: key};\r\n\t\t\t\t\tfor (var prop in v[key]) {\r\n\t\t\t\t\t\t// Don't bother copying functions\r\n\t\t\t\t\t\tif (typeof v[key][prop] != 'function') {\r\n\t\t\t\t\t\t\tsampleModel[prop] = v[key][prop];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn sampleModel;\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tcreate: function () {\r\n\t\tthis.inherited(arguments);\r\n\t\tthis.listTypeChanged();\r\n\t},\r\n\tlistTypeChanged: function (old) {\r\n\t\tthis.$.repeater.removeClass(old);\r\n\t\tthis.$.repeater.addClass(this.get('listType'));\r\n\t}\r\n});\r\n","var\r\n\tkind = require('enyo/kind'),\r\n\tButton = require('enyo/Button'),\r\n\tCheckbox = require('enyo/Checkbox'),\r\n\tGroup = require('enyo/Group'),\r\n\tInput = require('enyo/Input'),\r\n\tScroller = require('enyo/Scroller');\r\n\r\nvar\r\n\tName = require('enyo-ilib/Name'),\r\n\tNameFmt = require('enyo-ilib/NameFmt');\r\n\r\nvar\r\n\tChooseLocale = require('../ChooseLocale'),\r\n\trb = require('../ResBundle');\r\n\r\n\r\nmodule.exports = kind({\r\n\tname: 'ilib.sample.NameFormatting',\r\n\tclasses: 'onyx ilib-onyx-sample enyo-fit',\r\n\tcomponents: [\r\n\t\t{kind: Scroller, fit: true, components: [\r\n\t\t\t{components: [\r\n\t\t\t\t/* Header with selecting locale */\r\n\t\t\t\t{kind: ChooseLocale, name: 'localeSelector'},\r\n\t\t\t\t{style: 'width: 20px'},\r\n\t\t\t\t{kind: Button, content: rb.getString('Apply'), ontap: 'nameFormat', style: 'vertical-align: bottom;', classes: 'onyx-affirmative'},\r\n\t\t\t\t{fit: true}\r\n\t\t\t]},\r\n\t\t\t{tag: 'br'},\r\n\r\n\t\t\t{content: rb.getString('Length'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t{kind: Group, defaultKind: Button, name: 'length', onActivate: 'buttonActivated', components: [\r\n\t\t\t\t{content: 'Short', active: true, name:'short'},\r\n\t\t\t\t{content: 'Medium'},\r\n\t\t\t\t{content: 'Long'}\r\n\t\t\t]},\r\n\r\n\t\t\t{content: rb.getString('(or) Parts'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t{classes: 'namepart', components: [\r\n\t\t\t\t{kind: Checkbox, name: 'prefixCbox', content: 'Prefix ', onchange:'checkboxChanged'},\r\n\t\t\t\t{kind: Checkbox, name: 'givenCbox',  content: 'Given ',  onchange:'checkboxChanged'},\r\n\t\t\t\t{kind: Checkbox, name: 'middleCbox', content: 'Middle ', onchange:'checkboxChanged'},\r\n\t\t\t\t{kind: Checkbox, name: 'familyCbox', content: 'Family ',  onchange:'checkboxChanged'},\r\n\t\t\t\t{kind: Checkbox, name: 'suffixCbox', content: 'Suffix ',  onchange:'checkboxChanged'}\r\n\t\t\t]},\r\n\r\n\t\t\t{components: [\r\n\t\t\t\t{content: rb.getString('Prefix'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t\t{kind: Input, name: 'prefixInput', placeholder: rb.getString('Prefix')},\r\n\t\t\t\t{content: rb.getString('Given Name'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t\t{kind: Input, name: 'givenInput', placeholder: rb.getString('Given Name')},\r\n\t\t\t\t{content: rb.getString('Middle Name'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t\t{kind: Input, name: 'middleInput', placeholder: rb.getString('Middle Name')},\r\n\t\t\t\t{content: rb.getString('Family Name'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t\t{kind: Input, name: 'familyInput', placeholder: rb.getString('Family Name')},\r\n\t\t\t\t{content: rb.getString('Suffix'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t\t{kind: Input, name: 'suffixInput', placeholder: rb.getString('Suffix')}\r\n\t\t\t]}\r\n\t\t]},\r\n\t\t{tag: 'br'},\r\n\t\t{kind: Group, classes:'onyx-sample-result-box', components: [\r\n\t\t\t{content: rb.getString('Format result:')},\r\n\t\t\t{name: 'rtlResult', fit: true, content: '-', style: 'padding: 10px'}\r\n\t\t]}\r\n\t],\r\n\r\n\tbuttonActivated: function (sender, ev) {\r\n\r\n\t\tif (this.$.length.getActive().content === 'Short') {\r\n\t\t\tthis.$.prefixCbox.setChecked(false);\r\n\t\t\tthis.$.givenCbox.setChecked(true);\r\n\t\t\tthis.$.middleCbox.setChecked(false);\r\n\t\t\tthis.$.familyCbox.setChecked(true);\r\n\t\t\tthis.$.suffixCbox.setChecked(false);\r\n\t\t} else if (this.$.length.getActive().content === 'Medium') {\r\n\t\t\tthis.$.prefixCbox.setChecked(false);\r\n\t\t\tthis.$.givenCbox.setChecked(true);\r\n\t\t\tthis.$.middleCbox.setChecked(true);\r\n\t\t\tthis.$.familyCbox.setChecked(true);\r\n\t\t\tthis.$.suffixCbox.setChecked(false);\r\n\t\t} else if (this.$.length.getActive().content === 'Long') {\r\n\t\t\tthis.$.prefixCbox.setChecked(true);\r\n\t\t\tthis.$.givenCbox.setChecked(true);\r\n\t\t\tthis.$.middleCbox.setChecked(true);\r\n\t\t\tthis.$.familyCbox.setChecked(true);\r\n\t\t\tthis.$.suffixCbox.setChecked(true);\r\n\t\t}\r\n\t},\r\n\r\n\tcheckboxChanged: function (sender, ev) {\r\n\t\tif (!this.$.prefixCbox.getChecked() && !this.$.givenCbox.getChecked() && !this.$.middleCbox.getChecked() &&\r\n\t\t\t!this.$.familyCbox.getChecked() && !this.$.suffixCbox.getChecked()) {\r\n\t\t\tthis.$['short'].setActive(true);\r\n\t\t} else {\r\n\t\t\tthis.$.length.setActive(false);\r\n\t\t}\r\n\t},\r\n\r\n\tnameFormat: function (sender, ev) {\r\n\r\n\t\t// Processing parameters\r\n\r\n\t\tvar nameLength = this.$.length.getActive().content;\r\n\t\tvar parts = [];\r\n\r\n\t\tif (this.$.prefixCbox.getChecked()) {\r\n\t\t\tparts.push('p');\r\n\t\t}\r\n\t\tif (this.$.givenCbox.getChecked()) {\r\n\t\t\tparts.push('g');\r\n\t\t}\r\n\t\tif (this.$.middleCbox.getChecked()) {\r\n\t\t\tparts.push('m');\r\n\t\t}\r\n\t\tif (this.$.familyCbox.getChecked()) {\r\n\t\t\tparts.push('f');\r\n\t\t}\r\n\t\tif (this.$.suffixCbox.getChecked()) {\r\n\t\t\tparts.push('s');\r\n\t\t}\r\n\r\n\t\tvar options = {\r\n\t\t\tlocale : this.$.localeSelector.getValue()\r\n\t\t};\r\n\r\n\t\tif (nameLength) {\r\n\t\t\toptions.style = nameLength;\r\n\t\t}\r\n\r\n\t\tif (parts.length > 0) {\r\n\t\t\toptions.components = parts.join('');\r\n\t\t}\r\n\r\n\t\tvar n = {\r\n\t\t\tprefix: this.$.prefixInput.getValue(),\r\n\t\t\tgivenName: this.$.givenInput.getValue(),\r\n\t\t\tmiddleName: this.$.middleInput.getValue(),\r\n\t\t\tfamilyName: this.$.familyInput.getValue(),\r\n\t\t\tsuffix: this.$.suffixInput.getValue(),\r\n\t\t\tlocale: this.$.localeSelector.getValue()\r\n\t\t};\r\n\t\t// Formatting\r\n\t\tvar name = new Name(n);\r\n\t\tvar fmt = new NameFmt(options);\r\n\t\tvar postFmtData = 'The name is: ' + fmt.format(name);\r\n\t\t// Output results\r\n\t\tthis.$.rtlResult.setContent(postFmtData);\r\n\t}\r\n});","var\r\n\tkind = require('enyo/kind');\r\n\r\nvar\r\n\tButton = require('enyo/Button'),\r\n\tGroup = require('enyo/Group'),\r\n\tInput = require('enyo/Input'),\r\n\tScroller = require('enyo/Scroller');\r\n\r\nvar\r\n\tName = require('enyo-ilib/Name');\r\n\r\nvar\r\n\tChooseLocale = require('../ChooseLocale'),\r\n\trb = require('../ResBundle');\r\n\r\nmodule.exports = kind({\r\n\tname: 'ilib.sample.NameParsing',\r\n\tclasses: 'onyx ilib-onyx-sample enyo-fit',\r\n\tcomponents: [\r\n\t\t{kind: Scroller, fit: false, components: [\r\n\t\t\t{components: [\r\n\t\t\t\t/* Header with selecting locale */\r\n\t\t\t\t{kind: ChooseLocale, name: 'localeSelector'},\r\n\t\t\t\t{style: 'width: 20px'},\r\n\t\t\t\t{kind: Button, content: rb.getString('Apply'), ontap: 'calcFormat', style: 'vertical-align: bottom;', classes: 'onyx-affirmative'}\r\n\t\t\t]}\r\n\t\t]},\r\n\t\t{tag: 'br'},\r\n\t\t{kind: Group, classes:'onyx-sample-result-box', components: [\r\n\t\t\t{content: rb.getString('Name')},\r\n\t\t\t{kind: Input, style:'width:100%', name: 'name', placeholder: rb.getString('Enter Name')}\r\n\t\t]},\r\n\t\t{tag: 'br'},\r\n\t\t{kind: Group, classes:'onyx-sample-result-box', components: [\r\n\t\t\t{content: rb.getString('Parsed result:')},\r\n\t\t\t{name: 'rtlResult', fit: true, content: '-', allowHtml:true, style: 'padding: 10px'}\r\n\t\t]}\r\n\t],\r\n\r\n\tcalcFormat: function (sender, ev) {\r\n\t\t// Processing parameters\r\n\t\tvar options = {\r\n\t\t\tlocale: this.$.localeSelector.getValue()\r\n\t\t};\r\n\r\n\t\t// Parsing\r\n\t\tvar nameStr = this.$.name.getValue();\r\n\t\tvar name = new Name(nameStr, options);\r\n\t\tvar output = '';\r\n\t\tif (name.prefix) {\r\n\t\t\toutput += 'Prefix: ' + name.prefix + '<br>';\r\n\t\t}\r\n\t\tif (name.givenName) {\r\n\t\t\toutput += 'Given name: ' + name.givenName + '<br>';\r\n\t\t}\r\n\t\tif (name.middleName) {\r\n\t\t\toutput += 'Middle name: ' + name.middleName + '<br>';\r\n\t\t}\r\n\t\tif (name.familyName) {\r\n\t\t\toutput += 'Family name: ' + name.familyName + '<br>';\r\n\t\t}\r\n\t\tif (name.suffix) {\r\n\t\t\toutput += 'Suffix: ' + name.suffix + '<br>';\r\n\t\t}\r\n\t\toutput += '<br/>';\r\n\t\tthis.$.rtlResult.setContent(output);\r\n\t}\r\n});","var\r\n\tkind = require('enyo/kind');\r\n\r\nvar\r\n\tButton = require('enyo/Button'),\r\n\tGroup = require('enyo/Group'),\r\n\tInput = require('enyo/Input'),\r\n\tScroller = require('enyo/Scroller'),\r\n\tSelect = require('enyo/Select');\r\n\r\nvar\r\n\tNum = require('enyo-ilib/INumber'),\r\n\tNumFmt = require('enyo-ilib/NumFmt');\r\n\r\nvar\r\n\tChooseLocale = require('../ChooseLocale'),\r\n\tChooseCurrency = require('../ChooseCurrency'),\r\n\trb = require('../ResBundle');\r\n\r\nmodule.exports = kind({\r\n\tname: 'ilib.sample.NumberFormatting',\r\n\tclasses: 'onyx ilib-onyx-sample enyo-fit',\r\n\tcomponents: [\r\n\t\t{kind: Scroller, fit: true, components: [\r\n\t\t\t{components: [\r\n\t\t\t\t/* Header with selecting locale */\r\n\t\t\t\t{kind: ChooseLocale, name: 'localeSelector', onSelectedLocale: 'setLocale'},\r\n\t\t\t\t{style: 'width: 20px'},\r\n\t\t\t\t{kind:  Button, content: rb.getString('Apply'), ontap: 'calcFormat', style: 'vertical-align: bottom;', classes: 'onyx-affirmative'},\r\n\t\t\t\t{fit: true}\r\n\t\t\t]},\r\n\t\t\t{tag: 'br'},\r\n\r\n\t\t\t{content: rb.getString('Type'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t{kind: Group, defaultKind: Button, name: 'type', onActivate: 'buttonActivated', components: [\r\n\t\t\t\t{content: 'number', active: true},\r\n\t\t\t\t{content: 'percentage'},\r\n\t\t\t\t{content: 'currency'}\r\n\t\t\t]},\r\n\r\n\r\n\t\t\t{components: [\r\n\t\t\t\t{components: [\r\n\t\t\t\t\t{content: rb.getString('Max Frac Digits'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t\t\t{kind: Input, name: 'maxFractionDigits', placeholder: rb.getString('Enter number')}\r\n\t\t\t\t]},\r\n\t\t\t\t{style: 'width: 20px'},\r\n\t\t\t\t{components: [\r\n\t\t\t\t\t{content: rb.getString('Min Frac Digits'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t\t\t{kind: Input, name: 'minFractionDigits', placeholder: rb.getString('Enter number')}\r\n\t\t\t\t]},\r\n\t\t\t\t{fit: true}\r\n\t\t\t]},\r\n\r\n\r\n\t\t\t{content: rb.getString('Rounding Mode'), classes: 'ilib-onyx-sample-divider'},\r\n\t\t\t{kind: Group, defaultKind: Button, name: 'roundingMode', components: [\r\n\t\t\t\t{content: 'up'},\r\n\t\t\t\t{content: 'down'},\r\n\t\t\t\t{content: 'ceiling'},\r\n\t\t\t\t{content: 'floor'},\r\n\t\t\t\t{content: 'half up', active: true},\r\n\t\t\t\t{content: 'half down'},\r\n\t\t\t\t{content: 'half even'},\r\n\t\t\t\t{content: 'half odd'}\r\n\t\t\t]},\r\n\r\n\t\t\t{name: 'numberParams', components: [\r\n\t\t\t\t{content: rb.getString('Style'), classes: 'ilib-onyx-sample-divider'},\r\n\r\n\t\t\t\t{name: 'styleOfNumber', kind: Select, components: [\r\n\t\t\t\t\t{content: 'standard', active: true},\r\n\t\t\t\t\t{content: 'scientific'}\r\n\t\t\t\t]}\r\n\r\n\t\t\t]},\r\n\r\n\t\t\t{name: 'currencyParams', components: [\r\n\t\t\t\t{content: rb.getString('Style'), classes: 'ilib-onyx-sample-divider'},\r\n\r\n\t\t\t\t{name: 'styleOfCurrency', kind: Select, components: [\r\n\t\t\t\t\t{content: 'common', active: true},\r\n\t\t\t\t\t{content: 'iso'}\r\n\t\t\t\t]},\r\n\r\n\t\t\t\t{kind: ChooseCurrency, name: 'currency'}\r\n\t\t\t]},\r\n\r\n\t\t\t{tag: 'br'}\r\n\t\t]},\r\n\r\n\t\t{kind: Group, classes:'onyx-sample-result-box', components: [\r\n\t\t\t{content: rb.getString('Number')},\r\n\t\t\t{kind: Input, name: 'number', placeholder: rb.getString('Enter number')}\r\n\t\t]},\r\n\t\t{tag: 'br'},\r\n\t\t{kind: Group, classes:'onyx-sample-result-box', components: [\r\n\t\t\t{content: rb.getString('Format result:')},\r\n\t\t\t{name: 'rtlResult', fit: true, content: '-', style: 'padding: 10px'}\r\n\t\t]}\r\n\t],\r\n\r\n\tsetLocale: function (sender, ev) {\r\n\t\tif (this.$['currency'])\r\n\t\t\tthis.$.currency.selectCurrency(this.$.localeSelector.getValue());\r\n\t},\r\n\r\n\tbuttonActivated: function (sender, ev) {\r\n\t\tthis.updateParameters();\r\n\t},\r\n\r\n\tupdateParameters: function () {\r\n\t\tthis.$.numberParams.setShowing(this.$.type.getActive().content === 'number');\r\n\t\tthis.$.currencyParams.setShowing(this.$.type.getActive().content === 'currency');\r\n\t},\r\n\r\n\tcalcFormat: function (sender, ev) {\r\n\t\t// Processing parameters\r\n\t\tvar options = {\r\n\t\t\tlocale: this.$.localeSelector.getValue(),\r\n\t\t\ttype: this.$.type.getActive().content,\r\n\t\t\troundingMode: this.$.roundingMode.getActive().content\r\n\t\t};\r\n\t\tif ((parseInt(this.$.maxFractionDigits.getValue(), 10) || 0) !== 0)\r\n\t\t\toptions.maxFractionDigits = parseInt(this.$.maxFractionDigits.getValue(), 10);\r\n\t\tif ((parseInt(this.$.minFractionDigits.getValue(), 10) || 0) !== 0)\r\n\t\t\toptions.minFractionDigits = parseInt(this.$.minFractionDigits.getValue(), 10);\r\n\t\tif (options.type === 'number')\r\n\t\t\toptions.style = this.$.styleOfNumber.getSelected().content;\r\n\t\tif (options.type === 'currency') {\r\n\t\t\toptions.style = this.$.styleOfCurrency.getSelected().content;\r\n\t\t\toptions.currency = this.$.currency.getValue();\r\n\t\t}\r\n\t\t// Formatting\r\n\t\tvar num = new Num(this.$.number.getValue());\r\n\t\tvar fmt = new NumFmt(options);\r\n\t\tvar postFmtData = fmt.format(num);\r\n\t\t// Output results\r\n\t\tthis.$.rtlResult.setContent(postFmtData);\r\n\t}\r\n});\r\n","var\r\n\tkind = require('enyo/kind'),\r\n\tplatform = require('enyo/platform');\r\n\r\nvar\r\n\tLink = require('../Link'),\r\n\tList = require('../List'),\r\n\tTitle = require('../Title'),\r\n\tAppRouter = require('../AppRouter');\r\n\r\nmodule.exports = kind({\r\n\ttitle: 'Samples',\r\n\tclasses: 'strawman',\r\n\tpublished: {\r\n\t\tsample: null,\r\n\t\tlocale: 'local'\r\n\t},\r\n\thandlers: {\r\n\t\tonRouteChange: 'handleRoute'\r\n\t},\r\n\tlistComponents: [\r\n\t\t{name: 'title', kind: Title},\r\n\t\t{name: 'back', kind: Link, classes: 'back-button', content: 'Back', href: '../index.html'},\r\n\t\t{name: 'list', kind: List}\r\n\t],\r\n\tcreate: function () {\r\n\t\tthis.inherited(arguments);\r\n\t\tthis.createComponent({name: 'router', kind: AppRouter});\r\n\t\tif (this.libraryName && this.version) {\r\n\t\t\t// only display version information for individual libraries that are versioned\r\n \t\t\tconsole.log('%c%s: %s', 'color:blue', this.libraryName, this.version);\r\n \t\t}\r\n \t},\r\n \thandleRoute: function (sender, ev) {\r\n\t\tthis.set('locale', ev.locale);\r\n\t\tthis.set('sample', ev.sampleName);\r\n\t},\r\n\tsampleChanged: function (was, is) {\r\n\t\tif (was) {\r\n\t\t\tif(this.$[was]) { this.$[was].destroy(); }\r\n\t\t} else {\r\n\t\t\tif(this.$.title) { this.$.title.destroy(); }\r\n\t\t\tif(this.$.back) { this.$.back.destroy(); }\r\n\t\t\tif(this.$.list) { this.$.list.destroy(); }\r\n\t\t}\r\n\t\tif (is && this.samples[is]) {\r\n\t\t\tif(platform.webos && global.screen.width<=400 && this.libraryName!=='Garnet') {\r\n\t\t\t\tthis.addClass('wearable-sample');\r\n\t\t\t}\r\n\t\t\tglobal.sample = this.createComponent({name:is, kind: this.samples[is], classes:'strawman-sample'});\r\n\t\t} else {\r\n\t\t\t// We have no sample, just render out the list.\r\n\t\t\tthis.removeClass('wearable-sample');\r\n\t\t\tthis.createComponents(this.listComponents);\r\n\t\t\tthis.binding({from: 'title',       to: '$.title.content'});\r\n\t\t\tthis.binding({from: 'samples',     to: '$.list.samples'});\r\n\t\t\tthis.binding({from: 'listType',    to: '$.list.listType'});\r\n\t\t\tthis.binding({from: 'libraryName', to: '$.list.libraryName'});\r\n\r\n\t\t\t// Don't show back if we're at home.\r\n\t\t\tthis.$.back.set('showing', !!this.libraryName);\r\n\t\t}\r\n\t\tthis.render();\r\n\t}\r\n});\r\n","var\r\n\tScroller = require('enyo/Scroller');\r\n\r\nvar\r\n\tSampleList = require('./SampleList');\r\n\r\nmodule.exports = SampleList.kind({\r\n\tcomponents: [\r\n\t\t{name: 'client', kind: Scroller, classes: 'enyo-fit'},\r\n\t\t{content: '<', classes: 'strawman-sample-back', ontap:'goBack'}\r\n\t],\r\n\tgoBack: function() {\r\n \t\tglobal.history.go(-1);\r\n \t\treturn false;\r\n  \t}\r\n});\r\n","// For simplicity, we'll require the full ilib since this is the root of the sample 'app'. The\r\n// individual samples can then safely import the root enyo-ilib package knowing that the app\r\n// registered which version it wanted.\r\n// require('enyo-ilib/full');\r\n\r\nrequire('enyo/options').accessibility = true;\r\n\r\nvar\r\n\tkind = require('enyo/kind'),\r\n\tready = require('enyo/ready');\r\n\r\nvar\r\n\tEnyo_iLib = require('enyo-ilib');\r\n\r\nvar\r\n\tScrollingSampleList = require('../strawman/ScrollingSampleList');\r\n\r\nvar\r\n\tsamples = {\r\n\t\tAddressFormatting\t: require('./src/AddressFormatting'),\r\n\t\tAddressParsing\t\t: require('./src/AddressParsing'),\r\n\t\t// AdvDateFormatting\t: require('./src/AdvDateFormatting'), //still has onyx timepicker\r\n\t\t// DateFormatting: require('./src/DateFormatting'),\r\n\t\tLocaleInfo: require('./src/LocaleInfo'),\r\n\t\tNameFormatting: require('./src/NameFormatting'),\r\n\t\tNameParsing: require('./src/NameParsing'),\r\n\t\tNumberFormatting: require('./src/NumberFormatting')\r\n\t};\r\n\r\nvar Sample = kind({\r\n\tkind: ScrollingSampleList,\r\n\ttitle: 'iLib Samples',\r\n\tversion: Enyo_iLib.enyo.version,\r\n\tlibraryName: 'iLib',\r\n\tsamples: samples\r\n});\r\n\r\nready(function() {\r\n\tnew Sample().renderInto(document.body);\r\n});\r\n\r\n"]}