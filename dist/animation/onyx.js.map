{"version":3,"sources":["..\\..\\lib\\onyx\\index.js","..\\..\\lib\\onyx\\src\\ProgressBar\\ProgressBar.js","..\\..\\lib\\onyx\\src\\Slider\\Slider.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxfile":"generated.js","sourceRoot":"","sourcesContent":["/**\r\n* Features a variety of commonly used widgets, including toolbars, text inputs, checkboxes, groups\r\n* and multiple types of buttons.\r\n*\r\n* @namespace onyx\r\n*/\r\nmodule.exports.version = \"2.7.0\";\r\n\r\nvar dom = require('enyo/dom');\r\ndom.addBodyClass('onyx');\r\n","require('onyx');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:onyx/ProgressBar~ProgressBar} kind.\r\n* @module onyx/ProgressBar\r\n*/\r\n\r\nvar\r\n\tkind = require('enyo/kind'),\r\n\tAnimator = require('enyo/Animator'),\r\n\tControl = require('enyo/Control');\r\n\r\n/**\r\n* Fires when progress bar finishes animating to a position.\r\n*\r\n* @event module:onyx/ProgressBar~ProgressBar#onAnimateProgressFinish\r\n* @type {module:enyo/Animator~Animator}\r\n* @todo Not sure why the animator is passed as the payload to the event ...\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:onyx/ProgressBar~ProgressBar} is a control that shows the current progress of a\r\n* process in a horizontal bar.\r\n*\r\n* ```javascript\r\n* \tvar\r\n* \t\tkind = require('enyo/kind'),\r\n* \t\tProgressBar = require('onyx/ProgressBar');\r\n*\r\n* \t{kind: ProgressBar, progress: 10}\r\n* ```\r\n*\r\n* To animate a progress change, call the\r\n* [animateProgressTo()]{@link module:onyx/ProgressBar~ProgressBar#animateProgressTo} method:\r\n*\r\n* ```javascript\r\n* \tthis.$.progressBar.animateProgressTo(50);\r\n* ```\r\n*\r\n* You may customize the color of the bar by applying a style via the\r\n* [barClasses]{@link module:onyx/ProgressBar~ProgressBar#barClasses} property, e.g.:\r\n*\r\n* ```\r\n* \tvar\r\n* \t\tkind = require('enyo/kind'),\r\n* \t\tProgressBar = require('onyx/ProgressBar');\r\n*\r\n* \t{kind: ProgressBar, barClasses: 'onyx-dark'}\r\n* ```\r\n*\r\n* @class ProgressBar\r\n* @extends module:enyo/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:onyx/ProgressBar~ProgressBar.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'onyx.ProgressBar',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclasses: 'onyx-progress-bar',\r\n\r\n\t/**\r\n\t* @lends module:onyx/ProgressBar~ProgressBar.prototype\r\n\t* @private\r\n\t*/\r\n\tpublished: {\r\n\t\t/**\r\n\t\t* Current position of progress bar.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default  0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tprogress: 0,\r\n\r\n\t\t/**\r\n\t\t* Minimum progress value (i.e., no progress made).\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default  0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tmin: 0,\r\n\r\n\t\t/**\r\n\t\t* Maximum progress value (i.e., process complete).\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default  100\r\n\t\t* @public\r\n\t\t*/\r\n\t\tmax: 100,\r\n\r\n\t\t/**\r\n\t\t* CSS classes to apply to progress bar.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default  ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tbarClasses: '',\r\n\r\n\t\t/**\r\n\t\t* When `true`, stripes are shown in progress bar.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default  true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tshowStripes: true,\r\n\r\n\t\t/**\r\n\t\t* If `true` (and [showStripes]{@link module:onyx/ProgressBar~ProgressBar#showStripes} is `true`),\r\n\t\t* stripes shown in progress bar are animated.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default  true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tanimateStripes: true,\r\n\r\n\t\t/**\r\n\t\t* Sliders may be \"snapped to\" multiples of this value in either direction.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default  0\r\n\t\t* @public\r\n\t\t* @todo  This doesn't appear to be supported. Only referenced by a method which\r\n\t\t* \titself isn't called by anthing\r\n\t\t*/\r\n\t\tincrement: 0\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonAnimateProgressFinish: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcomponents: [\r\n\t\t{name: 'progressAnimator', kind: Animator, onStep: 'progressAnimatorStep', onEnd: 'progressAnimatorComplete'},\r\n\t\t{name: 'bar', classes: 'onyx-progress-bar-bar'}\r\n\t],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcreate: function () {\r\n\t\tControl.prototype.create.apply(this, arguments);\r\n\t\tthis.progressChanged();\r\n\t\tthis.barClassesChanged();\r\n\t\tthis.showStripesChanged();\r\n\t\tthis.animateStripesChanged();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tbarClassesChanged: function (old) {\r\n\t\tthis.$.bar.removeClass(old);\r\n\t\tthis.$.bar.addClass(this.barClasses);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tshowStripesChanged: function () {\r\n\t\tthis.$.bar.addRemoveClass('striped', this.showStripes);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tanimateStripesChanged: function () {\r\n\t\tthis.$.bar.addRemoveClass('animated', this.animateStripes);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tprogressChanged: function () {\r\n\t\tthis.progress = this.clampValue(this.min, this.max, this.progress);\r\n\t\tvar p = this.calcPercent(this.progress);\r\n\t\tthis.updateBarPosition(p);\r\n\t},\r\n\r\n\t/**\r\n\t* Clamps a specified value to the nearest [increment]{@link module:onyx/ProgressBar~ProgressBar#increment}\r\n\t* value.\r\n\t*\r\n\t* @param  {Number} value - The value to clamp.\r\n\t* @return {Number}         - The clamped value.\r\n\t* @private\r\n\t*/\r\n\tcalcIncrement: function (value) {\r\n\t\treturn (Math.round(value / this.increment) * this.increment);\r\n\t},\r\n\r\n\t/**\r\n\t* Ensures that passed-in value is between the specified minimum and maximum.\r\n\t*\r\n\t* @param  {Number} min   - Minimum value.\r\n\t* @param  {Number} max   - Maximum value.\r\n\t* @param  {Number} value - The value to clamp.\r\n\t* @return {Number}         - The clamped value.\r\n\t* @private\r\n\t*/\r\n\tclampValue: function (min, max, value) {\r\n\t\treturn Math.max(min, Math.min(value, max));\r\n\t},\r\n\r\n\t/**\r\n\t* Calculates the completion ratio.\r\n\t*\r\n\t* @param  {Number} value - Value between `min` and `max`.\r\n\t* @return {Number}         - Completion ratio (between `0` and `1`).\r\n\t* @private\r\n\t*/\r\n\tcalcRatio: function (value) {\r\n\t\treturn (value - this.min) / (this.max - this.min);\r\n\t},\r\n\r\n\t/**\r\n\t* Calculates the completion percentage.\r\n\t*\r\n\t* @param  {Number} value - Value between `min` and `max`.\r\n\t* @return {Number}         - Completion percentage (between `0` and `100`).\r\n\t* @private\r\n\t*/\r\n\tcalcPercent: function (value) {\r\n\t\treturn this.calcRatio(value) * 100;\r\n\t},\r\n\r\n\t/**\r\n\t* Positions the progress bar at specified completion percentage.\r\n\t*\r\n\t* @param  {Number} percent - Completion percentage corresponding to desired position.\r\n\t* @private\r\n\t*/\r\n\tupdateBarPosition: function (percent) {\r\n\t\tthis.$.bar.applyStyle('width', percent + '%');\r\n\t},\r\n\r\n\t/**\r\n\t* Animates progress to the given value.\r\n\t*\r\n\t* @param  {Number} value - The desired value. Will be clamped between\r\n\t* \t[min]{@link module:onyx/ProgressBar~ProgressBar#min} and [max]{@link module:onyx/ProgressBar~ProgressBar#max}.\r\n\t* @public\r\n\t*/\r\n\tanimateProgressTo: function (value) {\r\n\t\tthis.$.progressAnimator.play({\r\n\t\t\tstartValue: this.progress,\r\n\t\t\tendValue: value,\r\n\t\t\tnode: this.hasNode()\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t* Handles [onStep]{@link module:enyo/Animator~Animator#onStep} animation events.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tprogressAnimatorStep: function (sender) {\r\n\t\tthis.setProgress(sender.value);\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t* Handles [onEnd]{@link module:enyo/Animator~Animator#onEnd} animation events.\r\n\t*\r\n\t* @fires module:onyx/ProgressBar~ProgressBar#onAnimateProgressFinish\r\n\t* @private\r\n\t*/\r\n\tprogressAnimatorComplete: function (sender) {\r\n\t\tthis.doAnimateProgressFinish(sender);\r\n\t\treturn true;\r\n\t}\r\n});\r\n","require('onyx');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:onyx/Slider~Slider} kind.\r\n* @module onyx/Slider\r\n*/\r\n\r\nvar\r\n\tkind = require('enyo/kind'),\r\n\tAnimator = require('enyo/Animator');\r\n\r\nvar\r\n\tProgressBar = require('onyx/ProgressBar');\r\n\r\n/**\r\n* Fires when bar position is set.\r\n*\r\n* @event module:onyx/Slider~Slider#onChange\r\n* @type {Object}\r\n* @property {Number} value - The new bar position.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires while control knob is being dragged.\r\n*\r\n* @event module:onyx/Slider~Slider#onChanging\r\n* @type {Object}\r\n* @property {Number} value - The current bar position.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when animation to a position finishes.\r\n*\r\n* @event module:onyx/Slider~Slider#onAnimateFinish\r\n* @type {module:enyo/Animator~Animator}\r\n* @public\r\n* @todo  Animator as the payload; overlap with\r\n* \t{@link module:onyx/ProgressBar~ProgressBar#onAnimateProgressFinish}\r\n*/\r\n\r\n/**\r\n* {@link module:onyx/Slider~Slider} is a control that presents a range of selection options\r\n* in the form of a horizontal slider with a control knob. The knob may be\r\n* tapped and dragged to the desired location.\r\n*\r\n* ```\r\n* var\r\n* \tSlider = require('onyx.Slider');\r\n*\r\n* {kind: Slider, value: 30}\r\n* ```\r\n*\r\n* [onChanging]{@link module:onyx/Slider~Slider#onChanging} events are fired while the\r\n* control knob is being dragged, and an [onChange]{@link module:onyx/Slider~Slider#onChange}\r\n* event is fired when the position is set, either by finishing a drag or by tapping\r\n* the bar.\r\n*\r\n* @class Slider\r\n* @extends module:onyx/ProgressBar~ProgressBar\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:onyx/Slider~Slider.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'onyx.Slider',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: ProgressBar,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclasses: 'onyx-slider',\r\n\r\n\t/**\r\n\t* @lends module:onyx/Slider~Slider.prototype\r\n\t* @private\r\n\t*/\r\n\tpublished: {\r\n\t\t/**\r\n\t\t* Position of slider, expressed as an integer between `0` and `100`, inclusive.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default  0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tvalue: 0,\r\n\r\n\t\t/**\r\n\t\t* When `true`, current progress will be styled differently from rest of bar.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default  true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tlockBar: true,\r\n\r\n\t\t/**\r\n\t\t* When `true`, tapping on bar will change current position.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default  true\r\n\t\t* @public\r\n\t\t*/\r\n\t\ttappable: true\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonChange: '',\r\n\t\tonChanging: '',\r\n\t\tonAnimateFinish: ''\r\n\t},\r\n\r\n\t/**\r\n\t* If `true`, stripes are shown in the slider bar.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default  false\r\n\t* @public\r\n\t*/\r\n\tshowStripes: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tondragstart: 'dragstart',\r\n\t\tondrag: 'drag',\r\n\t\tondragfinish: 'dragfinish'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmoreComponents: [\r\n\t\t{kind: Animator, onStep: 'animatorStep', onEnd: 'animatorComplete'},\r\n\t\t{classes: 'onyx-slider-taparea'},\r\n\t\t{name: 'knob', classes: 'onyx-slider-knob'}\r\n\t],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcreate: function () {\r\n\t\tProgressBar.prototype.create.apply(this, arguments);\r\n\r\n\t\t// add handlers for up/down events on knob for pressed state (workaround for inconsistent (timing-wise) active:hover styling)\r\n\t\tthis.moreComponents[2].ondown = 'knobDown';\r\n\t\tthis.moreComponents[2].onup = 'knobUp';\r\n\r\n\t\tthis.createComponents(this.moreComponents);\r\n\t\tthis.valueChanged();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tvalueChanged: function () {\r\n\t\tthis.value = this.clampValue(this.min, this.max, this.value);\r\n\t\tif (!this.$.animator.isAnimating()) {\r\n\t\t\tthis.updateBar(this.value);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tupdateBar: function (value) {\r\n\t\tvar p = this.calcPercent(value);\r\n\t\tthis.updateKnobPosition(p);\r\n\t\tif (this.lockBar) {\r\n\t\t\tthis.setProgress(value);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tupdateKnobPosition: function (percent) {\r\n\t\tthis.$.knob.applyStyle('left', percent + '%');\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcalcKnobPosition: function (event) {\r\n\t\tvar x = event.clientX - this.hasNode().getBoundingClientRect().left;\r\n\t\treturn (x / this.getBounds().width) * (this.max - this.min) + this.min;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdragstart: function (sender, event) {\r\n\t\tif (event.horizontal) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tthis.dragging = true;\r\n\t\t\tsender.addClass('pressed');\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @fires module:onyx/Slider~Slider#onChanging\r\n\t* @private\r\n\t*/\r\n\tdrag: function (sender, event) {\r\n\t\tif (this.dragging) {\r\n\t\t\tvar v = this.calcKnobPosition(event);\r\n\t\t\tv = (this.increment) ? this.calcIncrement(v) : v;\r\n\t\t\tthis.setValue(this.clampValue(this.min, this.max, v));\r\n\t\t\tthis.doChanging({value: this.value});\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @fires module:onyx/Slider~Slider#onChange\r\n\t* @private\r\n\t*/\r\n\tdragfinish: function (sender, event) {\r\n\t\tthis.dragging = false;\r\n\t\tevent.preventTap();\r\n\t\tthis.doChange({value: this.value});\r\n\t\tsender.removeClass('pressed');\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttap: function (sender, event) {\r\n\t\tif (this.tappable) {\r\n\t\t\tvar v = this.calcKnobPosition(event);\r\n\t\t\tv = (this.increment) ? this.calcIncrement(v) : v;\r\n\t\t\tthis.tapped = true;\r\n\t\t\tthis.animateTo(v);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tknobDown: function (sender, event) {\r\n\t\tthis.$.knob.addClass('pressed');\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tknobUp: function (sender, event) {\r\n\t\tthis.$.knob.removeClass('pressed');\r\n\t},\r\n\r\n\t/**\r\n\t* Animates to the given value.\r\n\t*\r\n\t* @param  {Number} value - The value to animate to.\r\n\t* @public\r\n\t* @todo  functional overlap with {@link module:onyx/ProgressBar~ProgressBar#animateProgressTo}\r\n\t*/\r\n\tanimateTo: function (value) {\r\n\t\tthis.$.animator.play({\r\n\t\t\tstartValue: this.value,\r\n\t\t\tendValue: value,\r\n\t\t\tnode: this.hasNode()\r\n\t\t});\r\n\r\n\t\tthis.setValue(value);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tanimatorStep: function (sender) {\r\n\t\tthis.updateBar(sender.value);\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t* @fires module:onyx/Slider~Slider#onChange\r\n\t* @fires module:onyx/Slider~Slider#onAnimateFinish\r\n\t* @private\r\n\t*/\r\n\tanimatorComplete: function (sender) {\r\n\t\tif (this.tapped) {\r\n\t\t\tthis.tapped = false;\r\n\t\t\tthis.doChange({value: this.value});\r\n\t\t}\r\n\t\tthis.doAnimateFinish(sender);\r\n\t\treturn true;\r\n\t}\r\n});\r\n"]}