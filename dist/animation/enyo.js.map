{"version":3,"sources":["..\\..\\lib\\enyo\\src\\options.js","..\\..\\lib\\enyo\\src\\easing.js","..\\..\\lib\\enyo\\src\\PathResolverFactory.js","..\\..\\lib\\enyo\\index.js","..\\..\\lib\\enyo\\src\\pathResolver.js","..\\..\\lib\\enyo\\src\\ready.js","..\\..\\lib\\enyo\\src\\utils.js","..\\..\\lib\\enyo\\src\\roots.js","..\\..\\lib\\enyo\\src\\json.js","..\\..\\lib\\enyo\\src\\ModelList.js","..\\..\\lib\\enyo\\src\\States.js","..\\..\\lib\\enyo\\src\\transform.js","..\\..\\lib\\enyo\\src\\job.js","..\\..\\lib\\enyo\\src\\platform.js","..\\..\\lib\\enyo\\src\\StateSupport.js","..\\..\\lib\\enyo\\src\\logger.js","..\\..\\lib\\enyo\\src\\dom.js","..\\..\\lib\\enyo\\src\\animation.js","..\\..\\lib\\enyo\\src\\HTMLStringDelegate.js","..\\..\\lib\\enyo\\src\\tween.js","..\\..\\lib\\enyo\\src\\resolution.js","..\\..\\lib\\enyo\\src\\gesture\\util.js","..\\..\\lib\\enyo\\src\\VerticalDelegate.js","..\\..\\lib\\enyo\\src\\scene.js","..\\..\\lib\\enyo\\src\\kind.js","..\\..\\lib\\enyo\\src\\sceneSupport.js","..\\..\\lib\\enyo\\src\\SceneSupport.js","..\\..\\lib\\enyo\\src\\Control\\floatingLayer.js","..\\..\\lib\\enyo\\src\\EventEmitter.js","..\\..\\lib\\enyo\\src\\Source.js","..\\..\\lib\\enyo\\src\\VerticalGridDelegate.js","..\\..\\lib\\enyo\\src\\Layout.js","..\\..\\lib\\enyo\\src\\ApplicationSupport.js","..\\..\\lib\\enyo\\src\\ComponentBindingSupport.js","..\\..\\lib\\enyo\\src\\ComputedSupport.js","..\\..\\lib\\enyo\\src\\HorizontalDelegate.js","..\\..\\lib\\enyo\\src\\MixinSupport.js","..\\..\\lib\\enyo\\src\\Binding.js","..\\..\\lib\\enyo\\src\\MultipleDispatchSupport.js","..\\..\\lib\\enyo\\src\\LinkedListNode.js","..\\..\\lib\\enyo\\src\\BindingSupport.js","..\\..\\lib\\enyo\\src\\RepeaterChildSupport.js","..\\..\\lib\\enyo\\src\\LinkedList.js","..\\..\\lib\\enyo\\src\\ObserverChainNode.js","..\\..\\lib\\enyo\\src\\ObserverChain.js","..\\..\\lib\\enyo\\src\\ObserverSupport.js","..\\..\\lib\\enyo\\src\\CoreObject.js","..\\..\\lib\\enyo\\src\\Store.js","..\\..\\lib\\enyo\\src\\jobs.js","..\\..\\lib\\enyo\\src\\Model.js","..\\..\\lib\\enyo\\src\\Component.js","..\\..\\lib\\enyo\\src\\Collection.js","..\\..\\lib\\enyo\\src\\Animator.js","..\\..\\lib\\enyo\\src\\Signals.js","..\\..\\lib\\enyo\\src\\ScrollMath.js","..\\..\\lib\\enyo\\src\\MultipleDispatchComponent.js","..\\..\\lib\\enyo\\src\\master.js","..\\..\\lib\\enyo\\src\\Controller.js","..\\..\\lib\\enyo\\src\\dispatcher.js","..\\..\\lib\\enyo\\src\\UiComponent.js","..\\..\\lib\\enyo\\src\\AccessibilitySupport\\AccessibilitySupport.js","..\\..\\lib\\enyo\\src\\Control\\fullscreen.js","..\\..\\lib\\enyo\\src\\gesture\\drag.js","..\\..\\lib\\enyo\\src\\gesture\\touchGestures.js","..\\..\\lib\\enyo\\src\\History.js","..\\..\\lib\\enyo\\src\\gesture\\gesture.js","..\\..\\lib\\enyo\\src\\Router.js","..\\..\\lib\\enyo\\src\\Control\\Control.js","..\\..\\lib\\enyo\\src\\touch.js","..\\..\\lib\\enyo\\src\\Image\\Image.js","..\\..\\lib\\enyo\\src\\Input\\Input.js","..\\..\\lib\\enyo\\src\\image\\Image.js","..\\..\\lib\\enyo\\src\\ScrollStrategy.js","..\\..\\lib\\enyo\\src\\Option.js","..\\..\\lib\\enyo\\src\\ScrollThumb\\ScrollThumb.js","..\\..\\lib\\enyo\\src\\DataRepeater.js","..\\..\\lib\\enyo\\src\\GroupItem.js","..\\..\\lib\\enyo\\src\\Checkbox\\Checkbox.js","..\\..\\lib\\enyo\\src\\Select.js","..\\..\\lib\\enyo\\src\\TouchScrollStrategy.js","..\\..\\lib\\enyo\\src\\ToolDecorator\\ToolDecorator.js","..\\..\\lib\\enyo\\src\\TranslateScrollStrategy.js","..\\..\\lib\\enyo\\src\\Button\\Button.js","..\\..\\lib\\enyo\\src\\Scroller\\Scroller.js","..\\..\\lib\\enyo\\src\\DataList\\DataList.js","..\\..\\lib\\enyo\\src\\DataGridList\\DataGridList.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxxtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnltBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzzttltrQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACztifA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtttjnUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACplPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChvprxthmltrhqntpnxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACztfltvUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACllthalspjblprv3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhzzpfile":"generated.js","sourceRoot":"","sourcesContent":["/*jshint node:true */\r\n'use strict';\r\n\r\n/**\r\n* Returns the global enyo options hash\r\n* @module enyo/options\r\n*/\r\n\r\nmodule.exports = (global.enyo && global.enyo.options) || {};\r\n","/**\r\n* Contains set of interpolation functions for animations, similar in function to CSS3 transitions.\r\n* @module enyo/easing\r\n*/\r\n\r\nvar easing = module.exports = {\r\n\t/**\r\n\t* Linear ease with no acceleration\r\n\t* @public\r\n\t*/\r\n\tlinear: function(n) {\r\n\t\treturn n;\r\n\t},\r\n\t/**\r\n\t* Accelerating with second-degree polynomial.\r\n\t* @public\r\n\t*/\r\n\tquadIn: function(t) {\r\n\t\treturn t * t;\r\n\t},\r\n\t/**\r\n\t* Deaccelerating with second-degree polynomial.\r\n\t* @public\r\n\t*/\r\n\tquadOut: function(t) {\r\n\t\treturn -1 * t * (t - 2);\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating with second-degree polynomial.\r\n\t* @public\r\n\t*/\r\n\tquadInOut: function(n) {\r\n\t\tn = n * 2;\r\n\t\tif (n < 1) {\r\n\t\t\treturn Math.pow(n, 2) / 2;\r\n\t\t}\r\n\t\treturn -1 * ((--n) * (n - 2) - 1) / 2;\r\n\t},\r\n\t/**\r\n\t* Accelerating with third-degree polynomial.\r\n\t* @public\r\n\t*/\r\n\tcubicIn: function(n) {\r\n\t\treturn Math.pow(n, 3);\r\n\t},\r\n\t/**\r\n\t* Deaccelerating with third-degree polynomial.\r\n\t* @public\r\n\t*/\r\n\tcubicOut: function(n) {\r\n\t\treturn Math.pow(n - 1, 3) + 1;\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating with third-degree polynomial.\r\n\t* @public\r\n\t*/\r\n\tcubicInOut: function(t) {\r\n\t\tif ((t *= 2) < 1) return 0.5 * t * t * t;\r\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\r\n\t},\r\n\t/**\r\n\t* Accelerating with fourth-degree polynomial\r\n\t* @public\r\n\t*/\r\n\tquartIn: function(t) {\r\n\t\treturn t * t * t * t;\r\n\t},\r\n\t/**\r\n\t* Deaccelerating with fourth-degree polynomial\r\n\t* @public\r\n\t*/\r\n\tquartOut: function(t) {\r\n\t\treturn -1 * (--t * t * t * t - 1);\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating with fourth-degree polynomial\r\n\t* @public\r\n\t*/\r\n\tquartInOut: function(t) {\r\n\t\tif ((t *= 2) < 1) return 0.5 * t * t * t * t;\r\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\r\n\t},\r\n\t/**\r\n\t* Accelerating with fifth-degree polynomial\r\n\t* @public\r\n\t*/\r\n\tquintIn: function(t) {\r\n\t\treturn t * t * t * t * t;\r\n\t},\r\n\t/**\r\n\t* Deaccelerating with fifth-degree polynomial\r\n\t* @public\r\n\t*/\r\n\tquintOut: function(t) {\r\n\t\treturn --t * t * t * t * t + 1;\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating with fifth-degree polynomial\r\n\t* @public\r\n\t*/\r\n\tquintInOut: function(t, d) {\r\n\t\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\r\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\r\n\t},\r\n\t/**\r\n\t* Accelerating using a sine formula\r\n\t* @public\r\n\t*/\r\n\tsineIn: function(t) {\r\n\t\treturn -1 * Math.cos(t * (Math.PI / 2)) + 1;\r\n\t},\r\n\t/**\r\n\t* Deaccelerating using a sine formula\r\n\t* @public\r\n\t*/\r\n\tsineOut: function(t) {\r\n\t\treturn Math.sin(t * (Math.PI / 2));\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating using a sine formula\r\n\t* @public\r\n\t*/\r\n\tsineInOut: function(t) {\r\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\r\n\t},\r\n\t/**\r\n\t* Accelerating using an exponential formula\r\n\t* @public\r\n\t*/\r\n\texpoIn: function(t) {\r\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\r\n\t},\r\n\t/**\r\n\t* Deaccelerating using an exponential formula\r\n\t* @public\r\n\t*/\r\n\texpoOut: function(n) {\r\n\t\treturn (n == 1) ? 1 : (-1 * Math.pow(2, -10 * n) + 1);\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating using an exponential formula\r\n\t* @public\r\n\t*/\r\n\texpoInOut: function(t) {\r\n\t\tif (t === 0) return 0;\r\n\t\tif (t === 1) return 1;\r\n\t\tif ((t *= 2) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\r\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\r\n\t},\r\n\t/**\r\n\t* Accelerating using a circular function\r\n\t* @public\r\n\t*/\r\n\tcircIn: function(t) {\r\n\t\treturn -1 * (Math.sqrt(1 - t * t) - 1);\r\n\t},\r\n\t/**\r\n\t* Deaccelerating using a circular function\r\n\t* @public\r\n\t*/\r\n\tcircOut: function(t) {\r\n\t\treturn Math.sqrt(1 - (--t * t));\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating using a circular function\r\n\t* @public\r\n\t*/\r\n\tcircInOut: function(t) {\r\n\t\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\r\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n\t},\r\n\t/**\r\n\t* Accelerating with a bouncing effect\r\n\t* @public\r\n\t*/\r\n\tbounceIn: function(t) {\r\n\t\treturn 1 - easing.bounceOut(1 - t);\r\n\t},\r\n\t/**\r\n\t* Deaccelerating with a bouncing effect\r\n\t* @public\r\n\t*/\r\n\tbounceOut: function(t) {\r\n\t\tif (t < 0.363636) {\r\n\t\t\treturn 7.5625 * t * t;\r\n\t\t} else if (t < 0.727272) {\r\n\t\t\treturn 7.5625 * (t -= 0.545454) * t + 0.75;\r\n\t\t} else if (t < (2.5 / 2.75)) {\r\n\t\t\treturn 7.5625 * (t -= 0.818182) * t + 0.9375;\r\n\t\t} else {\r\n\t\t\treturn 7.5625 * (t -= 0.954545) * t + 0.984375;\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating with a bouncing effect\r\n\t* @public\r\n\t*/\r\n\tbounceInOut: function(t) {\r\n\t\tif (t < 0.5) return easing.bounceIn(t * 2) * 0.5;\r\n\t\treturn easing.bounceOut(t * 2 - 1) * 0.5 + 0.5;\r\n\t},\r\n\t/**\r\n\t* Accelerating as a spring oscillating back and forth until it comes to rest\r\n\t* @public\r\n\t*/\r\n\telasticIn: function(t, d) {\r\n\t\tvar a = 1,\r\n\t\t\tp = 0,\r\n\t\t\ts = 1.70158;\r\n\t\tif (t === 0) return 0;\r\n\t\tif (t === 1) return 1;\r\n\t\tif (!p) p = d * 0.3;\r\n\t\tif (a < 1) {\r\n\t\t\ta = 1;\r\n\t\t\ts = p / 4;\r\n\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p));\r\n\t},\r\n\t/**\r\n\t* Deaccelerating as a spring oscillating back and forth until it comes to rest\r\n\t* @public\r\n\t*/\r\n\telasticOut: function(t, d) {\r\n\t\tvar a = 1,\r\n\t\t\tp = 0,\r\n\t\t\ts = 1.70158;\r\n\t\tif (t === 0) return 0;\r\n\t\tif (t === 1) return 1;\r\n\t\tif (!p) p = d * 0.3;\r\n\t\tif (a < 1) {\r\n\t\t\ta = 1;\r\n\t\t\ts = p / 4;\r\n\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + 1;\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating as a spring \r\n\t* oscillating back and forth until it comes to rest\r\n\t* @public\r\n\t*/\r\n\telasticInOut: function(t, d) {\r\n\t\tvar a = 1,\r\n\t\t\tp = 0,\r\n\t\t\ts = 1.70158;\r\n\t\tif (t === 0) return 0;\r\n\t\tif ((t *= 2) === 2) return 1;\r\n\t\tif (!p) p = d * (0.3 * 1.5);\r\n\t\tif (a < 1) {\r\n\t\t\ta = 1;\r\n\t\t\ts = p / 4;\r\n\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\tif (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p));\r\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t},\r\n\t/**\r\n\t* Accelerating while retracting slightly before it begins to animate in the path indicated\r\n\t* @public\r\n\t*/\r\n\tbackIn: function(t, d, s) {\r\n\t\tif (!s) s = 1.70158;\r\n\t\treturn t * t * ((s + 1) * t - s);\r\n\t},\r\n\t/**\r\n\t* Deaccelerating while retracting slightly before it begins to animate in the path indicated\r\n\t* @public\r\n\t*/\r\n\tbackOut: function(t, d, s) {\r\n\t\tif (!s) s = 1.70158;\r\n\t\treturn --t * t * ((s + 1) * t + s) + 1;\r\n\t},\r\n\t/**\r\n\t* Halfway accelerating and then deaccelerating while retracting \r\n\t* slightly before it begins to animate in the path indicated\r\n\t* @public\r\n\t*/\r\n\tbackInOut: function(t, d, s) {\r\n\t\tif (!s) s = 1.70158;\r\n\t\tif ((t *= 2) < 1) return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n\t}\r\n};","\r\n\r\nvar PathResolverFactory = module.exports = function() {\r\n\tthis.paths = {};\r\n\tthis.pathNames = [];\r\n};\r\n\r\nPathResolverFactory.prototype = {\r\n\taddPath: function(inName, inPath) {\r\n\t\tthis.paths[inName] = inPath;\r\n\t\tthis.pathNames.push(inName);\r\n\t\tthis.pathNames.sort(function(a, b) {\r\n\t\t\treturn b.length - a.length;\r\n\t\t});\r\n\t\treturn inPath;\r\n\t},\r\n\taddPaths: function(inPaths) {\r\n\t\tif (inPaths) {\r\n\t\t\tfor (var n in inPaths) {\r\n\t\t\t\tthis.addPath(n, inPaths[n]);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tincludeTrailingSlash: function(inPath) {\r\n\t\treturn (inPath && inPath.slice(-1) !== \"/\") ? inPath + \"/\" : inPath;\r\n\t},\r\n\t// replace macros of the form $pathname with the mapped value of paths.pathname\r\n\trewrite: function (inPath) {\r\n\t\tvar working, its = this.includeTrailingSlash, paths = this.paths;\r\n\t\tvar fn = function(macro, name) {\r\n\t\t\tworking = true;\r\n\t\t\treturn its(paths[name]) || '';\r\n\t\t};\r\n\t\tvar result = inPath;\r\n\t\tdo {\r\n\t\t\tworking = false;\r\n\t\t\tfor (var i=0; i<this.pathNames.length; i++) {\r\n\t\t\t\tvar regex = new RegExp(\"\\\\$(\" + this.pathNames[i] + \")(\\\\/)?\", \"g\");\r\n\t\t\t\tresult = result.replace(regex, fn);\r\n\t\t\t}\r\n\t\t} while (working);\r\n\t\treturn result;\r\n\t}\r\n};\r\n","'use strict';\r\n\r\nexports = module.exports = require('./src/options');\r\nexports.version = '2.7.0';\r\n","var PathResolverFactory = require('./PathResolverFactory');\r\n\r\nmodule.exports = new PathResolverFactory();\r\n","require('enyo');\r\n\r\n// we need to register appropriately to know when\r\n// the document is officially ready, to ensure that\r\n// client code is only going to execute at the\r\n// appropriate time\r\n\r\nvar doc = global.document;\r\nvar queue = [];\r\nvar ready = (\"complete\" === doc.readyState);\r\nvar run;\r\nvar init;\r\nvar remove;\r\nvar add;\r\nvar flush;\r\nvar flushScheduled = false;\r\n\r\n/**\r\n* Registers a callback (and optional `this` context) to run after all the Enyo and library code\r\n* has loaded and the `DOMContentLoaded` event (or equivalent on older browsers) has been sent.\r\n* \r\n* If called after the system is in a ready state, runs the supplied code asynchronously at the\r\n* earliest opportunity.\r\n*\r\n* @module enyo/ready\r\n* @param {Function} fn - The method to execute when the DOM is ready.\r\n* @param {Object} [context] - The optional context (`this`) under which to execute the\r\n*\tcallback method.\r\n* @public\r\n*/\r\nmodule.exports = function (fn, context) {\r\n\tqueue.push([fn, context]);\r\n\t// schedule another queue flush if needed to run new ready calls\r\n\tif (ready && !flushScheduled) {\r\n\t\tsetTimeout(flush, 0);\r\n\t\tflushScheduled = true;\r\n\t}\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nrun = function (fn, context) {\r\n\tfn.call(context || global);\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\ninit = function (event) {\r\n\t// if we're interactive, it should be safe to move\r\n\t// forward because the content has been parsed\r\n\tif ((ready = (\"interactive\" === doc.readyState))) {\r\n\t\tif (\"DOMContentLoaded\" !== event.type && \"readystatechange\" !== event.type) {\r\n\t\t\tremove(event.type, init);\r\n\t\t\tflush();\r\n\t\t}\r\n\t}\r\n\t// for legacy WebKit (including webOS 3.x and less) and assurance\r\n\tif ((ready = (\"complete\" === doc.readyState || \"loaded\" === doc.readyState))) {\r\n\t\tremove(event.type, init);\r\n\t\tflush();\r\n\t}\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nadd = function (event, fn) {\r\n\tdoc.addEventListener(event, fn, false);\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nremove = function (event, fn) {\r\n\tdoc.removeEventListener(event, fn, false);\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nflush = function () {\r\n\tif (ready && queue.length) {\r\n\t\twhile (queue.length) {\r\n\t\t\trun.apply(global, queue.shift());\r\n\t\t}\r\n\t}\r\n\tflushScheduled = false;\r\n};\r\n\r\n// ok, let's hook this up\r\nadd(\"DOMContentLoaded\", init);\r\nadd(\"readystatechange\", init);\r\n","require('enyo');\r\n\r\n/**\r\n* A collection of utilities\r\n* @module enyo/utils\r\n*/\r\n\r\n/**\r\n* A polyfill for platforms that don't yet support\r\n* [bind()]{@glossary Function.prototype.bind}. As explained in the linked article, this\r\n* polyfill handles the general use case but cannot exactly mirror the ECMA-262 version 5\r\n* implementation specification. This is an adaptation of the example promoted\r\n* [here]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind}.\r\n*/\r\nif (!Function.prototype.bind) {\r\n\tFunction.prototype.bind = function (ctx) {\r\n\t\t// deliberately used here...\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1),\r\n\t\t\tscop = this,\r\n\t\t\tnop = function () {},\r\n\t\t\tret;\r\n\r\n\t\t// as-per MDN's explanation of this polyfill we're filling in for the IsCallable\r\n\t\t// internal (we can't access it)\r\n\t\tif (typeof this != 'function') {\r\n\t\t\tthrow new TypeError('Function.prototype.bind called on non-callable object.');\r\n\t\t}\r\n\r\n\t\tret = function () {\r\n\t\t\tvar largs = args.concat(Array.prototype.slice.call(arguments)),\r\n\t\t\t\tlctx = this instanceof nop && ctx ? this : ctx;\r\n\r\n\t\t\treturn scop.apply(lctx, largs);\r\n\t\t};\r\n\r\n\t\tnop.prototype = this.prototype;\r\n\r\n\t\t/*jshint -W055 */\r\n\t\tret.prototype = new nop();\r\n\t\t/*jshint +W055 */\r\n\r\n\t\treturn ret;\r\n\t};\r\n}\r\n\r\n/**\r\n* Returns a function that can be extended (via `.extend()`) similar to prototypal inheritance.\r\n* Like {@link module:enyo/kind#inherit}, `extend()` expects as its first argument a factory function\r\n* that returns the new function that will be called instead of the original function. The original\r\n* is available as the first argument to that factory function.\r\n*\r\n* ```javascript\r\n* var\r\n*\tutils = require('enyo/utils');\r\n*\r\n* var factor = new utils.Extensible(function (a, b) {\r\n*\treturn a + b;\r\n* });\r\n* factor(2, 4); // returns 6;\r\n* factor.extend(function (sup) {\r\n*\treturn function (a, b) {\r\n*\t\treturn sup.apply(this, arguments) * b;\r\n*\t};\r\n* });\r\n* factor(2, 4) // return 24;\r\n* ```\r\n*\r\n* @param  {Function} fn - Original function that can be extended\r\n* @param {Object} [ctx] - Context on which `fn` will be called. Defaults to the Extensible instance.\r\n* @return {Function} - A wrapped version of `fn` with the `extend()` method added\r\n*\r\n* @public\r\n*/\r\nexports.Extensible = function Extensible (fn) {\r\n\tif (!(this instanceof Extensible)) return new Extensible(fn);\r\n\r\n\tthis.fn = fn;\r\n\tvar f = function () {\r\n\t\treturn this.fn.apply(this, arguments);\r\n\t}.bind(this);\r\n\r\n\tf.extend = function (factory) {\r\n\t\tthis.fn = factory(this.fn);\r\n\t}.bind(this);\r\n\r\n\treturn f;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nexports.nop = function () {};\r\n\r\n/**\r\n* @private\r\n*/\r\nexports.nob = {};\r\n\r\n/**\r\n* @private\r\n*/\r\nexports.nar = [];\r\n\r\n/**\r\n* This name is reported in inspectors as the type of objects created via delegate;\r\n* otherwise, we would just use {@link module:enyo/utils#nop}.\r\n*\r\n* @private\r\n*/\r\nvar Instance = exports.instance = function () {};\r\n\r\n/**\r\n* @private\r\n*/\r\nvar setPrototype = exports.setPrototype = function (ctor, proto) {\r\n\tctor.prototype = proto;\r\n};\r\n\r\n/**\r\n* Boodman/crockford delegation w/cornford optimization\r\n*\r\n* @private\r\n*/\r\nexports.delegate = function (proto) {\r\n\tsetPrototype(Instance, proto);\r\n\treturn new Instance();\r\n};\r\n\r\n// ----------------------------------\r\n// General Functions\r\n// ----------------------------------\r\n\r\n/**\r\n* Determines whether a variable is defined.\r\n*\r\n* @param {*} target - Anything that can be compared to `undefined`.\r\n* @returns {Boolean} `true` if defined, `false` otherwise.\r\n* @public\r\n*/\r\nvar exists = exports.exists = function (target) {\r\n\treturn (target !== undefined);\r\n};\r\n\r\nvar uidCounter = 0;\r\n\r\n/**\r\n* Creates a unique identifier (with an optional prefix) and returns the identifier as a string.\r\n*\r\n* @param {String} [prefix] - The prefix to prepend to the generated unique id.\r\n* @returns {String} An optionally-prefixed identifier.\r\n* @public\r\n*/\r\nexports.uid = function (prefix) {\r\n\treturn String((prefix? prefix: '') + uidCounter++);\r\n};\r\n\r\n/**\r\n* RFC4122 uuid generator for the browser.\r\n*\r\n* @returns {String} An [RFC4122]{@glossary UUID}-compliant, universally unique identifier.\r\n* @public\r\n*/\r\nexports.uuid = function () {\r\n\t// @TODO: Could possibly be faster\r\n\tvar t, p = (\r\n\t\t(Math.random().toString(16).substr(2,8)) + '-' +\r\n\t\t((t=Math.random().toString(16).substr(2,8)).substr(0,4)) + '-' +\r\n\t\t(t.substr(4,4)) +\r\n\t\t((t=Math.random().toString(16).substr(2,8)).substr(0,4)) + '-' +\r\n\t\t(t.substr(4,4)) +\r\n\t\t(Math.random().toString(16).substr(2,8))\r\n\t);\r\n\treturn p;\r\n};\r\n\r\n/**\r\n* Generates a random number using [Math.random]{@glossary Math.random}.\r\n*\r\n* @param {Number} bound - The multiplier used to generate the product.\r\n* @returns {Number} A random number.\r\n* @public\r\n*/\r\nexports.irand = function (bound) {\r\n\treturn Math.floor(Math.random() * bound);\r\n};\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n* Determines whether a given variable is a [String]{@glossary String}.\r\n*\r\n* @param {*} it - The variable to be tested.\r\n* @returns {Boolean} `true` if variable is a [String]{@glossary String};\r\n* otherwise, `false`.\r\n* @public\r\n*/\r\nexports.isString = function (it) {\r\n\treturn toString.call(it) === '[object String]';\r\n};\r\n\r\n/**\r\n* Determines whether a given variable is a [Function]{@glossary Function}.\r\n*\r\n* @param {*} it - The variable to be tested.\r\n* @returns {Boolean} `true` if variable is a [Function]{@glossary Function};\r\n* otherwise, `false`.\r\n* @public\r\n*/\r\nexports.isFunction = function (it) {\r\n\treturn toString.call(it) === '[object Function]';\r\n};\r\n\r\n/**\r\n* Determines whether a given variable is an [Array]{@glossary Array}.\r\n*\r\n* @param {*} it - The variable to be tested.\r\n* @returns {Boolean} `true` if variable is an [Array]{@glossary Array};\r\n* otherwise, `false`.\r\n* @method\r\n* @public\r\n*/\r\nvar isArray = exports.isArray = Array.isArray || function (it) {\r\n\treturn toString.call(it) === '[object Array]';\r\n};\r\n\r\n/**\r\n* Determines whether a given variable is an [Object]{@glossary Object}.\r\n*\r\n* @param {*} it - The variable to be tested.\r\n* @returns {Boolean} `true` if variable is an [Object]{@glossary Object};\r\n* otherwise, `false`.\r\n* @method\r\n* @public\r\n*/\r\nexports.isObject = Object.isObject || function (it) {\r\n\treturn toString.call(it) === '[object Object]';\r\n};\r\n\r\n/**\r\n* Determines whether a given variable is an explicit boolean `true`.\r\n*\r\n* @param {*} it - The variable to be tested.\r\n* @returns {Boolean} `true` if variable is an explicit `true`; otherwise,\r\n* `false`.\r\n* @public\r\n*/\r\nexports.isTrue = function (it) {\r\n\treturn !(it === 'false' || it === false || it === 0 || it === null || it === undefined);\r\n};\r\n\r\n/**\r\n* Determines whether a given variable is a numeric value.\r\n*\r\n* @param {*} it - The variable to be tested.\r\n* @returns {Boolean} `true` if variable is a numeric value; otherwise,\r\n* `false`.\r\n* @public\r\n*/\r\nexports.isNumeric = function (it) {\r\n\t// borrowed from jQuery\r\n\treturn !isArray(it) && (it - parseFloat(it) + 1) >= 0;\r\n};\r\n\r\n/**\r\n* Binds the `this` context of any method to a scope and a variable number of provided initial\r\n* parameters.\r\n*\r\n* @param {Object} scope - The `this` context for the method.\r\n* @param {(Function|String)} method - A Function or the name of a method to bind.\r\n* @param {...*} [args] Any arguments that will be provided as the initial arguments to the\r\n*                      enclosed method.\r\n* @returns {Function} The bound method/closure.\r\n* @public\r\n*/\r\nvar bind = exports.bind = function (scope, method) {\r\n\tif (!method) {\r\n\t\tmethod = scope;\r\n\t\tscope = null;\r\n\t}\r\n\tscope = scope || global;\r\n\tif (typeof method == 'string') {\r\n\t\tif (scope[method]) {\r\n\t\t\tmethod = scope[method];\r\n\t\t} else {\r\n\t\t\tthrow('enyo.bind: scope[\"' + method + '\"] is null (scope=\"' + scope + '\")');\r\n\t\t}\r\n\t}\r\n\tif (typeof method == 'function') {\r\n\t\tvar args = cloneArray(arguments, 2);\r\n\t\tif (method.bind) {\r\n\t\t\treturn method.bind.apply(method, [scope].concat(args));\r\n\t\t} else {\r\n\t\t\treturn function() {\r\n\t\t\t\tvar nargs = cloneArray(arguments);\r\n\t\t\t\t// invoke with collected args\r\n\t\t\t\treturn method.apply(scope, args.concat(nargs));\r\n\t\t\t};\r\n\t\t}\r\n\t} else {\r\n\t\tthrow('enyo.bind: scope[\"' + method + '\"] is not a function (scope=\"' + scope + '\")');\r\n\t}\r\n};\r\n\r\n/**\r\n* Binds a callback to a scope. If the object has a `destroyed` property that's truthy, then the\r\n* callback will not be run if called. This can be used to implement both\r\n* {@link module:enyo/CoreObject~Object#bindSafely} and {@link module:enyo/CoreObject~Object}-like objects like\r\n* {@link module:enyo/Model~Model} and {@link module:enyo/Collection~Collection}.\r\n*\r\n* @param {Object} scope - The `this` context for the method.\r\n* @param {(Function|String)} method - A Function or the name of a method to bind.\r\n* @param {...*} [args] Any arguments that will be provided as the initial arguments to the\r\n*                      enclosed method.\r\n* @returns {Function} The bound method/closure.\r\n* @public\r\n*/\r\nexports.bindSafely = function (scope, method) {\r\n\tif (typeof method == 'string') {\r\n\t\tif (scope[method]) {\r\n\t\t\tmethod = scope[method];\r\n\t\t} else {\r\n\t\t\tthrow('enyo.bindSafely: scope[\"' + method + '\"] is null (this=\"' + this + '\")');\r\n\t\t}\r\n\t}\r\n\tif (typeof method == 'function') {\r\n\t\tvar args = cloneArray(arguments, 2);\r\n\t\treturn function() {\r\n\t\t\tif (scope.destroyed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar nargs = cloneArray(arguments);\r\n\t\t\treturn method.apply(scope, args.concat(nargs));\r\n\t\t};\r\n\t} else {\r\n\t\tthrow('enyo.bindSafely: scope[\"' + method + '\"] is not a function (this=\"' + this + '\")');\r\n\t}\r\n};\r\n\r\n/**\r\n* Calls the provided `method` on `scope`, asynchronously.\r\n*\r\n* Uses [window.setTimeout()]{@glossary window.setTimeout} with minimum delay,\r\n* usually around 10ms.\r\n*\r\n* Additional arguments are passed to `method` when it is invoked.\r\n*\r\n* If only a single argument is supplied, will just call that function asynchronously without\r\n* doing any additional binding.\r\n*\r\n* @param {Object} scope - The `this` context for the method.\r\n* @param {(Function|String)} method - A Function or the name of a method to bind.\r\n* @param {...*} [args] Any arguments that will be provided as the initial arguments to the\r\n*                      enclosed method.\r\n* @returns {Number} The `setTimeout` id.\r\n* @public\r\n*/\r\nexports.asyncMethod = function (scope, method) {\r\n\tif (!method) {\r\n\t\t// passed just a single argument\r\n\t\treturn setTimeout(scope, 1);\r\n\t} else {\r\n\t\treturn setTimeout(bind.apply(scope, arguments), 1);\r\n\t}\r\n};\r\n\r\n/**\r\n* Calls the provided `method` ([String]{@glossary String}) on `scope` with optional\r\n* arguments `args` ([Array]{@glossary Array}), if the object and method exist.\r\n*\r\n* @example\r\n* \tutils = require('enyo/utils');\r\n* \tutils.call(myWorkObject, 'doWork', [3, 'foo']);\r\n*\r\n* @param {Object} scope - The `this` context for the method.\r\n* @param {(Function|String)} method - A Function or the name of a method to bind.\r\n* @param {Array} [args] - An array of arguments to pass to the method.\r\n* @returns {*} The return value of the method.\r\n* @public\r\n*/\r\nexports.call = function (scope, method, args) {\r\n\tvar context = scope || this;\r\n\tif (method) {\r\n\t\tvar fn = context[method] || method;\r\n\t\tif (fn && fn.apply) {\r\n\t\t\treturn fn.apply(context, args || []);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n* Returns the current time in milliseconds. On platforms that support it,\r\n* [Date.now()]{@glossary Date.now} will be used; otherwise this will\r\n* be equivalent to [new Date().getTime()]{@glossary Date.getTime}.\r\n*\r\n* @returns {Number} Number of milliseconds representing the current time.\r\n* @method\r\n* @public\r\n*/\r\n\r\nvar now = exports.now = Date.now || function () {\r\n\treturn new Date().getTime();\r\n};\r\n\r\n/**\r\n* When [window.performance]{@glossary window.performance} is available, supplies\r\n* a high-precision, high-performance monotonic timestamp, which is independent of\r\n* changes to the system clock and thus safer for use in animation, etc. Falls back to\r\n* {@link module:enyo/utils#now} (based on the JavaScript [Date]{@glossary Date} object),\r\n* which is subject to system time changes.\r\n*\r\n* @returns {Number} Number of milliseconds representing the current time or time since\r\n*                   start of application execution as reported by the platform.\r\n* @method\r\n* @public\r\n*/\r\nexports.perfNow = (function () {\r\n\t// we have to check whether or not the browser has supplied a valid\r\n\t// method to use\r\n\tvar perf = window.performance || {};\r\n\t// test against all known vendor-specific implementations, but use\r\n\t// a fallback just in case\r\n\tperf.now = perf.now || perf.mozNow || perf.msNow || perf.oNow || perf.webkitNow || now;\r\n\treturn function () {\r\n\t\treturn perf.now();\r\n\t};\r\n}());\r\n\r\n/**\r\n* A fast-path enabled global getter that takes a string path, which may be a full path (from\r\n* context window/Enyo) or a relative path (to the execution context of the method). It knows how\r\n* to check for and call the backwards-compatible generated getters, as well as how to handle\r\n* computed properties. Returns `undefined` if the object at the given path cannot be found. May\r\n* safely be called on non-existent paths.\r\n*\r\n* @param {String} path - The path from which to retrieve a value.\r\n* @returns {*} The value for the given path, or `undefined` if the path could not be\r\n*                  completely resolved.\r\n* @method enyo.getPath\r\n* @public\r\n*/\r\nvar getPath = exports.getPath = function (path) {\r\n\t// we're trying to catch only null/undefined not empty string or 0 cases\r\n\tif (!path && path !== null && path !== undefined) return path;\r\n\r\n\tvar next = this,\r\n\t\tparts,\r\n\t\tpart,\r\n\t\tgetter,\r\n\t\tprev;\r\n\r\n\t// obviously there is a severe penalty for requesting get with a path lead\r\n\t// by unnecessary relative notation...\r\n\tif (path[0] == '.') path = path.replace(/^\\.+/, '');\r\n\r\n\t// here's where we check to make sure we have a truthy string-ish\r\n\tif (!path) return;\r\n\r\n\tparts = path.split('.');\r\n\tpart = parts.shift();\r\n\r\n\tdo {\r\n\t\tprev = next;\r\n\t\t// for constructors we must check to make sure they are undeferred before\r\n\t\t// looking for static properties\r\n\t\t// for the auto generated or provided published property support we have separate\r\n\t\t// routines that must be called to preserve compatibility\r\n\t\tif (next._getters && ((getter = next._getters[part])) && !getter.generated) next = next[getter]();\r\n\t\t// for all other special cases to ensure we use any overloaded getter methods\r\n\t\telse if (next.get && next !== this && next.get !== getPath) next = next.get(part);\r\n\t\t// and for regular cases\r\n\t\telse next = next[part];\r\n\t} while (next && (part = parts.shift()));\r\n\r\n\t// if necessary we ensure we've undeferred any constructor that we're\r\n\t// retrieving here as a final property as well\r\n\treturn next;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\ngetPath.fast = function (path) {\r\n\t// the current context\r\n\tvar b = this, fn, v;\r\n\tif (b._getters && (fn = b._getters[path])) {\r\n\t\tv = b[fn]();\r\n\t} else {\r\n\t\tv = b[path];\r\n\t}\r\n\r\n\treturn v;\r\n};\r\n\r\n/**\r\n* @TODO: Out of date...\r\n* A global setter that takes a string path (relative to the method's execution context) or a\r\n* full path (relative to window). Attempts to automatically retrieve any previously existing\r\n* value to supply to any observers. If the context is an {@link module:enyo/CoreObject~Object} or subkind, the\r\n* {@link module:enyo/ObserverSupport~ObserverSupport.notify} method is used to notify listeners for the path's being\r\n* set. If the previous value is equivalent to the newly set value, observers will not be\r\n* triggered by default. If the third parameter is present and is an explicit boolean true, the\r\n* observers will be triggered regardless. Returns the context from which the method was executed.\r\n*\r\n* @param {String} path - The path for which to set the given value.\r\n* @param {*} is - The value to set.\r\n* @param {Object} [opts] - An options hash.\r\n* @returns {this} Whatever the given context was when executed.\r\n* @method enyo.setPath\r\n* @public\r\n*/\r\nvar setPath = exports.setPath = function (path, is, opts) {\r\n\t// we're trying to catch only null/undefined not empty string or 0 cases\r\n\tif (!path || (!path && path !== null && path !== undefined)) return this;\r\n\r\n\tvar next = this,\r\n\t\toptions = {create: true, silent: false, force: false},\r\n\t\tbase = next,\r\n\t\tparts,\r\n\t\tpart,\r\n\t\twas,\r\n\t\tforce,\r\n\t\tcreate,\r\n\t\tsilent,\r\n\t\tcomparator;\r\n\r\n\tif (typeof opts == 'object') opts = mixin({}, [options, opts]);\r\n\telse {\r\n\t\tforce = opts;\r\n\t\topts = options;\r\n\t}\r\n\r\n\tif (opts.force) force = true;\r\n\tsilent = opts.silent;\r\n\tcreate = opts.create;\r\n\tcomparator = opts.comparator;\r\n\r\n\r\n\t// obviously there is a severe penalty for requesting get with a path lead\r\n\t// by unnecessary relative notation...\r\n\tif (path[0] == '.') path = path.replace(/^\\.+/, '');\r\n\r\n\t// here's where we check to make sure we have a truthy string-ish\r\n\tif (!path) return next;\r\n\r\n\tparts = path.split('.');\r\n\tpart = parts.shift();\r\n\r\n\tdo {\r\n\r\n\t\tif (!parts.length) was = next.get && next.get !== getPath? next.get(part): next[part];\r\n\t\telse {\r\n\t\t\t// this allows us to ensure that if we're setting a static property of a constructor we have the\r\n\t\t\t// correct constructor\r\n\t\t\t// @TODO: It seems ludicrous to have to check this on every single part of a chain; if we didn't have\r\n\t\t\t// deferred constructors this wouldn't be necessary and is expensive - unnecessarily so when speed is so important\r\n\t\t\tif (next !== base && next.set && next.set !== setPath) {\r\n\t\t\t\tparts.unshift(part);\r\n\t\t\t\tnext.set(parts.join('.'), is, opts);\r\n\t\t\t\treturn base;\r\n\t\t\t}\r\n\t\t\tif (next !== base && next.get) next = (next.get !== getPath? next.get(part): next[part]) || (create && (next[part] = {}));\r\n\t\t\telse next = next[part] || (create && (next[part] = {}));\r\n\t\t}\r\n\r\n\t} while (next && parts.length && (part = parts.shift()));\r\n\r\n\tif (!next) return base;\r\n\r\n\t// now update to the new value\r\n\tif (next !== base && next.set && next.set !== setPath) {\r\n\t\tnext.set(part, is, opts);\r\n\t\treturn base;\r\n\t} else next[part] = is;\r\n\r\n\t// if possible we notify the changes but this change is notified from the immediate\r\n\t// parent not the root object (could be the same)\r\n\tif (next.notify && !silent && (force || was !== is || (comparator && comparator(was, is)))) next.notify(part, was, is, opts);\r\n\t// we will always return the original root-object of the call\r\n\treturn base;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nsetPath.fast = function (path, value) {\r\n\t// the current context\r\n\tvar b = this,\r\n\t\t// the previous value and helper variable\r\n\t\trv, fn;\r\n\t// we have to check and ensure that we're not setting a computed property\r\n\t// and if we are, do nothing\r\n\tif (b._computed && b._computed[path] !== undefined) {\r\n\t\treturn b;\r\n\t}\r\n\tif (b._getters && (fn=b._getters[path])) {\r\n\t\trv = b[fn]();\r\n\t} else {\r\n\t\trv = b[path];\r\n\t}\r\n\t// set the new value now that we can\r\n\tb[path] = value;\r\n\r\n\t// this method is only ever called from the context of enyo objects\r\n\t// as a protected method\r\n\tif (rv !== value) { b.notifyObservers(path, rv, value); }\r\n\t// return the context\r\n\treturn b;\r\n};\r\n\r\n// ----------------------------------\r\n// String Functions\r\n// ----------------------------------\r\n\r\n/**\r\n* Uppercases a given string. Will coerce to a [String]{@glossary String}\r\n* if possible/necessary.\r\n*\r\n* @param {String} str - The string to uppercase.\r\n* @returns {String} The uppercased string.\r\n* @public\r\n*/\r\nexports.toUpperCase = new exports.Extensible(function (str) {\r\n\tif (str != null) {\r\n\t\treturn str.toString().toUpperCase();\r\n\t}\r\n\treturn str;\r\n});\r\n\r\n/**\r\n* Lowercases a given string. Will coerce to a [String]{@glossary String}\r\n* if possible/necessary.\r\n*\r\n* @param {String} str - The string to lowercase.\r\n* @returns {String} The lowercased string.\r\n* @public\r\n*/\r\nexports.toLowerCase = new exports.Extensible(function (str) {\r\n\tif (str != null) {\r\n\t\treturn str.toString().toLowerCase();\r\n\t}\r\n\treturn str;\r\n});\r\n\r\n/**\r\n* Capitalizes a given string.\r\n*\r\n* @param {String} str - The string to capitalize.\r\n* @returns {String} The capitalized string.\r\n* @public\r\n*/\r\nexports.cap = function (str) {\r\n\treturn str.slice(0, 1).toUpperCase() + str.slice(1);\r\n};\r\n\r\n/**\r\n* Un-capitalizes a given string.\r\n*\r\n* @param {String} str - The string to un-capitalize.\r\n* @returns {String} The un-capitalized string.\r\n* @public\r\n*/\r\nexports.uncap = function (str) {\r\n\treturn str.slice(0, 1).toLowerCase() + str.slice(1);\r\n};\r\n\r\n/**\r\n* Injects an arbitrary number of values, in order, into a template string at\r\n* positions marked by `\"%.\"`.\r\n*\r\n* @param {String} template - The string template to inject with values.\r\n* @param {...String} val The values to inject into the template.\r\n* @returns {String} A copy of the template populated with values.\r\n* @public\r\n*/\r\nexports.format = function (template) {\r\n\tvar pattern = /\\%./g,\r\n\t\targ = 0,\r\n\t\ttmp = template,\r\n\t\targs = arguments,\r\n\t\treplacer;\r\n\r\n\treplacer = function () {\r\n\t\treturn args[++arg];\r\n\t};\r\n\r\n\treturn tmp.replace(pattern, replacer);\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nString.prototype.trim = String.prototype.trim || function () {\r\n\treturn this.replace(/^\\s+|\\s+$/g, '');\r\n};\r\n\r\n/**\r\n* Takes a string and trims leading and trailing spaces. Strings with no length,\r\n* non-strings, and falsy values will be returned without modification.\r\n*\r\n* @param {String} str - The string from which to remove whitespace.\r\n* @returns {String} The trimmed string.\r\n* @public\r\n*/\r\nexports.trim = function (str) {\r\n\treturn (typeof str == 'string' && str.trim()) || str;\r\n};\r\n\r\n// ----------------------------------\r\n// Object Functions\r\n// ----------------------------------\r\n\r\n/**\r\n* A [polyfill]{@glossary polyfill} for platforms that don't support\r\n* [Object.create()]{@glossary Object.create}.\r\n*/\r\nObject.create = Object.create || (function () {\r\n\tvar Anon = function () {};\r\n\treturn function (obj) {\r\n\t\t// in the polyfill we can't support the additional features so we are ignoring\r\n\t\t// the extra parameters\r\n\t\tif (!obj || obj === null || typeof obj != 'object') throw 'Object.create: Invalid parameter';\r\n\t\tAnon.prototype = obj;\r\n\t\treturn new Anon();\r\n\t};\r\n})();\r\n\r\n/**\r\n* A [polyfill]{@glossary polyfill} for platforms that don't support\r\n* [Object.keys()]{@glossary Object.keys}.\r\n*/\r\nObject.keys = Object.keys || function (obj) {\r\n\tvar results = [];\r\n\tvar hop = Object.prototype.hasOwnProperty;\r\n\tfor (var prop in obj) {\r\n\t\tif (hop.call(obj, prop)) {\r\n\t\t\tresults.push(prop);\r\n\t\t}\r\n\t}\r\n\treturn results;\r\n};\r\n\r\n/**\r\n* Returns an array of all known enumerable properties found on a given object.\r\n*\r\n* @alias Object.keys.\r\n* @method enyo.keys\r\n* @public\r\n*/\r\nexports.keys = Object.keys;\r\n\r\n/**\r\n* Convenience method that takes an [array]{@glossary Array} of properties\r\n* and an [object]{@glossary Object} as parameters. Returns a new object\r\n* with only those properties named in the array that are found to exist on the\r\n* base object. If the third parameter is `true`, falsy values will be ignored.\r\n*\r\n* @param {String[]} properties The properties to include on the returned object.\r\n* @param {Object} object - The object from which to retrieve values for the requested properties.\r\n* @param {Boolean} [ignore=false] Whether or not to ignore copying falsy values.\r\n* @returns {Object} A new object populated with the requested properties and values from\r\n*                     the given object.\r\n* @public\r\n*/\r\nexports.only = function (properties, object, ignore) {\r\n\tvar ret = {},\r\n\t\tprop,\r\n\t\tlen,\r\n\t\ti;\r\n\r\n\tfor (i = 0, len = properties.length >>> 0; i < len; ++i) {\r\n\t\tprop = properties[i];\r\n\r\n\t\tif (ignore && (object[prop] === undefined || object[prop] === null)) continue;\r\n\t\tret[prop] = object[prop];\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n* Convenience method that takes two [objects]{@glossary Object} as parameters.\r\n* For each key from the first object, if the key also exists in the second object,\r\n* a mapping of the key from the first object to the key from the second object is\r\n* added to a result object, which is eventually returned. In other words, the\r\n* returned object maps the named properties of the first object to the named\r\n* properties of the second object. The optional third parameter is a boolean\r\n* designating whether to pass unknown key/value pairs through to the new object.\r\n* If `true`, those keys will exist on the returned object.\r\n*\r\n* @param {Object} map - The object with key/value pairs.\r\n* @param {Object} obj - The object whose values will be used.\r\n* @param {Boolean} [pass=false] Whether or not to pass unnamed properties through\r\n*                               from the given object.\r\n* @returns {Object} A new object whose properties have been mapped.\r\n* @public\r\n*/\r\nexports.remap = function (map, obj, pass) {\r\n\tvar ret = pass ? clone(obj) : {},\r\n\t\tkey;\r\n\r\n\tfor (key in map) {\r\n\t\tif (key in obj) ret[map[key]] = obj.get ? obj.get(key) : obj[key];\r\n\t}\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n* Helper method that accepts an [array]{@glossary Array} of\r\n* [objects]{@glossary Object} and returns a hash of those objects indexed\r\n* by the specified `property`. If a `filter` is provided, the filter should\r\n* accept four parameters: the key, the value (object), the current mutable map\r\n* reference, and an immutable copy of the original array of objects for\r\n* comparison.\r\n*\r\n* @param {String} property - The property to index the array by.\r\n* @param {Array} array - An array of property objects.\r\n* @param {Function} [filter] - The filter function to use; accepts four arguments.\r\n* @returns {Object} A hash (object) indexed by the `property` argument\r\n* @public\r\n*/\r\nexports.indexBy = function (property, array, filter) {\r\n\t// the return value - indexed map from the given array\r\n\tvar map = {},\r\n\t\tvalue,\r\n\t\tlen,\r\n\t\tidx = 0;\r\n\t// sanity check for the array with an efficient native array check\r\n\tif (!exists(array) || !(array instanceof Array)) {\r\n\t\treturn map;\r\n\t}\r\n\t// sanity check the property as a string\r\n\tif (!exists(property) || 'string' !== typeof property) {\r\n\t\treturn map;\r\n\t}\r\n\t// the immutable copy of the array\r\n\tvar copy = clone(array);\r\n\t// test to see if filter actually exsits\r\n\tfilter = exists(filter) && 'function' === typeof filter ? filter : undefined;\r\n\tfor (len = array.length; idx < len; ++idx) {\r\n\t\t// grab the value from the array\r\n\t\tvalue = array[idx];\r\n\t\t// make sure that it exists and has the requested property at all\r\n\t\tif (exists(value) && exists(value[property])) {\r\n\t\t\tif (filter) {\r\n\t\t\t\t// if there was a filter use it - it is responsible for\r\n\t\t\t\t// updating the map accordingly\r\n\t\t\t\tfilter(property, value, map, copy);\r\n\t\t\t} else {\r\n\t\t\t\t// use the default behavior - check to see if the key\r\n\t\t\t\t// already exists on the map it will be overwritten\r\n\t\t\t\tmap[value[property]] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// go ahead and return our modified map\r\n\treturn map;\r\n};\r\n\r\n/**\r\n* Creates and returns a shallow copy of an [Object]{@glossary Object} or an\r\n* [Array]{@glossary Array}. For objects, by default, properties will be scanned and\r\n* copied directly to the clone such that they would pass the\r\n* [hasOwnProperty()]{@glossary Object.hasOwnProperty} test. This is expensive and often not\r\n* required. In this case, the optional second parameter may be used to allow a more efficient\r\n* [copy]{@link Object.create} to be made.\r\n*\r\n* @param {(Object|Array)} base - The [Object]{@glossary Object} or\r\n*                              [Array]{@glossary Array} to be cloned.\r\n* @param {Boolean} [quick] - If `true`, when cloning objects, a faster [copy]{@link Object.create}\r\n*                          method will be used. This parameter has no meaning when cloning arrays.\r\n* @returns {*} A clone of the provided `base` if `base` is of the correct type; otherwise,\r\n*              returns `base` as it was passed in.\r\n* @public\r\n*/\r\nvar clone = exports.clone = function (base, quick) {\r\n\tif (base) {\r\n\r\n\t\t// avoid the overhead of calling yet another internal function to do type-checking\r\n\t\t// just copy the array and be done with it\r\n\t\tif (base instanceof Array) return base.slice();\r\n\t\telse if (base instanceof Object) {\r\n\t\t\treturn quick ? Object.create(base) : mixin({}, base);\r\n\t\t}\r\n\t}\r\n\r\n\t// we will only do this if it is not an array or native object\r\n\treturn base;\r\n};\r\n\r\nvar empty = {};\r\nvar mixinDefaults = {\r\n\texists: false,\r\n\tignore: false,\r\n\tfilter: null\r\n};\r\n\r\n/**\r\n\t@todo Rewrite with appropriate documentation for options parameter (typedef)\r\n\t@todo document 'quick' option\r\n\r\n\tWill take a variety of options to ultimately mix a set of properties\r\n\tfrom objects into single object. All configurations accept a boolean as\r\n\tthe final parameter to indicate whether or not to ignore _truthy_/_existing_\r\n\tvalues on any _objects_ prior.\r\n\r\n\tIf _target_ exists and is an object, it will be the base for all properties\r\n\tand the returned value. If the parameter is used but is _falsy_, a new\r\n\tobject will be created and returned. If no such parameter exists, the first\r\n\tparameter must be an array of objects and a new object will be created as\r\n\tthe _target_.\r\n\r\n\tThe _source_ parameter may be an object or an array of objects. If no\r\n\t_target_ parameter is provided, _source_ must be an array of objects.\r\n\r\n\tThe _options_ parameter allows you to set the _ignore_ and/or _exists_ flags\r\n\tsuch that if _ignore_ is true, it will not override any truthy values in the\r\n\ttarget, and if _exists_ is true, it will only use truthy values from any of\r\n\tthe sources. You may optionally add a _filter_ method-option that returns a\r\n\ttrue or false value to indicate whether the value should be used. It receives\r\n\tparameters in this order: _property_, _source value_, _source values_,\r\n\t_target_, _options_. Note that modifying the target in the filter method can\r\n\thave unexpected results.\r\n\r\n\tSetting _options_ to true will set all options to true.\r\n\r\n* @method enyo.mixin\r\n* @public\r\n*/\r\nvar mixin = exports.mixin = function () {\r\n\tvar ret = arguments[0],\r\n\t\tsrc = arguments[1],\r\n\t\topts = arguments[2],\r\n\t\tval;\r\n\r\n\tif (!ret) ret = {};\r\n\telse if (ret instanceof Array) {\r\n\t\topts = src;\r\n\t\tsrc = ret;\r\n\t\tret = {};\r\n\t}\r\n\r\n\tif (!opts || opts === true) opts = mixinDefaults;\r\n\r\n\tif (src instanceof Array) for (var i=0, it; (it=src[i]); ++i) mixin(ret, it, opts);\r\n\telse {\r\n\t\tfor (var key in src) {\r\n\t\t\tval = src[key];\r\n\r\n\t\t\t// quickly ensure the property isn't a default\r\n\t\t\tif (empty[key] !== val) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t(!opts.exists || val) &&\r\n\t\t\t\t\t(!opts.ignore || !ret[key]) &&\r\n\t\t\t\t\t(opts.filter? opts.filter(key, val, src, ret, opts): true)\r\n\t\t\t\t) {\r\n\t\t\t\t\tret[key] = val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n* Returns an [array]{@glossary Array} of the values of all properties in an\r\n* [object]{@glossary Object}.\r\n*\r\n* @param {Object} obj - The [Object]{@glossary Object} to read the values from.\r\n* @returns {Array} An [array]{@glossary Array} with the values from the `obj`.\r\n* @public\r\n*/\r\nexports.values = function (obj) {\r\n\tvar ret = [];\r\n\tfor (var key in obj) {\r\n\t\tif (obj.hasOwnProperty(key)) ret.push(obj[key]);\r\n\t}\r\n\treturn ret;\r\n};\r\n\r\n// ----------------------------------\r\n// Array Functions\r\n// ----------------------------------\r\n\r\n/**\r\n* A [polyfill]{@glossary polyfill} for platforms that don't support\r\n* [Array.findIndex()]{@glossary Array.findIndex}.\r\n*/\r\nArray.prototype.findIndex = Array.prototype.findIndex || function (fn, ctx) {\r\n\tfor (var i=0, len=this.length >>> 0; i<len; ++i) {\r\n\t\tif (fn.call(ctx, this[i], i, this)) return i;\r\n\t}\r\n\treturn -1;\r\n};\r\n\r\n/**\r\n* A [polyfill]{@glossary polyfill} for platforms that don't support\r\n* [Array.find()]{@glossary Array.find}.\r\n*/\r\nArray.prototype.find = Array.prototype.find || function (fn, ctx) {\r\n\tfor (var i=0, len=this.length >>> 0; i<len; ++i) {\r\n\t\tif (fn.call(ctx, this[i], i, this)) return this[i];\r\n\t}\r\n};\r\n\r\n/**\r\n* An Enyo convenience method reference to [Array.indexOf()]{@glossary Array.indexOf}.\r\n*\r\n* This also supports the legacy Enyo argument order `el.indexOf(array, offset)` and can\r\n* differentiate between this and the standard `array.indexOf(el, offset)`.\r\n*\r\n* **When possible, you should use the native equivalent.**\r\n*\r\n* This method supports the same arguments as the native version, plus an extra argument at the\r\n* beginning referring to the [array]{@glossary Array} to run this method on.\r\n*\r\n* @public\r\n*/\r\nexports.indexOf = function (array, el, offset) {\r\n\tif (!(array instanceof Array)) return el.indexOf(array, offset);\r\n\treturn array.indexOf(el, offset);\r\n};\r\n\r\n/**\r\n* An Enyo convenience method reference to [Array.lastIndexOf()]{@glossary Array.lastIndexOf}.\r\n*\r\n* This also supports the legacy Enyo argument order `el.lastIndexOf(array, offset)` and can\r\n* differentiate between this and the standard `array.lastIndexOf(el, offset)`.\r\n*\r\n* **When possible, you should use the native equivalent.**\r\n*\r\n* This method supports the same arguments as the native version, plus an extra argument at the\r\n* beginning referring to the [array]{@glossary Array} to run this method on.\r\n*\r\n* @public\r\n*/\r\nexports.lastIndexOf = function (array, el, offset) {\r\n\tif (!(array instanceof Array)) return el.lastIndexOf(array, offset);\r\n\treturn array.lastIndexOf(el, offset);\r\n};\r\n\r\n/**\r\n* An Enyo convenience method reference to [Array.findIndex()]{@glossary Array.findIndex}.\r\n*\r\n* **When possible, you should use the native equivalent.**\r\n*\r\n* This method supports the same arguments as the native version, plus an extra argument at the\r\n* beginning referring to the [array]{@glossary Array} to run this method on.\r\n*\r\n* @public\r\n*/\r\nexports.findIndex = function (array, fn, ctx) {\r\n\treturn array.findIndex(fn, ctx);\r\n};\r\n\r\n/**\r\n* An Enyo convenience method reference to [Array.find()]{@glossary Array.find}.\r\n*\r\n* **When possible, you should use the native equivalent.**\r\n*\r\n* This method supports the same arguments as the native version, plus an extra argument at the\r\n* beginning referring to the [array]{@glossary Array} to run this method on.\r\n*\r\n* @method enyo.find\r\n* @public\r\n*/\r\nvar find = exports.find = function (array, fn, ctx) {\r\n\treturn array.find(fn, ctx);\r\n};\r\n\r\n/**\r\n* @alias enyo.find\r\n* @method enyo.where\r\n* @public\r\n*/\r\nexports.where = find;\r\n\r\n/**\r\n* An Enyo convenience method reference to [Array.forEach()]{@glossary Array.forEach}.\r\n*\r\n* **When possible, you should use the native equivalent.**\r\n*\r\n* This method supports the same arguments as the native version, plus an extra argument at the\r\n* beginning referring to the [array]{@glossary Array} to run this method on.\r\n*\r\n* @public\r\n*/\r\nexports.forEach = function (array, fn, ctx) {\r\n\treturn array.forEach(fn, ctx);\r\n};\r\n\r\n/**\r\n* An Enyo convenience method reference to [Array.map()]{@glossary Array.map}.\r\n*\r\n* **When possible, you should use the native equivalent.**\r\n*\r\n* This method supports the same arguments as the native version, plus an extra argument at the\r\n* beginning referring to the [array]{@glossary Array} to run this method on.\r\n*\r\n* @public\r\n*/\r\nexports.map = function (array, fn, ctx) {\r\n\treturn array.map(fn, ctx);\r\n};\r\n\r\n/**\r\n* An Enyo convenience method reference to [Array.filter()]{@glossary Array.filter}.\r\n*\r\n* **When possible, you should use the native equivalent.**\r\n*\r\n* This method supports the same arguments as the native version, plus an extra argument at the\r\n* beginning referring to the [array]{@glossary Array} to run this method on.\r\n*\r\n* @public\r\n*/\r\nexports.filter = function (array, fn, ctx) {\r\n\treturn array.filter(fn, ctx);\r\n};\r\n\r\n/**\r\n* When given an [array]{@glossary Array} of [objects]{@glossary Object},\r\n* searches through the array's objects; each object with a property name matching\r\n* `prop` has its value for that property compiled into a result array, which is\r\n* eventually returned. For each array object that doesn't have a matching property,\r\n* an `undefined` placeholder element is added to the result array, such that the\r\n* returned result array has the same length as the passed-in `array` parameter.\r\n*\r\n* @param {Array} array - The [array]{@glossary Array} of [objects]{@glossary Object}\r\n*                      in which the `prop` will be searched for.\r\n* @param {String} prop - A string containing the name of the property to search for.\r\n* @returns {Array} An array of all the values of the named property from\r\n*                     objects contained in the `array`.\r\n* @public\r\n*/\r\nexports.pluck = function (array, prop) {\r\n\tif (!(array instanceof Array)) {\r\n\t\tvar tmp = array;\r\n\t\tarray = prop;\r\n\t\tprop = tmp;\r\n\t}\r\n\r\n\tvar ret = [];\r\n\tfor (var i=0, len=array.length >>> 0; i<len; ++i) {\r\n\t\tret.push(array[i]? array[i][prop]: undefined);\r\n\t}\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n* Concatenates a variable number of [arrays]{@glossary Array}, removing any duplicate\r\n* entries.\r\n*\r\n* @returns {Array} The unique values from all [arrays]{@glossary Array}.\r\n* @public\r\n*/\r\nexports.merge = function (/* _arrays_ */) {\r\n\tvar ret = [],\r\n\t\tvalues = Array.prototype.concat.apply([], arguments);\r\n\tfor (var i=0, len=values.length >>> 0; i<len; ++i) {\r\n\t\tif (!~ret.indexOf(values[i])) ret.push(values[i]);\r\n\t}\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n* Clones an existing [Array]{@glossary Array}, or converts an array-like\r\n* object into an Array.\r\n*\r\n* If `offset` is non-zero, the cloning starts from that index in the source\r\n* Array. The clone may be appended to an existing Array by passing in the\r\n* existing Array as `initialArray`.\r\n*\r\n* Array-like objects have `length` properties, and support square-bracket\r\n* notation `([])`. Array-like objects often do not support Array methods\r\n* such as `push()` or `concat()`, and so must be converted to Arrays before\r\n* use.\r\n*\r\n* The special `arguments` variable is an example of an array-like object.\r\n*\r\n* @public\r\n*/\r\nvar cloneArray = exports.cloneArray = function (array, offset, initialArray) {\r\n\tvar ret = initialArray || [];\r\n\tfor(var i = offset || 0, l = array.length; i<l; i++){\r\n\t\tret.push(array[i]);\r\n\t}\r\n\t// Alternate smarter implementation:\r\n\t// return Array.prototype.slice.call(array, offset);\r\n\t// Array.of\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n* @alias cloneArray\r\n* @method enyo.toArray\r\n* @public\r\n*/\r\nexports.toArray = cloneArray;\r\n\r\n/**\r\n* Within a given [array]{@glossary Array}, removes the first\r\n* [strictly equal to]{@glossary ===} occurrence of `el`.\r\n* Note that `array` is modified directly.\r\n*\r\n* @param {Array} array - The [Array]{@glossary Array} to look through.\r\n* @param {*} el - The element to search for and remove.\r\n* @public\r\n*/\r\nexports.remove = function (array, el) {\r\n\tif (!(array instanceof Array)) {\r\n\t\tvar tmp = array;\r\n\t\tarray = el;\r\n\t\tel = tmp;\r\n\t}\r\n\r\n\tvar i = array.indexOf(el);\r\n\tif (-1 < i) array.splice(i, 1);\r\n\treturn array;\r\n};\r\n\r\n/**\r\n* This regex pattern is used by the [isRtl()]{@link module:enyo/utils#isRtl} function.\r\n*\r\n* Arabic: \\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFE\r\n* Hebrew: \\u0590-\\u05FF\\uFB1D-\\uFB4F\r\n*\r\n* @private\r\n*/\r\nvar rtlPattern = /[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFE\\u0590-\\u05FF\\uFB1D-\\uFB4F]/;\r\n\r\n/**\r\n* Takes content `str` and determines whether or not it is [RTL]{@glossary RTL}.\r\n*\r\n* @param {String} str - A [String]{@glossary String} to check the [RTL]{@glossary RTL}-ness of.\r\n* @return {Boolean} `true` if `str` should be RTL; `false` if not.\r\n* @public\r\n*/\r\nexports.isRtl = function (str) {\r\n\treturn rtlPattern.test(str);\r\n};","require('enyo');\r\n\r\n/**\r\n* @module enyo/roots\r\n*/\r\n\r\n/**\r\n* @private\r\n*/\r\nvar callbacks = [],\r\n\troots = [];\r\n\r\n/**\r\n* Registers a single callback to be executed whenever a root view is rendered.\r\n* \r\n* @name enyo.rendered\r\n* @method\r\n* @param {Function} method - The callback to execute.\r\n* @param {Object} [context=enyo.global] The context under which to execute the callback.\r\n* @public\r\n*/\r\nexports.rendered = function (method, context) {\r\n\tcallbacks.push({method: method, context: context || global});\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nexports.roots = roots;\r\n\r\n/**\r\n* Invokes all known callbacks (if any) against the root view once it has been rendered.\r\n* This method is not likely to be executed very often.\r\n* \r\n* @private\r\n*/\r\nfunction invoke (root) {\r\n\tcallbacks.forEach(function (ln) {\r\n\t\tln.method.call(ln.context, root);\r\n\t});\r\n}\r\n\r\n/**\r\n* @private\r\n*/\r\nexports.addToRoots = function (view) {\r\n\tvar rendered,\r\n\t\tdestroy;\r\n\t\r\n\t// since it is possible to call renderInto more than once on a given view we ensure we\r\n\t// don't register it twice unnecessarily\r\n\tif (roots.indexOf(view) === -1) {\r\n\t\t\r\n\t\troots.push(view);\r\n\t\t\r\n\t\t// hijack the rendered method\r\n\t\trendered = view.rendered;\r\n\t\t\r\n\t\t// hijack the destroy method\r\n\t\tdestroy = view.destroy;\r\n\t\t\r\n\t\t// supply our rendered hook\r\n\t\tview.rendered = function () {\r\n\t\t\t// we call the original first\r\n\t\t\trendered.apply(this, arguments);\r\n\t\t\t\r\n\t\t\t// and now we invoke the known callbacks against this root\r\n\t\t\tinvoke(this);\r\n\t\t};\r\n\t\t\r\n\t\t// supply our destroy hook\r\n\t\tview.destroy = function () {\r\n\t\t\tvar idx = roots.indexOf(this);\r\n\t\t\t\r\n\t\t\t// remove it from the roots array\r\n\t\t\tif (idx > -1) roots.splice(idx, 1);\r\n\t\t\t\r\n\t\t\t// now we can call the original\r\n\t\t\tdestroy.apply(this, arguments);\r\n\t\t};\r\n\t}\r\n};\r\n","require('enyo');\r\n\r\n\r\n/**\r\n* [JSON]{@glossary JSON} related methods and wrappers.\r\n*\r\n* @module enyo/json\r\n* @public\r\n*/\r\nmodule.exports = {\r\n\t\r\n\t/**\r\n\t* Wrapper for [JSON.stringify()]{@glossary JSON.stringify}. Creates a\r\n\t* [JSON]{@glossary JSON} [string]{@glossary String} from an\r\n\t* [object]{@glossary Object}.\r\n\t*\r\n\t* @see {@glossary JSON.stringify}\r\n\t* @param {Object} value - The [object]{@glossary Object} to convert to a\r\n\t*\t[JSON]{@glossary JSON} [string]{@glossary String}.\r\n\t* @param {(Function|String[])} [replacer] An optional parameter indicating either an\r\n\t*\t[array]{@glossary Array} of keys to include in the final output or a\r\n\t*\t[function]{@glossary Function} that will have the opportunity to dynamically return\r\n\t*\tvalues to include for keys.\r\n\t* @param {(Number|String)} [space] - Determines the spacing (if any) for pretty-printed\r\n\t*\toutput of the JSON string. A [number]{@glossary Number} indicates the number of\r\n\t* spaces to use in the output, while a string will be used verbatim.\r\n\t* @returns {String} The JSON string for the given object.\r\n\t* @public\r\n\t*/\r\n\tstringify: function(value, replacer, space) {\r\n\t\treturn JSON.stringify(value, replacer, space);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Wrapper for [JSON.parse()]{@glossary JSON.parse}. Parses a valid\r\n\t* [JSON]{@glossary JSON} [string]{@glossary String} and returns an\r\n\t* [object]{@glossary Object}, or `null` if the parameters are invalid.\r\n\t*\r\n\t* @see {@glossary JSON.parse}\r\n\t* @param {String} json - The [JSON]{@glossary JSON} [string]{@glossary String} to\r\n\t*\tparse into an [object]{@glossary Object}.\r\n\t* @param {Function} [reviver] - The optional [function]{@glossary Function} to use to\r\n\t*\tparse individual keys of the return object.\r\n\t* @returns {(Object|null)} If parameters are valid, an [object]{@glossary Object}\r\n\t* is returned; otherwise, `null`.\r\n\t* @public\r\n\t*/\r\n\tparse: function(json, reviver) {\r\n\t\treturn json ? JSON.parse(json, reviver) : null;\r\n\t}\r\n};\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/ModelList~ModelList} Object.\r\n* @module enyo/ModelList\r\n*/\r\n\r\n/**\r\n* A special type of [array]{@glossary Array} used internally by data layer\r\n* [kinds]{@glossary kind}.\r\n*\r\n* @class ModelList\r\n* @protected\r\n*/\r\nfunction ModelList (args) {\r\n\tArray.call(this);\r\n\tthis.table = {};\r\n\tif (args) this.add(args, 0);\r\n}\r\n\r\nModelList.prototype = Object.create(Array.prototype);\r\n\r\nmodule.exports = ModelList;\r\n\r\n/**\r\n* Adds [models]{@link module:enyo/Model~Model} to the [list]{@link module:enyo/ModelList~ModelList}, updating an\r\n* internal table by the model's [primaryKey]{@link module:enyo/Model~Model#primaryKey} (if\r\n* possible) and its [euid]{@glossary euid}.\r\n*\r\n* @name module:enyo/ModelList~ModelList#add\r\n* @method\r\n* @param {(module:enyo/Model~Model|module:enyo/Model~Model[])} models The [model or models]{@link module:enyo/Model~Model}\r\n*\tto add to the [list]{@link module:enyo/ModelList~ModelList}.\r\n* @param {Number} [idx] - If provided and valid, the models will be\r\n* [spliced]{@glossary Array.splice} into the list at this position.\r\n* @returns {module:enyo/Model~Model[]} An immutable [array]{@glossary Array} of models\r\n* that were actually added to the list.\r\n* @protected\r\n*/\r\nModelList.prototype.add = function (models, idx) {\r\n\tvar table = this.table,\r\n\t\tadded = [],\r\n\t\tmodel,\r\n\t\teuid,\r\n\t\tid,\r\n\t\ti = 0;\r\n\t\r\n\tif (models && !(models instanceof Array)) models = [models];\r\n\t\r\n\tfor (; (model = models[i]); ++i) {\r\n\t\teuid = model.euid;\r\n\t\t\r\n\t\t// we only want to actually add models we haven't already seen...\r\n\t\tif (!table[euid]) {\r\n\t\t\tid = model.get(model.primaryKey);\r\n\t\t\r\n\t\t\tif (id != null) {\r\n\t\t\t\r\n\t\t\t\t// @TODO: For now if we already have an entry for a model by its supposed unique\r\n\t\t\t\t// identifier but it isn't the instance we just found we can't just\r\n\t\t\t\t// overwrite the previous instance so we mark the new one as headless\r\n\t\t\t\tif (table[id] && table[id] !== model) model.headless = true;\r\n\t\t\t\t// otherwise we do the normal thing and add the entry for it\r\n\t\t\t\telse table[id] = model; \r\n\t\t\t}\r\n\t\t\r\n\t\t\t// nomatter what though the euid should be unique\r\n\t\t\ttable[euid] = model;\r\n\t\t\tadded.push(model);\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (added.length) {\r\n\t\tidx = !isNaN(idx) ? Math.min(Math.max(0, idx), this.length) : 0;\r\n\t\tadded.unshift(0);\r\n\t\tadded.unshift(idx);\r\n\t\tthis.splice.apply(this, added);\r\n\t}\r\n\t\r\n\tif (added.length > 0) added = added.slice(2);\r\n\tadded.at = idx;\r\n\t\r\n\treturn added;\r\n};\r\n\r\n/**\r\n* Removes the specified [models]{@link module:enyo/Model~Model} from the [list]{@link module:enyo/ModelList~ModelList}.\r\n*\r\n* @name module:enyo/ModelList~ModelList#remove\r\n* @method\r\n* @param {(module:enyo/Model~Model|module:enyo/Model~Model[])} models The [model or models]{@link module:enyo/Model~Model}\r\n*\tto remove from the [list]{@link module:enyo/ModelList~ModelList}.\r\n* @returns {module:enyo/Model~Model[]} An immutable [array]{@glossary Array} of\r\n*\tmodels that were actually removed from the list.\r\n* @protected\r\n*/\r\nModelList.prototype.remove = function (models) {\r\n\tvar table = this.table,\r\n\t\tremoved = [],\r\n\t\tmodel,\r\n\t\tidx,\r\n\t\tid,\r\n\t\ti,\r\n\t\t\r\n\t\t// these modifications are made to allow more performant logic to take place in\r\n\t\t// views that may need to know this information\r\n\t\tlow = Infinity,\r\n\t\thigh = -1,\r\n\t\tindices = [];\r\n\t\r\n\tif (models && !(models instanceof Array)) models = [models];\r\n\t\r\n\t// we start at the end to ensure that you could even pass the list itself\r\n\t// and it will work\r\n\tfor (i = models.length - 1; (model = models[i]); --i) {\r\n\t\ttable[model.euid] = null;\r\n\t\tid = model.get(model.primaryKey);\r\n\t\t\r\n\t\tif (id != null) table[id] = null;\r\n\t\t\r\n\t\tidx = models === this ? i : this.indexOf(model);\r\n\t\tif (idx > -1) {\t\t\t\t\r\n\t\t\tif (idx < low) low = idx;\r\n\t\t\tif (idx > high) high = idx;\r\n\t\t\t\r\n\t\t\tthis.splice(idx, 1);\r\n\t\t\tremoved.push(model);\r\n\t\t\tindices.push(idx);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// since this is a separate array we will add this property to it for internal use only\r\n\tremoved.low = low;\r\n\tremoved.high = high;\r\n\tremoved.indices = indices;\r\n\t\r\n\treturn removed;\r\n};\r\n\r\n/**\r\n* Determines whether the specified [model]{@link module:enyo/Model~Model} is present in the\r\n* [list]{@link module:enyo/ModelList~ModelList}. Will attempt to resolve a [string]{@glossary String}\r\n* or [number]{@glossary Number} to either a [primaryKey]{@link module:enyo/Model~Model#primaryKey}\r\n* or [euid]{@glossary euid}.\r\n*\r\n* @name module:enyo/ModelList~ModelList#has\r\n* @method\r\n* @param {(module:enyo/Model~Model|String|Number)} model An identifier representing either the\r\n*\t[model]{@link module:enyo/Model~Model} instance, its [primaryKey]{@link module:enyo/Model~Model#primaryKey},\r\n* or its [euid]{@glossary euid}.\r\n* @returns {Boolean} Whether or not the model is present in the [list]{@link module:enyo/ModelList~ModelList}.\r\n* @protected\r\n*/\r\nModelList.prototype.has = function (model) {\r\n\tif (model === undefined || model === null) return false;\r\n\t\r\n\tif (typeof model == 'string' || typeof model == 'number') {\r\n\t\treturn !! this.table[model];\r\n\t} else return this.indexOf(model) > -1;\r\n};\r\n\r\n/**\r\n* Given an identifier, attempts to return the associated [model]{@link module:enyo/Model~Model}.\r\n* The identifier should be a [string]{@glossary String} or [number]{@glossary Number}.\r\n*\r\n* @name module:enyo/ModelList~ModelList#resolve\r\n* @method\r\n* @param {(String|Number)} model - An identifier (either a\r\n*\t[primaryKey]{@link module:enyo/Model~Model#primaryKey} or an [euid]{@glossary euid}).\r\n* @returns {(undefined|null|module:enyo/Model~Model)} If the identifier could be resolved, a\r\n*\t[model]{@link module:enyo/Model~Model} instance is returned; otherwise, `undefined`, or\r\n* possibly `null` if the model once belonged to the [list]{@link module:enyo/ModelList~ModelList}.\r\n* @protected\r\n*/\r\nModelList.prototype.resolve = function (model) {\r\n\tif (typeof model == 'string' || typeof model == 'number') {\r\n\t\treturn this.table[model];\r\n\t} else return model;\r\n};\r\n\r\n/**\r\n* Copies the current [list]{@link module:enyo/ModelList~ModelList} and returns an shallow copy. This\r\n* method differs from the [slice()]{@glossary Array.slice} method inherited from\r\n* native [Array]{@glossary Array} in that this returns an {@link module:enyo/ModelList~ModelList},\r\n* while `slice()` returns an array.\r\n* \r\n* @name module:enyo/ModelList~ModelList#copy\r\n* @method\r\n* @returns {module:enyo/ModelList~ModelList} A shallow copy of the callee.\r\n* @protected\r\n*/\r\nModelList.prototype.copy = function () {\r\n\treturn new ModelList(this);\r\n};\r\n","require('enyo');\r\n\r\n/**\r\n* Shared values for various [kinds]{@glossary kind} used to indicate a state or\r\n* (multiple, simultaneous) states. These flags are binary values represented by\r\n* hexadecimal numerals. They may be modified and compared (or even extended) using\r\n* [bitwise operations]{@glossary bitwise} or various\r\n* [API methods]{@link module:enyo/StateSupport~StateSupport} available to the kinds that support them.\r\n* Make sure to explore the documentation for individual kinds, as they may have\r\n* specific uses for a given flag.\r\n* \r\n* As a cursory overview, here is a table of the values already declared by built-in flags.\r\n* Each hexadecimal numeral represents a unique power of 2 in binary, from which we can use\r\n* [bitwise masks]{@glossary bitwise} to determine if a particular value is present.\r\n* \r\n* ```javascript\r\n* HEX             DEC             BIN\r\n* 0x0001             1            0000 0000 0000 0001\r\n* 0x0002             2            0000 0000 0000 0010\r\n* 0x0004             4            0000 0000 0000 0100\r\n* 0x0008             8            0000 0000 0000 1000\r\n* 0x0010            16            0000 0000 0001 0000\r\n* 0x0020            32            0000 0000 0010 0000\r\n* 0x0040            64            0000 0000 0100 0000\r\n* 0x0080           128            0000 0000 1000 0000\r\n* 0x0100           256            0000 0001 0000 0000\r\n* 0x0200           512            0000 0010 0000 0000\r\n* 0x0400          1024            0000 0100 0000 0000\r\n* 0x0800          2048            0000 1000 0000 0000\r\n* \r\n* ...\r\n* \r\n* 0x1000          4096            0001 0000 0000 0000\r\n* ```\r\n*\r\n* As a hint, converting (HEX) 0x0800 to DEC do:\r\n*\r\n* ```javascript\r\n* (0*16^3) + (8*16^2) + (0*16^1) + (0*16^0) = 2048\r\n* ```\r\n*\r\n* As a hint, converting (HEX) 0x0800 to BIN do:\r\n*\r\n* ```javascript\r\n* 0    8    0    0    (HEX)\r\n* ---- ---- ---- ----\r\n* 0000 1000 0000 0000 (BIN)\r\n* ```\r\n*\r\n* @module enyo/States\r\n* @public\r\n* @see module:enyo/StateSupport~StateSupport\r\n*/\r\nmodule.exports = {\r\n\t\r\n\t/**\r\n\t* Only exists in the client and was created during the runtime of the\r\n\t* [application]{@glossary application}.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 1\r\n\t*/\r\n\tNEW: 0x0001,\r\n\t\r\n\t/**\r\n\t* Has been modified locally only.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 2\r\n\t*/\r\n\tDIRTY: 0x0002,\r\n\t\r\n\t/**\r\n\t* Has not been modified locally.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 4\r\n\t*/\r\n\tCLEAN: 0x0004,\r\n\t\r\n\t/**\r\n\t* Can no longer be modified.\r\n\t* @type {Number}\r\n\t* @default 8\r\n\t*/\r\n\tDESTROYED: 0x0008,\r\n\t\r\n\t/**\r\n\t* Currently attempting to fetch.\r\n\t* \r\n\t* @see module:enyo/Model~Model#fetch\r\n\t* @see module:enyo/RelationalModel~RelationalModel#fetch\r\n\t* @see module:enyo/Collection~Collection#fetch\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 16\r\n\t*/\r\n\tFETCHING: 0x0010,\r\n\t\r\n\t/**\r\n\t* Currently attempting to commit.\r\n\t* \r\n\t* @see module:enyo/Model~Model#commit\r\n\t* @see module:enyo/RelationalModel~RelationalModel#commit\r\n\t* @see module:enyo/Collection~Collection#commit\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 32\r\n\t*/\r\n\tCOMMITTING: 0x0020,\r\n\t\r\n\t/**\r\n\t* Currently attempting to destroy.\r\n\t* \r\n\t* @see module:enyo/Model~Model#destroy\r\n\t* @see module:enyo/RelationalModel~RelationalModel#destroy\r\n\t* @see module:enyo/Collection~Collection#destroy\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 64\r\n\t*/\r\n\tDESTROYING: 0x0040,\r\n\t\r\n\t/**\r\n\t* There was an error during commit.\r\n\t* \r\n\t* @see module:enyo/Model~Model#commit\r\n\t* @see module:enyo/RelationalModel~RelationalModel#commit\r\n\t* @see module:enyo/Collection~Collection#commit\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 128\r\n\t*/\r\n\tERROR_COMMITTING: 0x0080,\r\n\t\r\n\t/**\r\n\t* There was an error during fetch.\r\n\t* \r\n\t* @see module:enyo/Model~Model#fetch\r\n\t* @see module:enyo/RelationalModel~RelationalModel#fetch\r\n\t* @see module:enyo/Collection~Collection#fetch\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 256\r\n\t*/\r\n\tERROR_FETCHING: 0x0100,\r\n\t\r\n\t/**\r\n\t* There was an error during destroy.\r\n\t* \r\n\t* @see module:enyo/Model~Model#destroy\r\n\t* @see module:enyo/RelationalModel~RelationalModel#destroy\r\n\t* @see module:enyo/Collection~Collection#destroy\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 512\r\n\t*/\r\n\tERROR_DESTROYING: 0x0200,\r\n\t\r\n\t/**\r\n\t* An error was encountered for which there was no exact flag, or an invalid error was\r\n\t* specified.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 1024\r\n\t*/\r\n\tERROR_UNKNOWN: 0x0400,\r\n\t\r\n\t/**\r\n\t* A multi-state [bitmask]{@glossary bitwise}. Compares a given flag to the states\r\n\t* included in the definition of `BUSY`. By default, this is one of\r\n\t* [FETCHING]{@link module:enyo/States.FETCHING}, [COMMITTING]{@link module:enyo/States.COMMITTING}, or\r\n\t* [DESTROYING]{@link module:enyo/States.DESTROYING}. It may be extended to include additional\r\n\t* values using the [bitwise]{@glossary bitwise} `OR` operator (`|`).\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 112\r\n\t*/\r\n\tBUSY: 0x0010 | 0x0020 | 0x0040,\r\n\t\r\n\t/**\r\n\t* A multi-state [bitmask]{@glossary bitwise}. Compares a given flag to the states\r\n\t* included in the definition of `ERROR`. By default, this is one of\r\n\t* [ERROR_FETCHING]{@link module:enyo/States.ERROR_FETCHING},\r\n\t* [ERROR_COMMITTING]{@link module:enyo/States.ERROR_COMMITTING},\r\n\t* [ERROR_DESTROYING]{@link module:enyo/States.ERROR_DESTROYING}, or\r\n\t* [ERROR_UNKNOWN]{@link module:enyo/States.ERROR_UNKNOWN}. It may be extended to include\r\n\t* additional values using the [bitwise]{@glossary bitwise} `OR` operator (`|`).\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 1920\r\n\t*/\r\n\tERROR: 0x0080 | 0x0100 | 0x0200 | 0x0400,\r\n\t\r\n\t/**\r\n\t* A multi-state [bitmask]{@glossary bitwise}. Compares a given flag to the states\r\n\t* included in the definition of `READY`. By default, this is the inverse of any\r\n\t* values included in [BUSY]{@link module:enyo/States.BUSY} or [ERROR]{@link module:enyo/States.ERROR}.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default -2041\r\n\t*/\r\n\tREADY: ~(0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080 | 0x0100 | 0x0200 | 0x0400)\r\n};\r\n","/**\r\n* Contains the declaration for the {@link module:enyo/transform~transform} kind.\r\n* @module enyo/transform\r\n*/\r\nrequire('enyo');\r\n\r\n/**\r\n * To create a Typed_array\r\n * @param  {Number} size The size of the buffer required\r\n * @return {Number[]}   Typed_array\r\n */\r\nfunction typedArray (size) {\r\n\treturn new Float32Array(new ArrayBuffer(size));\r\n}\r\n\r\n/**\r\n * To input the specified indices with value 1\r\n * @param  {Number[]} matrix    typedArray sent\r\n * @param  {Number[]} numberMat indices where value has to be 1\r\n */\r\nfunction inputValues (matrix, numberMat) {\r\n\tfor (var i = 0; i < numberMat.length; i++) {\r\n\t\tmatrix[numberMat[i]] = 1;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * To translate in any dimension based on co-ordinates.\r\n * @public\r\n * @param  {Number}   x Translate value in X axis\r\n * @param  {Number}   y Translate value in Y axis\r\n * @param  {Number}   z Translate value in Z axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.translate = function(x, y, z) {\r\n\tvar translateMat, modifiedMat;\r\n\ttranslateMat = typedArray(64);\r\n\tmodifiedMat = inputValues(translateMat, new Uint8Array([0, 5, 10, 15]));\r\n\ttranslateMat[12] = x;\r\n\ttranslateMat[13] = y ? y : 0;\r\n\ttranslateMat[14] = z ? z : 0;\r\n\treturn translateMat;\r\n};\r\n\r\n/**\r\n * To translate in x dimension\r\n * @public\r\n * @param  {Number}   x Translate value in X axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.translateX = function(x) {\r\n\tvar translateX, modifiedMat;\r\n\ttranslateX = typedArray(64);\r\n\tmodifiedMat = inputValues(translateX, new Uint8Array([0, 5, 10, 15]));\r\n\ttranslateX[12] = x ? x : 0;\r\n\treturn translateX;\r\n};\r\n\r\n/**\r\n * To translate in y dimension\r\n * @public\r\n * @param  {Number}   y Translate value in Y axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.translateY = function(y) {\r\n\tvar translateY, modifiedMat;\r\n\ttranslateY = typedArray(64);\r\n\tmodifiedMat = inputValues(translateY, new Uint8Array([0, 5, 10, 15]));\r\n\ttranslateY[13] = y ? y : 0;\r\n\treturn translateY;\r\n};\r\n\r\n/**\r\n * To translate in z dimension\r\n * @public\r\n * @param  {Number}   z Translate value in Z axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.translateZ = function(z) {\r\n\tvar translateZ, modifiedMat;\r\n\ttranslateZ = typedArray(64);\r\n\tmodifiedMat = inputValues(translateZ, new Uint8Array([0, 5, 10, 15]));\r\n\ttranslateZ[14] = z ? z : 0;\r\n\treturn translateZ;\r\n};\r\n\r\n/**\r\n * To scale in any dimension\r\n * @public\r\n * @param  {Number}   x Scale value in X axis\r\n * @param  {Number}   y Scale value in Y axis\r\n * @param  {Number}   z Scale value in Z axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.scale = function(x, y, z) {\r\n\tvar scaleMat = typedArray(64);\r\n\tscaleMat[0] = x;\r\n\tscaleMat[5] = y ? y : 1;\r\n\tscaleMat[10] = z ? z : 1;\r\n\tscaleMat[15] = 1;\r\n\treturn scaleMat;\r\n};\r\n\r\n/**\r\n * To skew in any dimension (skew can only happen in 2d)\r\n * @public\r\n * @param  {Number}   a Skew value in X axis\r\n * @param  {Number}   b Skew value in Y axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.skew =function(a, b) {\r\n\tvar skewMat, modifiedMat;\r\n\ta = a ? Math.tan(a * Math.PI / 180) : 0;\r\n\tb = b ? Math.tan(b * Math.PI / 180) : 0;\r\n\r\n\tskewMat = typedArray(64);\r\n\tmodifiedMat = inputValues(skewMat, new Uint8Array([0, 5, 10, 15]));\r\n\tskewMat[1] = b;\r\n\tskewMat[4] = a;\r\n\treturn skewMat;\r\n};\r\n\r\n/**\r\n * To rotate in x-axis\r\n * @public\r\n * @param  {Number}   a Rotate value in X axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.rotateX = function(a) {\r\n\tvar cosa, sina, rotateXMat, modifiedMat;\r\n\ta = a ? a * Math.PI / 180 : 0;\r\n\tcosa = Math.cos(a);\r\n\tsina = Math.sin(a);\r\n\r\n\trotateXMat = typedArray(64);\r\n\tmodifiedMat = inputValues(rotateXMat, new Uint8Array([0, 15]));\r\n\trotateXMat[5] = cosa;\r\n\trotateXMat[6] = -sina;\r\n\trotateXMat[9] = sina;\r\n\trotateXMat[10] = cosa;\r\n\treturn rotateXMat;\r\n};\r\n\r\n/**\r\n * To rotate in y-axis\r\n * @public\r\n * @param  {Number}   b Rotate value in Y axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.rotateY = function(b) {\r\n\tvar cosb, sinb, rotateYMat, modifiedMat;\r\n\tb = b ? b * Math.PI / 180 : 0;\r\n\tcosb = Math.cos(b);\r\n\tsinb = Math.sin(b);\r\n\r\n\trotateYMat = typedArray(64);\r\n\tmodifiedMat = inputValues(rotateYMat, new Uint8Array([5, 15]));\r\n\trotateYMat[0] = cosb;\r\n\trotateYMat[2] = sinb;\r\n\trotateYMat[8] = -sinb;\r\n\trotateYMat[10] = cosb;\r\n\treturn rotateYMat;\r\n};\r\n\r\n/**\r\n * To rotate in z-axis\r\n * @public\r\n * @param  {Number}   g Rotate value in Z axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.rotateZ = function(g) {\r\n\tvar cosg, sing, rotateZMat;\r\n\tg = g ? g * Math.PI / 180 : 0;\r\n\tcosg = Math.cos(g);\r\n\tsing = Math.sin(g);\r\n\r\n\trotateZMat = typedArray(64);\r\n\trotateZMat[0] = cosg;\r\n\trotateZMat[1] = -sing;\r\n\trotateZMat[4] = sing;\r\n\trotateZMat[5] = cosg;\r\n\trotateZMat[15] = 1;\r\n\treturn rotateZMat;\r\n};\r\n\r\n/**\r\n * To rotate in any dimension\r\n * @public\r\n * @param  {Number}   a Rotate value in X axis\r\n * @param  {Number}   b Rotate value in Y axis\r\n * @param  {Number}   g Rotate value in Z axis\r\n * @return {Number[]}   Matrix3d\r\n */\r\nexports.rotate = function(a, b, g) {\r\n\tvar ca, sa, cb, sb, cg, sg, rotateMat;\r\n\ta = a ? a * Math.PI / 180 : 0;\r\n\tb = b ? b * Math.PI / 180 : 0;\r\n\tg = g ? g * Math.PI / 180 : 0;\r\n\tca = Math.cos(a);\r\n\tsa = Math.sin(a);\r\n\tcb = Math.cos(b);\r\n\tsb = Math.sin(b);\r\n\tcg = Math.cos(g);\r\n\tsg = Math.sin(g);\r\n\r\n\trotateMat = typedArray(64);\r\n\trotateMat[0] = cb * cg;\r\n\trotateMat[1] = ca * sg + sa * sb * cg;\r\n\trotateMat[2] = sa * sg - ca * sb * cg;\r\n\trotateMat[4] = -cb * sg;\r\n\trotateMat[5] = ca * cg - sa * sb * sg;\r\n\trotateMat[6] = sa * cg + ca * sb * sg;\r\n\trotateMat[8] = sb;\r\n\trotateMat[9] = -sa * cb;\r\n\trotateMat[10] = ca * cb;\r\n\trotateMat[15] = 1;\r\n\treturn rotateMat;\r\n};\r\n\r\nexports.Matrix = {\r\n\r\n\t/**\r\n\t * To create Identity Matrix3d as array.\r\n\t * @public\r\n\t * @return {Number[]} Identity Matrix3d\r\n\t */\r\n\tidentity: function() {\r\n\t\tvar identityMatrix, modifiedMat;\r\n\t\tidentityMatrix = typedArray(64);\r\n\t\tmodifiedMat = inputValues(identityMatrix, new Uint8Array([0, 5, 10, 15]));\r\n\t\treturn identityMatrix;\r\n\t},\r\n\r\n\t/**\r\n\t * To create Identity Matrix2d as array.\r\n\t * @public\r\n\t * @return {Number[]} Identity Matrix2d as array\r\n\t */\r\n\tidentity2D: function() {\r\n\t\tvar identity2D, modifiedMat;\r\n\t\tidentity2D = typedArray(36);\r\n\t\tmodifiedMat = inputValues(identity2D, new Uint8Array([0, 4, 8]));\r\n\t\treturn identity2D;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * To create Identity Matrix (NXN order).\r\n\t * @public\r\n\t * @param  {Number}   N Order of Identity Matrix\r\n\t * @return {Number[][]} Identity Matrix of order N\r\n\t */\r\n\tidentityMatrix: function(N) {\r\n\t\tvar i, j, row, result = [];\r\n\t\tfor (i = 0; i < N; i++) {\r\n\t\t\trow = [];\r\n\t\t\tfor (j = 0; j < N; j++) {\r\n\t\t\t\tif (i === j) {\r\n\t\t\t\t\trow.push(1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trow.push(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresult.push(row);\r\n\t\t}\r\n\t\treturn result;\r\n\t},\r\n\t/**\r\n\t * To multiply 2 Martix3d (4x4 order)\r\n\t * @public\r\n\t * @param  {Number[]} m1 1st Matrix3d\r\n\t * @param  {Number[]} m2 2nd Matrix3d\r\n\t * @return {Number[]}    Resultant Matrix3d\r\n\t */\r\n\tmultiply: function(m1, m2) {\r\n\t\tif (m1.length !== 16 || m2.length !== 16) return;\r\n\t\tvar multiplyMat = typedArray(64);\r\n\t\tmultiplyMat[0] = m1[0] * m2[0] + m1[4] * m2[1] + m1[8] * m2[2];\r\n\t\tmultiplyMat[1] = m1[1] * m2[0] + m1[5] * m2[1] + m1[9] * m2[2];\r\n\t\tmultiplyMat[2] = m1[2] * m2[0] + m1[6] * m2[1] + m1[10] * m2[2];\r\n\t\tmultiplyMat[4] = m1[0] * m2[4] + m1[4] * m2[5] + m1[8] * m2[6];\r\n\t\tmultiplyMat[5] = m1[1] * m2[4] + m1[5] * m2[5] + m1[9] * m2[6];\r\n\t\tmultiplyMat[6] = m1[2] * m2[4] + m1[6] * m2[5] + m1[10] * m2[6];\r\n\t\tmultiplyMat[8] = m1[0] * m2[8] + m1[4] * m2[9] + m1[8] * m2[10];\r\n\t\tmultiplyMat[9] = m1[1] * m2[8] + m1[5] * m2[9] + m1[9] * m2[10];\r\n\t\tmultiplyMat[10] = m1[2] * m2[8] + m1[6] * m2[9] + m1[10] * m2[10];\r\n\t\tmultiplyMat[12] = m1[0] * m2[12] + m1[4] * m2[13] + m1[8] * m2[14] + m1[12];\r\n\t\tmultiplyMat[13] = m1[1] * m2[12] + m1[5] * m2[13] + m1[9] * m2[14] + m1[13];\r\n\t\tmultiplyMat[14] = m1[2] * m2[12] + m1[6] * m2[13] + m1[10] * m2[14] + m1[14];\r\n\t\tmultiplyMat[15] = 1;\r\n\t\treturn multiplyMat;\r\n\t},\r\n\r\n\t/**\r\n\t * To multiply 2 Martix3d (n*n order)\r\n\t * @param  {Number[]} m1 1st Matrix3d\r\n\t * @param  {Number[]} m2 2nd Matrix3d\r\n\t * @return {Number[]}    Resultant Matrix3d\r\n\t */\r\n\tmultiplyN: function(m1, m2) {\r\n\t\tvar i, j, sum,\r\n\t\t\tm = [],\r\n\t\t\tl1 = m1.length,\r\n\t\t\tl2 = m2.length;\r\n\r\n\t\tfor (i = 0; i < l1; i++) {\r\n\t\t\tsum = 0;\r\n\t\t\tfor (j = 0; j < l2; j++) {\r\n\t\t\t\tsum += m1[i][j] * m2[j];\r\n\t\t\t}\r\n\t\t\tm.push(sum);\r\n\t\t}\r\n\t\treturn m;\r\n\t},\r\n\r\n\t/**\r\n\t * To inverse matrix of order N\r\n\t * @public\r\n\t * @param  {Number[]} matrix Matrix (NxN order)\r\n\t * @param  {Number}   n      Order of the matrix\r\n\t * @return {Number[]}        Inverted Matrix\r\n\t */\r\n\tinverseN: function(matrix, n) {\r\n\t\tvar i, j, k, r, t,\r\n\t\t\tresult = this.identityMatrix(n);\r\n\r\n\t\tfor (i = 0; i < n; i++) {\r\n\t\t\tfor (j = 0; j < n; j++) {\r\n\t\t\t\tif (i != j) {\r\n\t\t\t\t\tr = matrix[j][i] / matrix[i][i];\r\n\t\t\t\t\tfor (k = 0; k < n; k++) {\r\n\t\t\t\t\t\tmatrix[j][k] -= r * matrix[i][k];\r\n\t\t\t\t\t\tresult[j][k] -= r * result[i][k];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < n; i++) {\r\n\t\t\tt = matrix[i][i];\r\n\t\t\tfor (j = 0; j < n; j++) {\r\n\t\t\t\tmatrix[i][j] = matrix[i][j] / t;\r\n\t\t\t\tresult[i][j] = result[i][j] / t;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t},\r\n\r\n\t/**\r\n\t * Calculate matrix3d of a frame based on transformation vectors.\r\n\t * @public\r\n\t * @param  {Number[]} trns Translate vector\r\n\t * @param  {Number[]} rot  Rotate quaternion vector\r\n\t * @param  {Number[]} sc   Scale vector\r\n\t * @param  {Number[]} sq   Skew vector\r\n\t * @param  {Number[]} per  Perspective vector\r\n\t * @return {Number[]}      Final Matrix3d for particular frame\r\n\t */\r\n\trecompose: function(trns, rot, sc, sq, per) {\r\n\t\tvar i,\r\n\t\t\tx = rot[0],\r\n\t\t\ty = rot[1],\r\n\t\t\tz = rot[2],\r\n\t\t\tw = rot[3],\r\n\t\t\tm = this.identity(),\r\n\t\t\tsM = this.identity(),\r\n\t\t\trM = this.identity();\r\n\r\n\r\n\t\t// apply perspective\r\n\t\tif (per) {\r\n\t\t\tm[3] = per[0];\r\n\t\t\tm[7] = per[1];\r\n\t\t\tm[11] = per[2];\r\n\t\t\tm[15] = per[3];\r\n\t\t}\r\n\r\n\t\tm[12] = trns[0];\r\n\t\tm[13] = trns[1];\r\n\t\tm[14] = trns[2];\r\n\r\n\t\t// apply rotate\r\n\t\trM[0] = 1 - 2 * (y * y + z * z);\r\n\t\trM[1] = 2 * (x * y - z * w);\r\n\t\trM[2] = 2 * (x * z + y * w);\r\n\t\trM[4] = 2 * (x * y + z * w);\r\n\t\trM[5] = 1 - 2 * (x * x + z * z);\r\n\t\trM[6] = 2 * (y * z - x * w);\r\n\t\trM[8] = 2 * (x * z - y * w);\r\n\t\trM[9] = 2 * (y * z + x * w);\r\n\t\trM[10] = 1 - 2 * (x * x + y * y);\r\n\r\n\t\tm = this.multiply(m, rM);\r\n\r\n\t\t// apply skew\r\n\t\tif (sq[2]) {\r\n\t\t\tsM[9] = sq[2];\r\n\t\t\tm = this.multiply(m, sM);\r\n\t\t}\r\n\r\n\t\tif (sq[1]) {\r\n\t\t\tsM[9] = 0;\r\n\t\t\tsM[8] = sq[1];\r\n\t\t\tm = this.multiply(m, sM);\r\n\t\t}\r\n\r\n\t\tif (sq[0]) {\r\n\t\t\tsM[8] = 0;\r\n\t\t\tsM[4] = sq[0];\r\n\t\t\tm = this.multiply(m, sM);\r\n\t\t}\r\n\r\n\t\t// apply scale\r\n\t\tfor (i = 0; i < 12; i += 4) {\r\n\t\t\tm[0 + i] *= sc[0];\r\n\t\t\tm[1 + i] *= sc[1];\r\n\t\t\tm[2 + i] *= sc[2];\r\n\t\t}\r\n\t\treturn m;\r\n\t},\r\n\r\n\t/**\r\n\t * Decompose transformation vectors into various properties out of matrix3d.\r\n\t * @public\r\n\t * @param  {Number[]} matrix Matrix3d\r\n\t * @param  {Object}   ret    To store various transformation properties like translate, rotate, scale, skew and perspective.\r\n\t * @return {Boolean}         true, if matrix exists else false.\r\n\t */\r\n\tdecompose: function(matrix, ret) {\r\n\t\tif (matrix[15] === 0) return false;\r\n\t\tvar i,\r\n\t\t\ttV = [],\r\n\t\t\trV = [],\r\n\t\t\tpV = [],\r\n\t\t\tskV = [],\r\n\t\t\tscV = [],\r\n\t\t\trow = [],\r\n\t\t\tpdum3 = [];\r\n\r\n\t\tfor (i = 0; i < 16; i++)\r\n\t\t\tmatrix[i] /= matrix[15];\r\n\r\n\t\t//TODO: decompose perspective\r\n\t\tpV = [0, 0, 0, 0];\r\n\r\n\t\tfor (i = 0; i < 3; i++)\r\n\t\t\ttV[i] = matrix[12 + i];\r\n\r\n\t\tfor (i = 0; i < 12; i += 4) {\r\n\t\t\trow.push([\r\n\t\t\t\tmatrix[0 + i],\r\n\t\t\t\tmatrix[1 + i],\r\n\t\t\t\tmatrix[2 + i]\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\tscV[0] = vector.len(row[0]);\r\n\t\trow[0] = quaternion.normalize(row[0]);\r\n\t\tskV[0] = vector.dot(row[0], row[1]);\r\n\t\trow[1] = vector.combine(row[1], row[0], 1.0, -skV[0]);\r\n\r\n\t\tscV[1] = vector.len(row[1]);\r\n\t\trow[1] = quaternion.normalize(row[1]);\r\n\t\tskV[0] /= scV[1];\r\n\r\n\t\t// Compute XZ and YZ shears, orthogonalized 3rd row\r\n\t\tskV[1] = vector.dot(row[0], row[2]);\r\n\t\trow[2] = vector.combine(row[2], row[0], 1.0, -skV[1]);\r\n\t\tskV[2] = vector.dot(row[1], row[2]);\r\n\t\trow[2] = vector.combine(row[2], row[1], 1.0, -skV[2]);\r\n\r\n\t\t// Next, get Z scale and normalize 3rd row.\r\n\t\tscV[2] = vector.len(row[2]);\r\n\t\trow[2] = quaternion.normalize(row[2]);\r\n\t\tskV[1] /= scV[2];\r\n\t\tskV[2] /= scV[2];\r\n\r\n\t\tpdum3 = vector.cross(row[1], row[2]);\r\n\t\tif (vector.dot(row[0], pdum3) < 0) {\r\n\t\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\t\tscV[i] *= -1;\r\n\t\t\t\trow[i][0] *= -1;\r\n\t\t\t\trow[i][1] *= -1;\r\n\t\t\t\trow[i][2] *= -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trV[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));\r\n\t\trV[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));\r\n\t\trV[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));\r\n\t\trV[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));\r\n\r\n\t\tif (row[2][1] > row[1][2]) rV[0] = -rV[0];\r\n\t\tif (row[0][2] > row[2][0]) rV[1] = -rV[1];\r\n\t\tif (row[1][0] > row[0][1]) rV[2] = -rV[2];\r\n\r\n\t\tret.translate = tV;\r\n\t\tret.rotate = rV;\r\n\t\tret.scale = scV;\r\n\t\tret.skew = skV;\r\n\t\tret.perspective = pV;\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Decompose transformation matrix2d from matrix3d.\r\n\t * @public\r\n\t * @param  {Number[]} matrix Matrix3d\r\n\t * @param  {Object}   ret    To store various transformation properties like translate, angle and matrix.\r\n\t * @return {Boolean}  ret    To store various transformation properties like translate, angle and matrix.\r\n\t */\r\n\tdecompose2D: function(m, ret) {\r\n\t\tvar scale = [],\r\n\t\t\tmatrix = [],\r\n\t\t\trow0x = m[0],\r\n\t\t\trow0y = m[1],\r\n\t\t\trow1x = m[4],\r\n\t\t\trow1y = m[5],\r\n\t\t\tdet, angle, sn, cs,\r\n\t\t\tm11, m12, m21, m22;\r\n\r\n\t\tret = ret || {};\r\n\t\tscale = [\r\n\t\t\tMath.sqrt(row0x * row0x + row0y * row0y),\r\n\t\t\tMath.sqrt(row1x * row1x + row1y * row1y)\r\n\t\t];\r\n\r\n\t\t// If determinant is negative, one axis was flipped.\r\n\t\tdet = row0x * row1y - row0y * row1x;\r\n\t\tif (det < 0)\r\n\t\t// Flip axis with minimum unit vector dot product.\r\n\t\t\tif (row0x < row1y)\r\n\t\t\t\tscale[0] = -scale[0];\r\n\t\t\telse\r\n\t\t\t\tscale[1] = -scale[1];\r\n\r\n\t\t\t// Renormalize matrix to remove scale. \r\n\t\tif (scale[0]) {\r\n\t\t\trow0x *= 1 / scale[0];\r\n\t\t\trow0y *= 1 / scale[0];\r\n\t\t}\r\n\r\n\t\tif (scale[1]) {\r\n\t\t\trow1x *= 1 / scale[1];\r\n\t\t\trow1y *= 1 / scale[1];\r\n\t\t}\r\n\t\tret.scale = scale;\r\n\r\n\r\n\t\t// Compute rotation and renormalize matrix. \r\n\t\tangle = Math.atan2(row0y, row0x);\r\n\r\n\t\tif (angle) {\r\n\t\t\tsn = -row0y;\r\n\t\t\tcs = row0x;\r\n\t\t\tm11 = row0x;\r\n\t\t\tm12 = row0y;\r\n\t\t\tm21 = row1x;\r\n\t\t\tm22 = row1y;\r\n\t\t\trow0x = cs * m11 + sn * m21;\r\n\t\t\trow0y = cs * m12 + sn * m22;\r\n\t\t\trow1x = -sn * m11 + cs * m21;\r\n\t\t\trow1y = -sn * m12 + cs * m22;\r\n\t\t}\r\n\r\n\t\t// Rotate(-angle) = [cos(angle), sin(angle), -sin(angle), cos(angle)]\r\n\t\t//                = [row0x, -row0y, row0y, row0x]\r\n\t\t// Thanks to the normalization above.\r\n\t\tmatrix[0] = row0x;\r\n\t\tmatrix[1] = row0y;\r\n\t\tmatrix[2] = row1x;\r\n\t\tmatrix[3] = row1y;\r\n\t\tmatrix[4] = m[12];\r\n\t\tmatrix[5] = m[13];\r\n\t\tret.matrix2D = matrix;\r\n\r\n\t\t// Convert into degrees because our rotation functions expect it.\r\n\t\tret.angle = angle * 180 / Math.PI;\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/**\r\n\t * Convert Matrix3d array to Matrix3d String\r\n\t * @public\r\n\t * @param  {Number[]} m Matrix3d Array\r\n\t * @return {String}     Matrix3d String\r\n\t */\r\n\ttoString: function(m) {\r\n\t\tvar i, ms = m.length > 10 ? 'matrix3d(' : 'matrix(';\r\n\t\tfor (i = 0; i < m.length - 1; i++) {\r\n\t\t\tms += (m[i] < 0.000001 && m[i] > -0.000001) ? '0,' : m[i] + ',';\r\n\t\t}\r\n\t\tms += m[m.length - 1] + ')';\r\n\t\treturn ms;\r\n\t}\r\n};\r\n\r\nvar vector = exports.Vector = {\r\n\t/**\r\n\t * Length of a vector\r\n\t * @param  {Number[]} v - vector\r\n\t * @return {Number} resultant length\r\n\t * @public\r\n\t */\r\n\tlen: function(v) {\r\n\t\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\r\n\t},\r\n\r\n\t/**\r\n\t * Divides vector with a scalar value.\r\n\t * @param  {Number[]} v - vector\r\n\t * @param  {Number} s - scalar value to divide\r\n\t * @return {Number[]} resultant vector\r\n\t * @public\r\n\t */\r\n\tdivide: function(v, s) {\r\n\t\tvar divideVector = new Float32Array([v[0] / s, v[1] / s, v[2] / s]);\r\n\t\treturn divideVector;\r\n\t},\r\n\r\n\t/**\r\n\t * Dot product of 3D vectors\r\n\t * @param  {Number[]} v1 - vector\r\n\t * @param  {Number[]} v2 - vector\r\n\t * @return {Number} resultant dot product\r\n\t * @public\r\n\t */\r\n\tdot: function(v1, v2) {\r\n\t\treturn (v1[0] * v2[0]) + (v1[1] * v2[1]) + (v1[2] * v2[2]) + (v1[3] !== undefined && v2[3] !== undefined ? (v1[3] * v2[3]) : 0);\r\n\t},\r\n\r\n\t/**\r\n\t * Cross product of two vectors\r\n\t * @param  {Number[]} v1 - vector\r\n\t * @param  {Number[]} v2 - vector\r\n\t * @return {Number[]} resultant cross product\r\n\t * @public\r\n\t */\r\n\tcross: function(v1, v2) {\r\n\t\tvar crossProdMat = new Float32Array([v1[1] * v2[2] - v1[2] * v2[1], v1[2] * v2[0] - v1[0] * v2[2], v1[0] * v2[1] - v1[1] * v2[0]]);\r\n\t\treturn crossProdMat;\r\n\t},\r\n\r\n\t/**\r\n\t * Combine scalar values with two vectors.\r\n\t * Required during parsing scaler values matrix.\r\n\t * @param  {Number[]} a - first vector\r\n\t * @param  {Number[]} b - second vector\r\n\t * @param  {Number[]} ascl - first vector scalar\r\n\t * @param  {Number[]} bscl - second vector scalar\r\n\t * @return {Number[]} resultant vector\r\n\t * @public\r\n\t */\r\n\tcombine: function(a, b, ascl, bscl) {\r\n\t\tvar combineMat = new Float32Array([(ascl * a[0]) + (bscl * b[0]), (ascl * a[1]) + (bscl * b[1]), (ascl * a[2]) + (bscl * b[2])]);\r\n\t\treturn combineMat;\r\n\r\n\t}\r\n};\r\n\r\nvar quaternion = exports.Quaternion = {\r\n\t/**\r\n\t * Gives the direction of motion from one vector to other.\r\n\t * Returns true if moving towards positive direction.\r\n\t * @param  {Number[]} q1 - quant\r\n\t * @param  {Number[]} q2 - quant\r\n\t * @return {boolean} true if positive, false otherwise.\r\n\t * @public\r\n\t */\r\n\tdirection: function(q1, q2) {\r\n\t\treturn (q1[0] - q2[0]) < 0 || (q1[1] - q2[1]) < 0 || (q1[2] - q2[2]) < 0;\r\n\t},\r\n\r\n\t/**\r\n\t * Dot product of 3D quanterion\r\n\t * @param  {Number[]} q1 - quanterion\r\n\t * @param  {Number[]} q2 - quanterion\r\n\t * @return {Number} resultant dot product\r\n\t * @public\r\n\t */\r\n\tquantDot: function(q1, q2) {\r\n\t\treturn (q1[0] * q2[0]) + (q1[1] * q2[1]) + (q1[2] * q2[2]) + (q1[3] * q2[3]);\r\n\t},\r\n\r\n\tmultiplication: function(q1, q2) {\r\n\t\treturn [q2[0] * q1[0] - q2[1] * q1[1] - q2[2] * q1[2] - q2[3] * q1[3],\r\n\t\t\t\tq2[0] * q1[1] + q2[1] * q1[0] - q2[2] * q1[3] + q2[3] * q1[2],\r\n\t\t\t\tq2[0] * q1[2] + q2[1] * q1[3] + q2[2] * q1[0] - q2[3] * q1[1],\r\n\t\t\t\tq2[0] * q1[3] - q2[1] * q1[2] + q2[2] * q1[1] + q2[3] * q1[0]];\r\n\t},\r\n\r\n\t/**\r\n\t * Normalizing a vector is obtaining another unit vector in the same direction.\r\n\t * To normalize a vector, divide the vector by its magnitude.\r\n\t * @param  {Number[]} q1 - quanterion\r\n\t * @return {Number[]} resultant quanterion\r\n\t * @public\r\n\t */\r\n\tnormalize: function(q) {\r\n\t\treturn vector.divide(q, vector.len(q));\r\n\t},\r\n\r\n\t/**\r\n\t * Converts a rotation vector to a quaternion vector.\r\n\t * @param  {Number[]} v - vector\r\n\t * @return {Number[]} resultant quaternion\r\n\t * @public\r\n\t */\r\n\ttoQuant: function(v) {\r\n\t\tif (!v) v = [];\r\n\t\tvar p = parseFloat(v[1] || 0) * Math.PI / 360,\r\n\t\t\ty = parseFloat(v[2] || 0) * Math.PI / 360,\r\n\t\t\tr = parseFloat(v[0] || 0) * Math.PI / 360,\r\n\t\t\tc1 = Math.cos(p),\r\n\t\t\tc2 = Math.cos(y),\r\n\t\t\tc3 = Math.cos(r),\r\n\t\t\ts1 = Math.sin(p),\r\n\t\t\ts2 = Math.sin(y),\r\n\t\t\ts3 = Math.sin(r),\r\n\t\t\tq;\r\n\r\n\t\tq = new Float32Array([\r\n\t\t\tMath.round((s1 * s2 * c3 + c1 * c2 * s3) * 100000) / 100000,\r\n\t\t\tMath.round((s1 * c2 * c3 + c1 * s2 * s3) * 100000) / 100000,\r\n\t\t\tMath.round((c1 * s2 * c3 - s1 * c2 * s3) * 100000) / 100000,\r\n\t\t\tMath.round((c1 * c2 * c3 - s1 * s2 * s3) * 100000) / 100000\r\n\t\t]);\r\n\r\n\t\treturn q;\r\n\t}\r\n\t//TODO: Acheive the same fucntionality for other 11 choices XYX, XZX, XZY, YXY, YXZ, YZX, YZY, ZXY, ZXZ, ZYX, ZYZ \r\n};","require('enyo');\r\n\r\n/**\r\n* Contains methods for dealing with jobs.\r\n* @module enyo/job\r\n*/\r\nvar _jobs = {};\r\n\r\n/**\r\n* Runs a job after a specified amount of time has elapsed\r\n* since a job with the same name has run.\r\n* \r\n* Jobs can be used to throttle behaviors.  If some event may occur one time or\r\n* multiple times, but we want a response to occur only once every `n` seconds,\r\n* we can use a job.\r\n*\r\n* ```\r\n* onscroll: function() {\r\n* \t// updateThumb will be called, but only when 1 second has elapsed since the\r\n* \t// last onscroll\r\n* \texports(\"updateThumb\", this.bindSafely(\"updateThumb\"), 1000);\r\n* }\r\n* ```\r\n*\r\n* @param {String} nom - The name of the job to throttle.\r\n* @param {(Function|String)} job - Either the name of a method or a [function]{@glossary Function}\r\n*                                to execute as the requested job.\r\n* @param {Number} wait - The number of milliseconds to wait before executing the job again.\r\n* @function\r\n* @public\r\n*/\r\nexports = module.exports = function (nom, job, wait) {\r\n\texports.stop(nom);\r\n\t_jobs[nom] = setTimeout(function() {\r\n\t\texports.stop(nom);\r\n\t\tjob();\r\n\t}, wait);\r\n};\r\n\r\n/**\r\n* Cancels the named job, if it has not already fired.\r\n*\r\n* @param {String} nom - The name of the job to cancel.\r\n* @static\r\n* @public\r\n*/\r\nexports.stop = function (nom) {\r\n\tif (_jobs[nom]) {\r\n\t\tclearTimeout(_jobs[nom]);\r\n\t\tdelete _jobs[nom];\r\n\t}\r\n};\r\n\r\n/**\r\n* Immediately invokes the job and prevents any other calls\r\n* to `exports.throttle()` with the same job name from running for the\r\n* specified amount of time.\r\n* \r\n* This is used for throttling user events when you want to provide an\r\n* immediate response, but later invocations might just be noise if they arrive\r\n* too often.\r\n* \r\n* @param {String} nom - The name of the job to throttle.\r\n* @param {(Function|String)} job - Either the name of a method or a [function]{@glossary Function}\r\n*                                to execute as the requested job.\r\n* @param {Number} wait - The number of milliseconds to wait before executing the\r\n*                      job again.\r\n* @static\r\n* @public\r\n*/\r\nexports.throttle = function (nom, job, wait) {\r\n\t// if we still have a job with this name pending, return immediately\r\n\tif (_jobs[nom]) {\r\n\t\treturn;\r\n\t}\r\n\tjob();\r\n\t_jobs[nom] = setTimeout(function() {\r\n\t\texports.stop(nom);\r\n\t}, wait);\r\n};\r\n","require('enyo');\r\n\r\nvar utils = require('./utils');\r\n\r\n/**\r\n* Determines OS versions of platforms that need special treatment. Can have one of the following\r\n* properties:\r\n*\r\n* * android\r\n* * androidChrome (Chrome on Android, standard starting in 4.1)\r\n* * androidFirefox\r\n* * ie\r\n* * edge\r\n* * ios\r\n* * webos\r\n* * windowsPhone\r\n* * blackberry\r\n* * tizen\r\n* * safari (desktop version)\r\n* * chrome (desktop version)\r\n* * firefox (desktop version)\r\n* * firefoxOS\r\n*\r\n* If the property is defined, its value will be the major version number of the platform.\r\n*\r\n* Example:\r\n* ```javascript\r\n* // android 2 does not have 3d css\r\n* if (enyo.platform.android < 3) {\r\n* \tt = 'translate(30px, 50px)';\r\n* } else {\r\n* \tt = 'translate3d(30px, 50px, 0)';\r\n* }\r\n* this.applyStyle('-webkit-transform', t);\r\n* ```\r\n*\r\n* @module enyo/platform\r\n*/\r\nexports = module.exports = {\r\n\t/**\r\n\t* `true` if the platform has native single-finger [events]{@glossary event}.\r\n\t* @public\r\n\t*/\r\n\ttouch: Boolean(('ontouchstart' in window) || window.navigator.msMaxTouchPoints || (window.navigator.msManipulationViewsEnabled && window.navigator.maxTouchPoints)),\r\n\t/**\r\n\t* `true` if the platform has native double-finger [events]{@glossary event}.\r\n\t* @public\r\n\t*/\r\n\tgesture: Boolean(('ongesturestart' in window) || ('onmsgesturestart' in window && (window.navigator.msMaxTouchPoints > 1 || window.navigator.maxTouchPoints > 1)))\r\n\r\n\t/**\r\n\t* The name of the platform that was detected or `undefined` if the platform\r\n\t* was unrecognized. This value is the key name for the major version of the\r\n\t* platform on the exported object.\r\n\t* @member {String} platformName\r\n\t* @public\r\n\t*/\r\n\r\n};\r\n\r\nvar ua = navigator.userAgent;\r\nvar ep = exports;\r\nvar platforms = [\r\n\t// Windows Phone 7 - 10\r\n\t{platform: 'windowsPhone', regex: /Windows Phone (?:OS )?(\\d+)[.\\d]+/},\r\n\t// Android 4+ using Chrome\r\n\t{platform: 'androidChrome', regex: /Android .* Chrome\\/(\\d+)[.\\d]+/},\r\n\t// Android 2 - 4\r\n\t{platform: 'android', regex: /Android(?:\\s|\\/)(\\d+)/},\r\n\t// Kindle Fire\r\n\t// Force version to 2, (desktop mode does not list android version)\r\n\t{platform: 'android', regex: /Silk\\/1./, forceVersion: 2, extra: {silk: 1}},\r\n\t// Kindle Fire HD (Silk versions 2 or 3)\r\n\t// Force version to 4\r\n\t{platform: 'android', regex: /Silk\\/2./, forceVersion: 4, extra: {silk: 2}},\r\n\t{platform: 'android', regex: /Silk\\/3./, forceVersion: 4, extra: {silk: 3}},\r\n\t// IE 8 - 10\r\n\t{platform: 'ie', regex: /MSIE (\\d+)/},\r\n\t// IE 11\r\n\t{platform: 'ie', regex: /Trident\\/.*; rv:(\\d+)/},\r\n\t// Edge\r\n\t{platform: 'edge', regex: /Edge\\/(\\d+)/},\r\n\t// iOS 3 - 5\r\n\t// Apple likes to make this complicated\r\n\t{platform: 'ios', regex: /iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/},\r\n\t// webOS 1 - 3\r\n\t{platform: 'webos', regex: /(?:web|hpw)OS\\/(\\d+)/},\r\n\t// webOS 4 / OpenWebOS\r\n\t{platform: 'webos', regex: /WebAppManager|Isis|webOS\\./, forceVersion: 4},\r\n\t// Open webOS release LuneOS\r\n\t{platform: 'webos', regex: /LuneOS/, forceVersion: 4, extra: {luneos: 1}},\r\n\t// desktop Safari\r\n\t{platform: 'safari', regex: /Version\\/(\\d+)[.\\d]+\\s+Safari/},\r\n\t// desktop Chrome\r\n\t{platform: 'chrome', regex: /Chrome\\/(\\d+)[.\\d]+/},\r\n\t// Firefox on Android\r\n\t{platform: 'androidFirefox', regex: /Android;.*Firefox\\/(\\d+)/},\r\n\t// FirefoxOS\r\n\t{platform: 'firefoxOS', regex: /Mobile;.*Firefox\\/(\\d+)/},\r\n\t// desktop Firefox\r\n\t{platform: 'firefox', regex: /Firefox\\/(\\d+)/},\r\n\t// Blackberry Playbook\r\n\t{platform: 'blackberry', regex: /PlayBook/i, forceVersion: 2},\r\n\t// Blackberry 10+\r\n\t{platform: 'blackberry', regex: /BB1\\d;.*Version\\/(\\d+\\.\\d+)/},\r\n\t// Tizen\r\n\t{platform: 'tizen', regex: /Tizen (\\d+)/}\r\n];\r\nfor (var i = 0, p, m, v; (p = platforms[i]); i++) {\r\n\tm = p.regex.exec(ua);\r\n\tif (m) {\r\n\t\tif (p.forceVersion) {\r\n\t\t\tv = p.forceVersion;\r\n\t\t} else {\r\n\t\t\tv = Number(m[1]);\r\n\t\t}\r\n\t\tep[p.platform] = v;\r\n\t\tif (p.extra) {\r\n\t\t\tutils.mixin(ep, p.extra);\r\n\t\t}\r\n\t\tep.platformName = p.platform;\r\n\t\tbreak;\r\n\t}\r\n}\r\n","/**\r\n* Exports the {@link module:enyo/StateSupport~StateSupport} mixin\r\n* @module enyo/StateSupport\r\n*/\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tStates = require('./States');\r\n\r\n/**\r\n* Provides generic API methods related to using {@link module:enyo/States}.\r\n*\r\n* @mixin\r\n* @public\r\n*/\r\nvar StateSupport = {\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'StateSupport',\r\n\t\r\n\t/**\r\n\t* The given status. This property will be modified by the other API methods of\r\n\t* {@link module:enyo/StateSupport~StateSupport}.\r\n\t*\r\n\t* @type module:enyo/States\r\n\t* @default null\r\n\t*/\r\n\tstatus: null,\r\n\t\r\n\t/**\r\n\t* Will remove any [error flags]{@link module:enyo/States.ERROR} from the given\r\n\t* [status]{@link module:enyo/StateSupport~StateSupport.status}.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tclearError: function () {\r\n\t\tthis.status = this.status & ~States.ERROR;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Convenience method to avoid using [bitwise]{@glossary bitwise} comparison for the\r\n\t* [status]{@link module:enyo/StateSupport~StateSupport.status}. Determines whether the current status\r\n\t* (or the optional passed-in value) is an [error state]{@link module:enyo/States.ERROR}.\r\n\t* The passed-in value will only be used if it is a [Number]{@glossary Number}.\r\n\t*\r\n\t* @param {module:enyo/States} [status] - The specific value to compare as an\r\n\t*\t[error state]{@link module:enyo/States.ERROR}.\r\n\t* @returns {Boolean} Whether the value is an [error state]{@link module:enyo/States.ERROR} or not.\r\n\t* @public\r\n\t*/\r\n\tisError: function (status) {\r\n\t\treturn !! ((isNaN(status) ? this.status : status) & States.ERROR);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Convenience method to avoid using [bitwise]{@glossary bitwise} comparison for the\r\n\t* [status]{@link module:enyo/StateSupport~StateSupport.status}. Determines whether the current status\r\n\t* (or the optional passed-in value) is a [busy state]{@link module:enyo/States.BUSY}. The\r\n\t* passed-in value will only be used if it is a [Number]{@glossary Number}.\r\n\t*\r\n\t* @param {module:enyo/States} [status] - The specific value to compare as a\r\n\t*\t[busy state]{@link module:enyo/States.BUSY}.\r\n\t* @returns {Boolean} Whether the value is a [busy state]{@link module:enyo/States.BUSY} or not.\r\n\t* @public\r\n\t*/\r\n\tisBusy: function (status) {\r\n\t\treturn !! ((isNaN(status) ? this.status : status) & States.BUSY);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Convenience method to avoid using [bitwise]{@glossary bitwise} comparison for the\r\n\t* [status]{@link module:enyo/StateSupport~StateSupport.status}. Determines whether the current status\r\n\t* (or the optional passed-in value) is a [ready state]{@link module:enyo/States.READY}. The\r\n\t* passed-in value will only be used if it is a [Number]{@glossary Number}.\r\n\t*\r\n\t* @param {module:enyo/States} [status] - The specific value to compare as a\r\n\t*\t[ready state]{@link module:enyo/States.READY}.\r\n\t* @returns {Boolean} Whether the value is a [ready state]{@link module:enyo/States.BUSY} or not.\r\n\t* @public\r\n\t*/\r\n\tisReady: function (status) {\r\n\t\treturn !! ((isNaN(status) ? this.status : status) & States.READY);\r\n\t}\r\n};\r\n\r\nmodule.exports = StateSupport;\r\n","require('enyo');\r\n\r\nvar\r\n\tjson = require('./json'),\r\n\tutils = require('./utils'),\r\n\tplatform = require('./platform');\r\n\r\n/**\r\n* These platforms only allow one argument for [console.log()]{@glossary console.log}:\r\n*\r\n* * android\r\n* * ios\r\n* * webos\r\n*\r\n* @ignore\r\n*/\r\nvar dumbConsole = Boolean(platform.android || platform.ios || platform.webos);\r\n\r\n/**\r\n* Internally used methods and properties associated with logging.\r\n*\r\n* @module enyo/logger\r\n* @public\r\n*/\r\nexports = module.exports = {\r\n\r\n\t/**\r\n\t* The log level to use. Can be a value from -1 to 99, where -1 disables all\r\n\t* logging, 0 is 'error', 10 is 'warn', and 20 is 'log'. It is preferred that\r\n\t* this value be set using the [setLogLevel()]{@link module:enyo/logger#setLogLevel}\r\n\t* method.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 99\r\n\t* @public\r\n\t*/\r\n\tlevel: 99,\r\n\r\n\t/**\r\n\t* The known levels.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tlevels: {log: 20, warn: 10, error: 0},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tshouldLog: function (fn) {\r\n\t\tvar ll = parseInt(this.levels[fn], 0);\r\n\t\treturn (ll <= this.level);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tvalidateArgs: function (args) {\r\n\t\t// gracefully handle and prevent circular reference errors in objects\r\n\t\tfor (var i=0, l=args.length, item; (item=args[i]) || i<l; i++) {\r\n\t\t\ttry {\r\n\t\t\t\tif (typeof item === 'object') {\r\n\t\t\t\t\targs[i] = json.stringify(item);\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\targs[i] = 'Error: ' + e.message;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_log: function (fn, args) {\r\n\t\t// avoid trying to use console on IE instances where the object hasn't been\r\n\t\t// created due to the developer tools being unopened\r\n\t\tvar console = global.console;\r\n\t\tif (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n\t\t//var a$ = utils.logging.formatArgs(fn, args);\r\n\t\tvar a$ = utils.isArray(args) ? args : utils.cloneArray(args);\r\n\t\tif (platform.androidFirefox) {\r\n\t\t\t// Firefox for Android's console does not handle objects with circular references\r\n\t\t\tthis.validateArgs(a$);\r\n\t\t}\r\n\t\tif (dumbConsole) {\r\n\t\t\t// at least in early versions of webos, console.* only accept a single argument\r\n\t\t\ta$ = [a$.join(' ')];\r\n\t\t}\r\n\t\tvar fn$ = console[fn];\r\n\t\tif (fn$ && fn$.apply) {\r\n\t\t\t// some consoles support 'warn', 'info', and so on\r\n\t\t\tfn$.apply(console, a$);\r\n\t\t} else if (console.log.apply) {\r\n\t\t\t// some consoles support console.log.apply\r\n\t\t\tconsole.log.apply(console, a$);\r\n\t\t} else {\r\n\t\t\t// otherwise, do our own formatting\r\n\t\t\tconsole.log(a$.join(' '));\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* This is exposed elsewhere.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tlog: function (fn, args) {\r\n\r\n\t\tif (fn != 'log' && fn != 'warn' && fn != 'error') {\r\n\t\t\targs = Array.prototype.slice.call(arguments);\r\n\t\t\tfn = 'log';\r\n\t\t}\r\n\r\n\t\tvar console = global.console;\r\n\t\tif (typeof console !== 'undefined') {\r\n\t\t\tif (this.shouldLog(fn)) {\r\n\t\t\t\tthis._log(fn, args);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n* Sets the log level to the given value. This will restrict the amount of output depending on\r\n* the settings. The higher the value, the more output that will be allowed. The default is\r\n* 99. The value, -1, would silence all logging, even 'error' (0).\r\n* Without the 'see': {@link module:enyo/logger#log}.\r\n*\r\n* @see module:enyo/logger#level\r\n* @see module:enyo/logger#log\r\n* @see module:enyo/logger#warn\r\n* @see module:enyo/logger#error\r\n* @param {Number} level - The level to set logging to.\r\n*/\r\nexports.setLogLevel = function (level) {\r\n\tvar ll = parseInt(level, 0);\r\n\tif (isFinite(ll)) {\r\n\t\tthis.level = ll;\r\n\t}\r\n};\r\n\r\n/**\r\n* A wrapper for [console.log()]{@glossary console.log}, compatible\r\n* across supported platforms. Will output only if the current\r\n* [log level]{@link module:enyo/logger#level} allows it. [Object]{@glossary Object}\r\n* parameters will be serialized via [JSON.stringify()]{@glossary JSON.stringify}\r\n* automatically.\r\n*\r\n* @utility\r\n* @see {@glossary console.log}\r\n* @param {...*} - The arguments to be logged.\r\n* @public\r\n*/\r\n\r\n/**\r\n* A wrapper for [console.warn()]{@glossary console.warn}, compatible\r\n* across supported platforms. Will output only if the current\r\n* [log level]{@link module:enyo/logger#level} allows it. [Object]{@glossary Object}\r\n* parameters will be serialized via [JSON.stringify()]{@glossary JSON.stringify}\r\n* automatically.\r\n*\r\n* @utility\r\n* @see {@glossary console.warn}\r\n* @param {...*} - The arguments to be logged.\r\n* @public\r\n*/\r\nexports.warn = function () {\r\n\tthis.log('warn', arguments);\r\n};\r\n\r\n/**\r\n* A wrapper for [console.error()]{@glossary console.error}, compatible\r\n* across supported platforms. Will output only if the current\r\n* [log level]{@link module:enyo/logger#level} allows it. [Object]{@glossary Object}\r\n* parameters will be serialized via [JSON.stringify()]{@glossary JSON.stringify}\r\n* automatically.\r\n*\r\n* @utility\r\n* @see {@glossary console.error}\r\n* @param {...*} - The arguments to be logged.\r\n* @public\r\n*/\r\nexports.error = function () {\r\n\tthis.log('error', arguments);\r\n};\r\n","/**\r\n* Contains methods for working with DOM\r\n* @module enyo/dom\r\n*/\r\nrequire('enyo');\r\n\r\nvar\r\n\troots = require('./roots'),\r\n\tutils = require('./utils'),\r\n\tplatform = require('./platform');\r\n\r\nvar dom = module.exports = {\r\n\r\n\t/**\r\n\t* Shortcut for `document.getElementById()` if `id` is a string; otherwise,\r\n\t* returns `id`. Uses `global.document` unless a document is specified in the\r\n\t* (optional) `doc` parameter.\r\n\t*\r\n\t* ```javascript\r\n\t* var\r\n\t* \tdom = require('enyo/dom');\r\n\t*\r\n\t* // find 'node' if it's a string id, or return it unchanged if it's already a node reference\r\n\t* var domNode = dom.byId(node);\r\n\t* ```\r\n\t*\r\n\t* @param {String} id - The document element ID to get.\r\n\t* @param {Node} [doc] - A [node]{@glossary Node} to search in. Default is the whole\r\n\t*\tdocument.\r\n\t* @returns {Element} A reference to a DOM element.\r\n\t* @public\r\n\t*/\r\n\tbyId: function(id, doc){\r\n\t\treturn (typeof id == 'string') ? (doc || document).getElementById(id) : id;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns a string with ampersand, less-than, and greater-than characters replaced with HTML\r\n\t* entities, e.g.,\r\n\t* ```\r\n\t* '&lt;code&gt;'This &amp; That'&lt;/code&gt;'\r\n\t* ```\r\n\t* becomes\r\n\t* ```\r\n\t* '&amp;lt;code&amp;gt;'This &amp;amp; That'&amp;lt;/code&amp;gt;'\r\n\t* ```\r\n\t*\r\n\t* @param {String} text - A string with entities you'd like to escape/convert.\r\n\t* @returns {String} A string that is properly escaped (the above characters.)\r\n\t* @public\r\n\t*/\r\n\tescape: function(text) {\r\n\t\treturn text !== null ? String(text).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;') : '';\r\n\t},\r\n\r\n\t/**\r\n\t* Returns an object describing the geometry of this node.\r\n\t*\r\n\t* @param {Node} n - The [node]{@glossary Node} to measure.\r\n\t* @returns {Object} An object containing the properties `top`, `left`,\r\n\t* `height`, and `width`.\r\n\t* @public\r\n\t*/\r\n\tgetBounds: function(n) {\r\n\t\tif (n) {\r\n\t\t\treturn {left: n.offsetLeft, top: n.offsetTop, width: n.offsetWidth, height: n.offsetHeight};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetComputedStyle: function(node) {\r\n\t\treturn global.getComputedStyle && node && global.getComputedStyle(node, null);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetComputedStyleValue: function(node, property, computedStyle) {\r\n\t\tvar s   = computedStyle || this.getComputedStyle(node),\r\n\t\t\tnIE = platform.ie;\r\n\r\n\t\ts = s ? s.getPropertyValue(property) : null;\r\n\r\n\t\tif (nIE) {\r\n\t\t\tvar oConversion = {\r\n\t\t\t\t'thin'   : '2px',\r\n\t\t\t\t'medium' : '4px',\r\n\t\t\t\t'thick'  : '6px',\r\n\t\t\t\t'none'   : '0'\r\n\t\t\t};\r\n\t\t\tif (typeof oConversion[s] != 'undefined') {\r\n\t\t\t\ts = oConversion[s];\r\n\t\t\t}\r\n\r\n\t\t\tif (s == 'auto') {\r\n\t\t\t\tswitch (property) {\r\n\t\t\t\tcase 'width':\r\n\t\t\t\t\ts = node.offsetWidth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'height':\r\n\t\t\t\t\ts = node.offsetHeight;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn s;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetFirstElementByTagName: function(tagName) {\r\n\t\tvar e = document.getElementsByTagName(tagName);\r\n\t\treturn e && e[0];\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tapplyBodyFit: function() {\r\n\t\tvar h = this.getFirstElementByTagName('html');\r\n\t\tif (h) {\r\n\t\t\tthis.addClass(h, 'enyo-document-fit');\r\n\t\t}\r\n\t\tdom.addBodyClass('enyo-body-fit');\r\n\t\tdom.bodyIsFitting = true;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetWindowWidth: function() {\r\n\t\tif (global.innerWidth) {\r\n\t\t\treturn global.innerWidth;\r\n\t\t}\r\n\t\tif (document.body && document.body.offsetWidth) {\r\n\t\t\treturn document.body.offsetWidth;\r\n\t\t}\r\n\t\tif (document.compatMode=='CSS1Compat' &&\r\n\t\t\tdocument.documentElement &&\r\n\t\t\tdocument.documentElement.offsetWidth ) {\r\n\t\t\treturn document.documentElement.offsetWidth;\r\n\t\t}\r\n\t\treturn 320;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetWindowHeight: function() {\r\n\t\tif (global.innerHeight) {\r\n\t\t\treturn global.innerHeight;\r\n\t\t}\r\n\t\tif (document.body && document.body.offsetHeight) {\r\n\t\t\treturn document.body.offsetHeight;\r\n\t\t}\r\n\t\tif (document.compatMode=='CSS1Compat' &&\r\n\t\t\tdocument.documentElement &&\r\n\t\t\tdocument.documentElement.offsetHeight ) {\r\n\t\t\treturn document.documentElement.offsetHeight;\r\n\t\t}\r\n\t\treturn 480;\r\n\t},\r\n\r\n\t/**\r\n\t* The proportion by which the `body` tag differs from the global size, in both X and Y\r\n\t* dimensions. This is relevant when we need to scale the whole interface down from 1920x1080\r\n\t* (1080p) to 1280x720 (720p), for example.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_bodyScaleFactorY: 1,\r\n\t_bodyScaleFactorX: 1,\r\n\tupdateScaleFactor: function() {\r\n\t\tvar bodyBounds = this.getBounds(document.body);\r\n\t\tthis._bodyScaleFactorY = bodyBounds.height / this.getWindowHeight();\r\n\t\tthis._bodyScaleFactorX = bodyBounds.width / this.getWindowWidth();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetComputedBoxValue: function(node, prop, boundary, computedStyle) {\r\n\t\tvar s = computedStyle || this.getComputedStyle(node);\r\n\t\tif (s) {\r\n\t\t\tvar p = s.getPropertyValue(prop + '-' + boundary);\r\n\t\t\treturn p === 'auto' ? 0 : parseInt(p, 10);\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\r\n\t/**\r\n\t* Gets the boundaries of a [node's]{@glossary Node} `margin` or `padding` box.\r\n\t*\r\n\t* @param {Node} node - The [node]{@glossary Node} to measure.\r\n\t* @param {Node} box - The boundary to measure from ('padding' or 'margin').\r\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, and\r\n\t*\t`left`.\r\n\t* @public\r\n\t*/\r\n\tcalcBoxExtents: function(node, box) {\r\n\t\tvar s = this.getComputedStyle(node);\r\n\t\treturn {\r\n\t\t\ttop: this.getComputedBoxValue(node, box, 'top', s),\r\n\t\t\tright: this.getComputedBoxValue(node, box, 'right', s),\r\n\t\t\tbottom: this.getComputedBoxValue(node, box, 'bottom', s),\r\n\t\t\tleft: this.getComputedBoxValue(node, box, 'left', s)\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t* Gets the calculated padding of a node. Shortcut for\r\n\t* {@link module:enyo/dom#calcBoxExtents}.\r\n\t*\r\n\t* @param {Node} node - The [node]{@glossary Node} to measure.\r\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, and\r\n\t*\t`left`.\r\n\t* @public\r\n\t*/\r\n\tcalcPaddingExtents: function(node) {\r\n\t\treturn this.calcBoxExtents(node, 'padding');\r\n\t},\r\n\r\n\t/**\r\n\t* Gets the calculated margin of a node. Shortcut for\r\n\t* {@link module:enyo/dom#calcBoxExtents}.\r\n\t*\r\n\t* @param {Node} node - The [node]{@glossary Node} to measure.\r\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, and\r\n\t*\t`left`.\r\n\t* @public\r\n\t*/\r\n\tcalcMarginExtents: function(node) {\r\n\t\treturn this.calcBoxExtents(node, 'margin');\r\n\t},\r\n\t/**\r\n\t* Returns an object like `{top: 0, left: 0, bottom: 100, right: 100, height: 10, width: 10}`\r\n\t* that represents the object's position relative to `relativeToNode` (suitable for absolute\r\n\t* positioning within that parent node). Negative values mean part of the object is not\r\n\t* visible. If you leave `relativeToNode` as `undefined` (or it is not a parent element), then\r\n\t* the position will be relative to the viewport and suitable for absolute positioning in a\r\n\t* floating layer.\r\n\t*\r\n\t* @param {Node} node - The [node]{@glossary Node} to measure.\r\n\t* @param {Node} relativeToNode - The [node]{@glossary Node} to measure the distance from.\r\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, `left`,\r\n\t*\t`height`, and `width`.\r\n\t* @public\r\n\t*/\r\n\tcalcNodePosition: function(targetNode, relativeToNode) {\r\n\t\t// Parse upward and grab our positioning relative to the viewport\r\n\t\tvar top = 0,\r\n\t\t\tleft = 0,\r\n\t\t\tnode = targetNode,\r\n\t\t\twidth = node.offsetWidth,\r\n\t\t\theight = node.offsetHeight,\r\n\t\t\ttransformProp = dom.getStyleTransformProp(),\r\n\t\t\txregex = /translateX\\((-?\\d+)px\\)/i,\r\n\t\t\tyregex = /translateY\\((-?\\d+)px\\)/i,\r\n\t\t\tborderLeft = 0, borderTop = 0,\r\n\t\t\ttotalHeight = 0, totalWidth = 0,\r\n\t\t\toffsetAdjustLeft = 0, offsetAdjustTop = 0;\r\n\r\n\t\tif (relativeToNode) {\r\n\t\t\ttotalHeight = relativeToNode.offsetHeight;\r\n\t\t\ttotalWidth = relativeToNode.offsetWidth;\r\n\t\t} else {\r\n\t\t\ttotalHeight = (document.body.parentNode.offsetHeight > this.getWindowHeight() ? this.getWindowHeight() - document.body.parentNode.scrollTop : document.body.parentNode.offsetHeight);\r\n\t\t\ttotalWidth = (document.body.parentNode.offsetWidth > this.getWindowWidth() ? this.getWindowWidth() - document.body.parentNode.scrollLeft : document.body.parentNode.offsetWidth);\r\n\t\t}\r\n\r\n\t\tif (node.offsetParent) {\r\n\t\t\tdo {\r\n\t\t\t\t// Adjust the offset if relativeToNode is a child of the offsetParent\r\n\t\t\t\tif (relativeToNode && relativeToNode.compareDocumentPosition(node.offsetParent) & Node.DOCUMENT_POSITION_CONTAINS) {\r\n\t\t\t\t\toffsetAdjustLeft = relativeToNode.offsetLeft;\r\n\t\t\t\t\toffsetAdjustTop = relativeToNode.offsetTop;\r\n\t\t\t\t}\r\n\t\t\t\t// Ajust our top and left properties based on the position relative to the parent\r\n\t\t\t\tleft += node.offsetLeft - (node.offsetParent ? node.offsetParent.scrollLeft : 0) - offsetAdjustLeft;\r\n\t\t\t\tif (transformProp && xregex.test(node.style[transformProp])) {\r\n\t\t\t\t\tleft += parseInt(node.style[transformProp].replace(xregex, '$1'), 10);\r\n\t\t\t\t}\r\n\t\t\t\ttop += node.offsetTop - (node.offsetParent ? node.offsetParent.scrollTop : 0) - offsetAdjustTop;\r\n\t\t\t\tif (transformProp && yregex.test(node.style[transformProp])) {\r\n\t\t\t\t\ttop += parseInt(node.style[transformProp].replace(yregex, '$1'), 10);\r\n\t\t\t\t}\r\n\t\t\t\t// Need to correct for borders if any exist on parent elements\r\n\t\t\t\tif (node !== targetNode) {\r\n\t\t\t\t\tif (global.getComputedStyle) {\r\n\t\t\t\t\t\tborderLeft = parseInt(global.getComputedStyle(node, '').getPropertyValue('border-left-width'), 10);\r\n\t\t\t\t\t\tborderTop = parseInt(global.getComputedStyle(node, '').getPropertyValue('border-top-width'), 10);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// No computed style options, so try the normal style object (much less robust)\r\n\t\t\t\t\t\tborderLeft = parseInt(node.style.borderLeftWidth, 10);\r\n\t\t\t\t\t\tborderTop = parseInt(node.style.borderTopWidth, 10);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (borderLeft) {\r\n\t\t\t\t\t\tleft += borderLeft;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (borderTop) {\r\n\t\t\t\t\t\ttop += borderTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Continue if we have an additional offsetParent, and either don't have a relativeToNode or the offsetParent is contained by the relativeToNode (if offsetParent contains relativeToNode, then we have already calculated up to the node, and can safely exit)\r\n\t\t\t} while ((node = node.offsetParent) && (!relativeToNode || relativeToNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY));\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t'top': top,\r\n\t\t\t'left': left,\r\n\t\t\t'bottom': totalHeight - top - height,\r\n\t\t\t'right': totalWidth - left - width,\r\n\t\t\t'height': height,\r\n\t\t\t'width': width\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t* Removes a node from the DOM.\r\n\t*\r\n\t* @param {Node} node - The [node]{@glossary Node} to remove.\r\n\t* @public\r\n\t*/\r\n\tremoveNode: function (node) {\r\n\t\tif (node.parentNode) node.parentNode.removeChild(node);\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the `innerHTML` property of the specified `node` to `html`.\r\n\t*\r\n\t* @param {Node} node - The [node]{@glossary Node} to set.\r\n\t* @param {String} html - An HTML string.\r\n\t* @public\r\n\t*/\r\n\tsetInnerHtml: function(node, html) {\r\n\t\tnode.innerHTML = html;\r\n\t},\r\n\r\n\t/**\r\n\t* Checks a [DOM]{@glossary Node} [node]{@glossary Node} for a specific CSS class.\r\n\t*\r\n\t* @param {Node} node - The [node]{@glossary Node} to set.\r\n\t* @param {String} s - The class name to check for.\r\n\t* @returns {(Boolean|undefined)} `true` if `node` has the `s` class; `undefined`\r\n\t* if there is no `node` or it has no `className` property.\r\n\t* @public\r\n\t*/\r\n\thasClass: function(node, s) {\r\n\t\tif (!node || !s || !node.className) { return; }\r\n\t\treturn (' ' + node.className + ' ').indexOf(' ' + s + ' ') >= 0;\r\n\t},\r\n\r\n\t/**\r\n\t* Uniquely adds a CSS class to a DOM node.\r\n\t*\r\n\t* @param {Node} node - The [node]{@glossary Node} to set.\r\n\t* @param {String} s - The class name to add.\r\n\t* @public\r\n\t*/\r\n\taddClass: function(node, s) {\r\n\t\tif (node && s && !this.hasClass(node, s)) {\r\n\t\t\tvar ss = node.className;\r\n\t\t\tnode.className = (ss + (ss ? ' ' : '') + s);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Removes a CSS class from a DOM node if it exists.\r\n\t*\r\n\t* @param {Node} node - The [node]{@glossary Node} from which to remove the class.\r\n\t* @param {String} s - The class name to remove from `node`.\r\n\t* @public\r\n\t*/\r\n\tremoveClass: function(node, s) {\r\n\t\tif (node && s && this.hasClass(node, s)) {\r\n\t\t\tvar ss = node.className;\r\n\t\t\tnode.className = (' ' + ss + ' ').replace(' ' + s + ' ', ' ').slice(1, -1);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Adds a class to `document.body`. This defers the actual class change if nothing has been\r\n\t* rendered into `body` yet.\r\n\t*\r\n\t* @param {String} s - The class name to add to the document's `body`.\r\n\t* @public\r\n\t*/\r\n\taddBodyClass: function(s) {\r\n\t\tif (!utils.exists(roots.roots) || roots.roots.length === 0) {\r\n\t\t\tif (dom._bodyClasses) {\r\n\t\t\t\tdom._bodyClasses.push(s);\r\n\t\t\t} else {\r\n\t\t\t\tdom._bodyClasses = [s];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.addClass(document.body, s);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Returns an object describing the absolute position on the screen, relative to the top left\r\n\t* corner of the screen. This function takes into account account absolute/relative\r\n\t* `offsetParent` positioning, `scroll` position, and CSS transforms (currently\r\n\t* `translateX`, `translateY`, and `matrix3d`).\r\n\t*\r\n\t* ```javascript\r\n\t* {top: ..., right: ..., bottom: ..., left: ..., height: ..., width: ...}\r\n\t* ```\r\n\t*\r\n\t* Values returned are only valid if `hasNode()` is truthy. If there's no DOM node for the\r\n\t* object, this returns a bounds structure with `undefined` as the value of all fields.\r\n\t*\r\n\t* @param {Node} n - The [node]{@glossary Node} to measure.\r\n\t* @returns {Object} An object containing the properties `top`, `right`, `bottom`, `left`,\r\n\t*\t`height`, and `width`.\r\n\t* @public\r\n\t*/\r\n\tgetAbsoluteBounds: function(targetNode) {\r\n\t\treturn utils.clone(targetNode.getBoundingClientRect());\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tflushBodyClasses: function() {\r\n\t\tif (dom._bodyClasses) {\r\n\t\t\tfor (var i = 0, c; (c=dom._bodyClasses[i]); ++i) {\r\n\t\t\t\tdom.addClass(document.body, c);\r\n\t\t\t}\r\n\t\t\tdom._bodyClasses = null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_bodyClasses: null,\r\n\r\n\t/**\r\n\t* Convert to various unit formats. Useful for converting pixels to a resolution-independent\r\n\t* measurement method, like \"rem\". Other units are available if defined in the\r\n\t* {@link module:enyo/dom#unitToPixelFactors} object.\r\n\t*\r\n\t* ```javascript\r\n\t* var\r\n\t* \tdom = require('enyo/dom');\r\n\t*\r\n\t* // Do calculations and get back the desired CSS unit.\r\n\t* var frameWidth = 250,\r\n\t*     frameWithMarginInches = dom.unit( 10 + frameWidth + 10, 'in' ),\r\n\t*     frameWithMarginRems = dom.unit( 10 + frameWidth + 10, 'rem' );\r\n\t* // '2.8125in' == frameWithMarginInches\r\n\t* // '22.5rem' == frameWithMarginRems\r\n\t* ```\r\n\t*\r\n\t* @param {(String|Number)} pixels - The the pixels or math to convert to the unit.\r\n\t*\t(\"px\" suffix in String format is permitted. ex: `'20px'`)\r\n\t* @param {(String)} toUnit - The name of the unit to convert to.\r\n\t* @returns {(Number|undefined)} Resulting conversion, in case of malformed input, `undefined`\r\n\t* @public\r\n\t*/\r\n\tunit: function (pixels, toUnit) {\r\n\t\tif (!toUnit || !this.unitToPixelFactors[toUnit]) return;\r\n\t\tif (typeof pixels == 'string' && pixels.substr(-2) == 'px') pixels = parseInt(pixels.substr(0, pixels.length - 2), 10);\r\n\t\tif (typeof pixels != 'number') return;\r\n\r\n\t\treturn (pixels / this.unitToPixelFactors[toUnit]) + '' + toUnit;\r\n\t},\r\n\r\n\t/**\r\n\t* Object that stores all of the pixel conversion factors to each keyed unit.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tunitToPixelFactors: {\r\n\t\t'rem': 12,\r\n\t\t'in': 96\r\n\t}\r\n};\r\n\r\n// override setInnerHtml for Windows 8 HTML applications\r\nif (typeof global.MSApp !== 'undefined' && typeof global.MSApp.execUnsafeLocalFunction !== 'undefined') {\r\n\tdom.setInnerHtml = function(node, html) {\r\n\t\tglobal.MSApp.execUnsafeLocalFunction(function() {\r\n\t\t\tnode.innerHTML = html;\r\n\t\t});\r\n\t};\r\n}\r\n\r\n// use faster classList interface if it exists\r\nif (document.head && document.head.classList) {\r\n\tdom.hasClass = function(node, s) {\r\n\t\tif (node) {\r\n\t\t\treturn node.classList.contains(s);\r\n\t\t}\r\n\t};\r\n\tdom.addClass = function(node, s) {\r\n\t\tif (node) {\r\n\t\t\treturn node.classList.add(s);\r\n\t\t}\r\n\t};\r\n\tdom.removeClass = function (node, s) {\r\n\t\tif (node) {\r\n\t\t\treturn node.classList.remove(s);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n* Allows bootstrapping in environments that do not have a global object right away.\r\n*\r\n* @param {Function} func - The function to run\r\n* @public\r\n*/\r\ndom.requiresWindow = function(func) {\r\n\tfunc();\r\n};\r\n\r\n\r\nvar cssTransformProps = ['transform', '-webkit-transform', '-moz-transform', '-ms-transform', '-o-transform'],\r\n\tstyleTransformProps = ['transform', 'webkitTransform', 'MozTransform', 'msTransform', 'OTransform'];\r\n\r\n/**\r\n* @private\r\n*/\r\ndom.calcCanAccelerate = function() {\r\n\t/* Android 2 is a liar: it does NOT support 3D transforms, even though Perspective is the best check */\r\n\tif (platform.android <= 2) {\r\n\t\treturn false;\r\n\t}\r\n\tvar p$ = ['perspective', 'WebkitPerspective', 'MozPerspective', 'msPerspective', 'OPerspective'];\r\n\tfor (var i=0, p; (p=p$[i]); i++) {\r\n\t\tif (typeof document.body.style[p] != 'undefined') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n/**\r\n* @private\r\n*/\r\ndom.getCssTransformProp = function() {\r\n\tif (this._cssTransformProp) {\r\n\t\treturn this._cssTransformProp;\r\n\t}\r\n\tvar i = utils.indexOf(this.getStyleTransformProp(), styleTransformProps);\r\n\tthis._cssTransformProp = cssTransformProps[i];\r\n\treturn this._cssTransformProp;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\ndom.getStyleTransformProp = function() {\r\n\tif (this._styleTransformProp || !document.body) {\r\n\t\treturn this._styleTransformProp;\r\n\t}\r\n\tfor (var i = 0, p; (p = styleTransformProps[i]); i++) {\r\n\t\tif (typeof document.body.style[p] != 'undefined') {\r\n\t\t\tthis._styleTransformProp = p;\r\n\t\t\treturn this._styleTransformProp;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\ndom.domTransformsToCss = function(inTransforms) {\r\n\tvar n, v, text = '';\r\n\tfor (n in inTransforms) {\r\n\t\tv = inTransforms[n];\r\n\t\tif ((v !== null) && (v !== undefined) && (v !== '')) {\r\n\t\t\ttext +=  n + '(' + v + ') ';\r\n\t\t}\r\n\t}\r\n\treturn text;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\ndom.transformsToDom = function(control) {\r\n\tvar css = this.domTransformsToCss(control.domTransforms),\r\n\t\tstyleProp;\r\n\r\n\tif (control.hasNode()) {\r\n\t\tstyleProp = this.getStyleTransformProp();\r\n\t} else {\r\n\t\tstyleProp = this.getCssTransformProp();\r\n\t}\r\n\r\n\tif (styleProp) control.applyStyle(styleProp, css);\r\n};\r\n\r\n/**\r\n* Returns `true` if the platform supports CSS3 Transforms.\r\n*\r\n* @returns {Boolean} `true` if platform supports CSS `transform` property;\r\n* otherwise, `false`.\r\n* @public\r\n*/\r\ndom.canTransform = function() {\r\n\treturn Boolean(this.getStyleTransformProp());\r\n};\r\n\r\n/**\r\n* Returns `true` if platform supports CSS3 3D Transforms.\r\n*\r\n* Typically used like this:\r\n* ```\r\n* if (dom.canAccelerate()) {\r\n* \tdom.transformValue(this.$.slidingThing, 'translate3d', x + ',' + y + ',' + '0')\r\n* } else {\r\n* \tdom.transformValue(this.$.slidingThing, 'translate', x + ',' + y);\r\n* }\r\n* ```\r\n*\r\n* @returns {Boolean} `true` if platform supports CSS3 3D Transforms;\r\n* otherwise, `false`.\r\n* @public\r\n*/\r\ndom.canAccelerate = function() {\r\n\treturn (this.accelerando !== undefined) ? this.accelerando : document.body && (this.accelerando = this.calcCanAccelerate());\r\n};\r\n\r\n/**\r\n* Applies a series of transforms to the specified {@link module:enyo/Control~Control}, using\r\n* the platform's prefixed `transform` property.\r\n*\r\n* **Note:** Transforms are not commutative, so order is important.\r\n*\r\n* Transform values are updated by successive calls, so\r\n* ```javascript\r\n* dom.transform(control, {translate: '30px, 40px', scale: 2, rotate: '20deg'});\r\n* dom.transform(control, {scale: 3, skewX: '-30deg'});\r\n* ```\r\n*\r\n* is equivalent to:\r\n* ```javascript\r\n* dom.transform(control, {translate: '30px, 40px', scale: 3, rotate: '20deg', skewX: '-30deg'});\r\n* ```\r\n*\r\n* When applying these transforms in a WebKit browser, this is equivalent to:\r\n* ```javascript\r\n* control.applyStyle('-webkit-transform', 'translate(30px, 40px) scale(3) rotate(20deg) skewX(-30deg)');\r\n* ```\r\n*\r\n* And in Firefox, this is equivalent to:\r\n* ```javascript\r\n* control.applyStyle('-moz-transform', 'translate(30px, 40px) scale(3) rotate(20deg) skewX(-30deg)');\r\n* ```\r\n*\r\n* @param {module:enyo/Control~Control} control - The {@link module:enyo/Control~Control} to transform.\r\n* @param {Object} transforms - The set of transforms to apply to `control`.\r\n* @public\r\n*/\r\ndom.transform = function(control, transforms) {\r\n\tvar d = control.domTransforms = control.domTransforms || {};\r\n\tutils.mixin(d, transforms);\r\n\tthis.transformsToDom(control);\r\n};\r\n\r\n/**\r\n* Applies a single transform to the specified {@link module:enyo/Control~Control}.\r\n*\r\n* Example:\r\n* ```\r\n* tap: function(inSender, inEvent) {\r\n* \tvar c = inEvent.originator;\r\n* \tvar r = c.rotation || 0;\r\n* \tr = (r + 45) % 360;\r\n* \tc.rotation = r;\r\n* \tdom.transformValue(c, 'rotate', r);\r\n* }\r\n* ```\r\n*\r\n* This will rotate the tapped control by 45 degrees clockwise.\r\n*\r\n* @param {module:enyo/Control~Control} control - The {@link module:enyo/Control~Control} to transform.\r\n* @param {String} transform - The name of the transform function.\r\n* @param {(String|Number)} value - The value to apply to the transform.\r\n* @public\r\n*/\r\ndom.transformValue = function(control, transform, value) {\r\n\tvar d = control.domTransforms = control.domTransforms || {};\r\n\td[transform] = value;\r\n\tthis.transformsToDom(control);\r\n};\r\n\r\n/**\r\n* Applies a transform that should trigger GPU compositing for the specified\r\n* {@link module:enyo/Control~Control}. By default, the acceleration is only\r\n* applied if the browser supports it. You may also optionally force-set `value`\r\n* directly, to be applied to `translateZ(value)`.\r\n*\r\n* @param {module:enyo/Control~Control} control - The {@link module:enyo/Control~Control} to accelerate.\r\n* @param {(String|Number)} [value] - An optional value to apply to the acceleration transform\r\n*\tproperty.\r\n* @public\r\n*/\r\ndom.accelerate = function(control, value) {\r\n\tvar v = value == 'auto' ? this.canAccelerate() : value;\r\n\tthis.transformValue(control, 'translateZ', v ? 0 : null);\r\n};\r\n\r\n\r\n/**\r\n * The CSS `transition` property name for the current browser/platform, e.g.:\r\n *\r\n * * `-webkit-transition`\r\n * * `-moz-transition`\r\n * * `transition`\r\n *\r\n * @type {String}\r\n * @private\r\n */\r\ndom.transition = (platform.ios || platform.android || platform.chrome || platform.androidChrome || platform.safari)\r\n\t? '-webkit-transition'\r\n\t: (platform.firefox || platform.firefoxOS || platform.androidFirefox)\r\n\t\t? '-moz-transition'\r\n\t\t: 'transition';\r\n","/**\r\n* Contains methods useful for animations.\r\n* @module enyo/animation\r\n*/\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tplatform = require('./platform'),\r\n\tutils = require('./utils');\r\n\r\nvar ms = Math.round(1000/60),\r\n\tprefix = ['', 'webkit', 'moz', 'ms', 'o'],\r\n\trAF = 'requestAnimationFrame',\r\n\tcRAF = 'cancelRequestAnimationFrame',\r\n\tcAF = 'cancelAnimationFrame',\r\n\ti, pl, p, wcRAF, wrAF, wcAF,\r\n\t_requestFrame, _cancelFrame, cancelFrame,\r\n\tcore = { ts: 0, obs: {}};\r\n\r\n\r\n/*\r\n* Fallback on setTimeout\r\n*\r\n* @private\r\n*/\r\n_requestFrame = function(callback) {\r\n\treturn global.setTimeout(callback, ms);\r\n};\r\n\r\n/*\r\n* Fallback on clearTimeout\r\n*\r\n* @private\r\n*/\r\n_cancelFrame = function(id) {\r\n\treturn global.clearTimeout(id);\r\n};\r\n\r\nfor (i = 0, pl = prefix.length; (p = prefix[i]) || i < pl; i++) {\r\n\t// if we're on ios 6 just use setTimeout, requestAnimationFrame has some kinks\r\n\tif (platform.ios === 6) {\r\n\t\tbreak;\r\n\t}\r\n\r\n\t// if prefixed, becomes Request and Cancel\r\n\twrAF = p ? (p + utils.cap(rAF)) : rAF;\r\n\twcRAF = p ? (p + utils.cap(cRAF)) : cRAF;\r\n\twcAF = p ? (p + utils.cap(cAF)) : cAF;\r\n\r\n\t// Test for cancelRequestAnimationFrame, because some browsers (Firefix 4-10) have a request without a cancel\r\n\tcancelFrame = global[wcAF] || global[wcRAF];\r\n\tif (cancelFrame) {\r\n\t\t_cancelFrame = cancelFrame;\r\n\t\t_requestFrame = global[wrAF];\r\n\t\tif (p == 'webkit') {\r\n\t\t\t/*\r\n\t\t\t\tNote: In Chrome, the first return value of webkitRequestAnimationFrame is 0.\r\n\t\t\t\tWe make 1 bogus call so the first used return value of webkitRequestAnimationFrame is > 0, as the spec requires.\r\n\t\t\t\tThis makes it so that the requestId is always truthy.\r\n\t\t\t\t(we choose to do this rather than wrapping the native function to avoid the overhead)\r\n\t\t\t*/\r\n\t\t\t_cancelFrame(_requestFrame(utils.nop));\r\n\t\t}\r\n\t\tbreak;\r\n\t}\r\n}\r\n/**\r\n* Requests an animation callback.\r\n*\r\n* On compatible browsers, if `node` is defined, the [callback]{@glossary callback} will\r\n* fire only if `node` is visible.\r\n*\r\n* @param {Function} callback - A [callback]{@glossary callback} to be executed on the\r\n*                            animation frame.\r\n* @param {Node} node - The DOM node to request the animation frame for.\r\n* @returns {Object} A request id to be used with\r\n*                     {@link module:enyo/animation#cancelRequestAnimationFrame}.\r\n* @public\r\n*/\r\nexports.requestAnimationFrame = function(callback, node) {\r\n\treturn _requestFrame(callback, node);\r\n};\r\n/**\r\n* Cancels a requested animation callback with the specified id.\r\n*\r\n* @param {Number} id - The identifier of an animation request we wish to cancel.\r\n* @deprecated since 2.7.0\r\n* @public\r\n*/\r\nexports.cancelRequestAnimationFrame = function(id) {\r\n\treturn _cancelFrame(id);\r\n};\r\n/**\r\n* Cancels a requested animation callback with the specified id.\r\n*\r\n* @param {Number} id - The identifier of an animation request we wish to cancel.\r\n* @public\r\n*/\r\nexports.cancelAnimationFrame = function(id) {\r\n\treturn _cancelFrame(id);\r\n};\r\n/**\r\n* Subcribes for animation frame ticks.\r\n*\r\n* @param {Object} ctx - The context on which callback is registered.\r\n* @param {Function} callback - A [callback]{@glossary callback} to be executed on tick.\r\n* @public\r\n*/\r\nexports.subscribe = function(ctx,callback) {\r\n\tvar id = utils.uid(\"rAF\");\r\n\tcore.obs[id] = utils.bindSafely(ctx, callback);\r\n\treturn id;\r\n};\r\n/**\r\n* Unsubcribes for animation frame ticks.\r\n*\r\n* @param {Object} node - The context on which callback is registered.\r\n* @param {Function} callback - A [callback]{@glossary callback} to be executed on tick.\r\n* @public\r\n*/\r\nexports.unsubscribe = function(id) {\r\n\tdelete core.obs[id];\r\n};\r\n\r\nvar startrAF = function(){\r\n\t_requestFrame(function (time) {\r\n\t\tstartrAF();\r\n\t\tcore.ts = time;\r\n\t}.bind(this));\r\n};\r\nstartrAF();\r\n\r\n/**\r\n* Gives an interpolation of an animated transition's distance from 0 to 1.\r\n*\r\n* Given a start time (`t0`) and an animation duration (`duration`), this\r\n* method applies the `easing` function to the percentage of time elapsed\r\n* divided by duration, capped at 100%.\r\n*\r\n* @param {Number} t0 - Start time.\r\n* @param {Number} duration - Duration in milliseconds.\r\n* @param {Function} easing - An easing [function]{@glossary Function} reference from\r\n*\t{@link module:enyo/animation#easing}.\r\n* @param {Boolean} reverse - Whether the animation will run in reverse.\r\n* @returns {Number} The resulting position, capped at a maximum of 100%.\r\n* @public\r\n*/\r\nexports.easedLerp = function(t0, duration, easing, reverse) {\r\n\tvar lerp = (utils.perfNow() - t0) / duration;\r\n\tif (reverse) {\r\n\t\treturn lerp >= 1 ? 0 : (1 - easing(1 - lerp));\r\n\t} else {\r\n\t\treturn lerp >= 1 ? 1 : easing(lerp);\r\n\t}\r\n};\r\n\r\n/**\r\n* Gives an interpolation of an animated transition's distance from\r\n* `startValue` to `valueChange`.\r\n*\r\n* Applies the `easing` function with a wider range of variables to allow for\r\n* more complex animations.\r\n*\r\n* @param {Number} t0 - Start time.\r\n* @param {Number} duration - Duration in milliseconds.\r\n* @param {Function} easing - An easing [function]{@glossary Function} reference from\r\n*\t{@link module:enyo/animation#easing}.\r\n* @param {Boolean} reverse - Whether the animation will run in reverse.\r\n* @param {Number} time\r\n* @param {Number} startValue - Starting value.\r\n* @param {Number} valueChange\r\n* @returns {Number} The resulting position, capped at a maximum of 100%.\r\n* @public\r\n*/\r\nexports.easedComplexLerp = function(t0, duration, easing, reverse, time, startValue, valueChange) {\r\n\tvar lerp = (utils.perfNow() - t0) / duration;\r\n\tif (reverse) {\r\n\t\treturn easing(1 - lerp, time, startValue, valueChange, duration);\r\n\t} else {\r\n\t\treturn easing(lerp, time, startValue, valueChange, duration);\r\n\t}\r\n};\r\n\r\n\r\n//TODO: A temporary implementation for rAF with observers.\r\nObject.defineProperty(core, 'ts', {\r\n\r\n\tget: function() { \r\n\t\treturn this.value; \r\n\t},\r\n\r\n\tset: function(newValue) {\r\n\t\tfor(var i in this.obs){\r\n\t\t\tthis.obs[i](this.value, newValue);\r\n\t\t}\r\n\t\tthis.value = newValue;\r\n\t}\r\n});","require('enyo');\r\n\r\nvar\r\n\tDom = require('./dom');\r\n\r\nvar selfClosing = {img: 1, hr: 1, br: 1, area: 1, base: 1, basefont: 1, input: 1, link: 1,\r\n\tmeta: 1, command: 1, embed: 1, keygen: 1, wbr: 1, param: 1, source: 1, track: 1, col: 1};\r\n\r\n/**\r\n* This is the default render delegate used by {@link module:enyo/Control~Control}. It\r\n* generates the HTML [string]{@glossary String} content and correctly inserts\r\n* it into the DOM. A string-concatenation technique is used to perform DOM\r\n* insertion in batches.\r\n*\r\n* @module enyo/HTMLStringDelegate\r\n* @public\r\n*/\r\nmodule.exports = {\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tinvalidate: function (control, item) {\r\n\t\tswitch (item) {\r\n\t\tcase 'content':\r\n\t\t\tthis.renderContent(control);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tcontrol.tagsValid = false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trender: function (control) {\r\n\t\tif (control.parent) {\r\n\t\t\tcontrol.parent.beforeChildRender(control);\r\n\t\t\t\r\n\t\t\tif (!control.parent.generated) return;\r\n\t\t\tif (control.tag === null) return control.parent.render();\r\n\t\t}\r\n\t\t\r\n\t\tif (!control.hasNode()) this.renderNode(control);\r\n\t\tif (control.hasNode()) {\r\n\t\t\tthis.renderDom(control);\r\n\t\t\tif (control.generated) control.rendered();\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trenderInto: function (control, parentNode) {\r\n\t\tparentNode.innerHTML = this.generateHtml(control);\r\n\t\t\r\n\t\tif (control.generated) control.rendered();\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trenderNode: function (control) {\r\n\t\tthis.teardownRender(control);\r\n\t\tcontrol.node = document.createElement(control.tag);\r\n\t\tcontrol.addNodeToParent();\r\n\t\tcontrol.set('generated', true);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trenderDom: function (control) {\r\n\t\tthis.renderAttributes(control);\r\n\t\tthis.renderStyles(control);\r\n\t\tthis.renderContent(control);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trenderStyles: function (control) {\r\n\t\tvar style = control.style;\r\n\t\t\r\n\t\t// we can safely do this knowing it will synchronize properly without a double\r\n\t\t// set in the DOM because we're flagging the internal property\r\n\t\tif (control.hasNode()) {\r\n\t\t\tcontrol.node.style.cssText = style;\r\n\t\t\t// retrieve the parsed value for synchronization\r\n\t\t\tcontrol.cssText = style = control.node.style.cssText;\r\n\t\t\t// now we set it knowing they will be synchronized and everybody that is listening\r\n\t\t\t// will also be updated to know about the change\r\n\t\t\tcontrol.set('style', style);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trenderAttributes: function (control) {\r\n\t\tvar attrs = control.attributes,\r\n\t\t\tnode = control.hasNode(),\r\n\t\t\tkey,\r\n\t\t\tval;\r\n\t\t\r\n\t\tif (node) {\r\n\t\t\tfor (key in attrs) {\r\n\t\t\t\tval = attrs[key];\r\n\t\t\t\tif (val === null || val === false || val === \"\") {\r\n\t\t\t\t\tnode.removeAttribute(key);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.setAttribute(key, val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trenderContent: function (control) {\r\n\t\tif (control.generated) this.teardownChildren(control);\r\n\t\tif (control.hasNode()) control.node.innerHTML = this.generateInnerHtml(control);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgenerateHtml: function (control) {\r\n\t\tvar content,\r\n\t\t\thtml;\r\n\t\t\r\n\t\tif (control.canGenerate === false) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\t// do this first in case content generation affects outer html (styles or attributes)\r\n\t\tcontent = this.generateInnerHtml(control);\r\n\t\t// generate tag, styles, attributes\r\n\t\thtml = this.generateOuterHtml(control, content);\r\n\t\t// NOTE: 'generated' is used to gate access to findNodeById in\r\n\t\t// hasNode, because findNodeById is expensive.\r\n\t\t// NOTE: we typically use 'generated' to mean 'created in DOM'\r\n\t\t// but that has not actually happened at this point.\r\n\t\t// We set 'generated = true' here anyway to avoid having to walk the\r\n\t\t// control tree a second time (to set it later).\r\n\t\t// The contract is that insertion in DOM will happen synchronously\r\n\t\t// to generateHtml() and before anybody should be calling hasNode().\r\n\t\tcontrol.set('generated', true);\r\n\t\treturn html;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgenerateOuterHtml: function (control, content) {\r\n\t\tif (!control.tag) return content;\r\n\t\tif (!control.tagsValid) this.prepareTags(control);\r\n\t\treturn control._openTag + content + control._closeTag;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgenerateInnerHtml: function (control) {\r\n\t\tvar allowHtml = control.allowHtml,\r\n\t\t\tcontent;\r\n\t\t\r\n\t\t// flow can alter the way that html content is rendered inside\r\n\t\t// the container regardless of whether there are children.\r\n\t\tcontrol.flow();\r\n\t\tif (control.children.length) return this.generateChildHtml(control);\r\n\t\telse {\r\n\t\t\tcontent = control.get('content');\r\n\t\t\treturn allowHtml ? content : Dom.escape(content);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgenerateChildHtml: function (control) {\r\n\t\tvar child,\r\n\t\t\thtml = '',\r\n\t\t\ti = 0,\r\n\t\t\tdelegate;\r\n\t\t\r\n\t\tfor (; (child = control.children[i]); ++i) {\r\n\t\t\tdelegate = child.renderDelegate || this;\r\n\t\t\thtml += delegate.generateHtml(child);\r\n\t\t}\r\n\t\t\r\n\t\treturn html;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tprepareTags: function (control) {\r\n\t\tvar html = '';\r\n\t\t\r\n\t\t// open tag\r\n\t\thtml += '<' + control.tag + (control.style ? ' style=\"' + control.style + '\"' : '');\r\n\t\thtml += this.attributesToHtml(control.attributes);\r\n\t\tif (selfClosing[control.tag]) {\r\n\t\t\tcontrol._openTag = html + '/>';\r\n\t\t\tcontrol._closeTag = '';\r\n\t\t} else {\r\n\t\t\tcontrol._openTag = html + '>';\r\n\t\t\tcontrol._closeTag = '</' + control.tag + '>';\r\n\t\t}\r\n\t\t\r\n\t\tcontrol.tagsValid = true;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tattributesToHtml: function(attrs) {\r\n\t\tvar key,\r\n\t\t\tval,\r\n\t\t\thtml = '';\r\n\t\t\t\r\n\t\tfor (key in attrs) {\r\n\t\t\tval = attrs[key];\r\n\t\t\tif (val != null && val !== false && val !== '') {\r\n\t\t\t\thtml += ' ' + key + '=\"' + this.escapeAttribute(val) + '\"';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn html;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tescapeAttribute: function (text) {\r\n\t\tif (typeof text != 'string') return text;\r\n\t\r\n\t\treturn String(text).replace(/&/g, '&amp;').replace(/\\\"/g, '&quot;');\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tteardownRender: function (control, cache) {\r\n\t\tif (control.generated) {\r\n\t\t\tif (typeof control.beforeTeardown === 'function') {\r\n\t\t\t\tcontrol.beforeTeardown();\r\n\t\t\t}\r\n\t\t\tthis.teardownChildren(control, cache);\r\n\t\t}\r\n\t\t\t\r\n\t\tcontrol.node = null;\r\n\t\tcontrol.set('generated', false);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tteardownChildren: function (control, cache) {\r\n\t\tvar child,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor (; (child = control.children[i]); ++i) {\r\n\t\t\tchild.teardownRender(cache);\r\n\t\t}\r\n\t}\r\n};\r\n","require('enyo');\r\n\r\nvar\r\n    dom = require('./dom'),\r\n    utils = require('./utils'),\r\n    transform = require('./transform');\r\n\r\n\r\nvar fn, state, ease, points, path, oldState, newState, node, matrix, cState = [],\r\n    domCSS = {};\r\n/**\r\n * Tween is a module responsible for creating intermediate frames for an animation.\r\n * The responsibilities of this module is to;\r\n * - Interpolating current state of character.\r\n * - Update DOM based on current state, using matrix for tranform and styles for others.\r\n *\r\n * @module enyo/tween\r\n */\r\nmodule.exports = {\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    init: function(actor, pose, initial) {\r\n        var k;\r\n        actor.initialState = actor.initialState || {};\r\n        if (!(actor && pose && pose.animate)) return;\r\n        node = actor.hasNode();\r\n        utils.mixin(pose, getAnimatedProperty(node, pose.animate, initial));\r\n        actor.currentState = pose.currentState;\r\n        for (k in pose.initialState) {\r\n            actor.initialState[k] = actor.initialState[k] || pose.initialState[k];\r\n        }\r\n        return pose;\r\n    },\r\n\r\n    /**\r\n     * Step represents state of the actor at any point of time in the animation.\r\n     * @param  {Object} actor - Element to be animated\r\n     * @param  {Object} pose - Current behavior in the animation (at a given time)\r\n     * @param  {Number} t - Fraction which represents the animation (between 0 to 1)\r\n     * @param  {Number} d - Duration of the current pose\r\n     * @memberOf module:enyo/tween\r\n     * @private\r\n     */\r\n    step: function(actor, pose, t, d) {\r\n        if (!(actor && pose && pose.animate)) return;\r\n        t = t < 0 ? 0 : t;\r\n        t = t > 1 ? 1 : t;\r\n\r\n        var k;\r\n        domCSS = {};\r\n        node = actor.hasNode();\r\n        state = utils.clone(pose.currentState || pose._startAnim);\r\n        points = pose.controlPoints = pose.controlPoints || {};\r\n        ease = pose.animate && pose.animate.ease ? pose.animate.ease : this.ease;\r\n        path = pose.animate && pose.animate.path;\r\n\r\n        if (pose.props) {\r\n            for (k in pose.props) {\r\n                if (!pose._endAnim[k] || k === 'duration' || k === 'ease' || k === 'path') {\r\n                    continue;\r\n                }\r\n\r\n                cState = utils.clone(state[k] || []);\r\n                newState = pose._endAnim[k].slice();\r\n                oldState = pose._startAnim[k].slice();\r\n\r\n                if (ease && (typeof ease !== 'function')) {\r\n                    if (k == 'rotate') {\r\n                        points[k] = points[k] ||\r\n                            this.bezierSPoints(ease, oldState, newState, pose.props[k], points[k]);\r\n                        fn = this.bezierSpline;\r\n                    } else {\r\n                        points[k] = points[k] ||\r\n                            this.bezierPoints(ease, oldState, newState, points[k]);\r\n                        fn = this.bezier;\r\n                    }\r\n                    cState = fn.call(this, t, points[k], cState);\r\n                } else {\r\n                    fn = (k === 'rotate') ? this.slerp : this.lerp;\r\n                    cState = fn.call(this, oldState, newState, ease(t, d), cState);\r\n                }\r\n\r\n                if (!isTransform(k)) {\r\n                    domCSS = toPropertyValue(k, cState, domCSS);\r\n                }\r\n                state[k] = cState;\r\n            }\r\n        } else {\r\n            utils.mixin(state, oldState);\r\n        }\r\n\r\n        //TODO: Support for properties other than translate\r\n        if (path) {\r\n            this.traversePath(t, path, state.translate);\r\n        }\r\n\r\n        matrix = transform.Matrix.recompose(\r\n            state.translate,\r\n            state.rotate,\r\n            state.scale,\r\n            state.skew,\r\n            state.perspective\r\n        );\r\n        state.matrix = matrix;\r\n        pose.currentState = state;\r\n        domCSS = toTransformValue(matrix, domCSS);\r\n\r\n        actor.addStyles(domCSS);\r\n    },\r\n\r\n    halt: function(actor, pose) {\r\n        var matrix = pose.currentState && pose.currentState.matrix;\r\n        \r\n        pose = transform.Matrix.decompose2D(matrix);\r\n        domCSS = toTransformValue(pose.matrix2D);\r\n        actor.addStyles(domCSS);\r\n    },\r\n\r\n    /**\r\n     * Overridden function for applying the default ease.\r\n     * @param  {Number} t - Fraction which represents the animation (between 0 to 1)\r\n     * @return {Number} t\r\n     * @memberOf module:enyo/AnimationSupport/Tween\r\n     * @private\r\n     * @override\r\n     */\r\n    ease: function(t) {\r\n        return t;\r\n    },\r\n\r\n    /**\r\n     * Draws linear interpolation between two values.\r\n     * @param  {Number[]} vA - origin vector\r\n     * @param  {Number[]} vB - Destination vector\r\n     * @param  {Number} t - Fraction which represents the animation (between 0 to 1)\r\n     * @param  {Number[]} vR - Resultant vector\r\n     * @return {Number[]} vR\r\n     * @memberOf module:enyo/AnimationSupport/Tween\r\n     * @private\r\n     */\r\n    lerp: function(vA, vB, t, vR) {\r\n        if (!vA) return;\r\n        if (!vR) vR = [];\r\n        var i, l = vA.length;\r\n\r\n        for (i = 0; i < l; i++) {\r\n            vR[i] = (1 - t) * vA[i] + t * vB[i];\r\n        }\r\n        return vR;\r\n    },\r\n\r\n    /**\r\n     * Draws sperical linear interpolation between two values.\r\n     * @param  {Number[]} qA Quaternion origin\r\n     * @param  {Number[]} qB - Quaternion destination\r\n     * @param  {Number} t - Fraction which represents the animation (between 0 to 1)\r\n     * @param  {Number[]} qR - Resultant quaternion\r\n     * @return {Number[]} qR\r\n     * @memberOf module:enyo/AnimationSupport/Tween\r\n     * @private\r\n     */\r\n    slerp: function(qA, qB, t, qR) {\r\n        if (!qA) return;\r\n        if (!qR) qR = [];\r\n        var a,\r\n            b,\r\n            theta,\r\n            dot = transform.Quaternion.quantDot(qA, qB),\r\n            l = qA.length;\r\n\r\n        dot = Math.min(Math.max(dot, -1.0), 1.0);\r\n        if (dot == 1.0) {\r\n            qR = utils.cloneArray(qA);\r\n            return qR;\r\n        }\r\n        theta = Math.acos(dot);\r\n        for (var i = 0; i < l; i++) {\r\n            a = (Math.sin((1 - t) * theta) / Math.sin(theta)) * qA[i];\r\n            b = (Math.sin(t * theta) / Math.sin(theta)) * qB[i];\r\n            qR[i] = a + b;\r\n        }\r\n        return qR;\r\n    },\r\n\r\n    /**\r\n     * Creates bezier curve path for animation.\r\n     * @param  {Number} t - Fraction which represents the animation (between 0 to 1)\r\n     * @param  {Number[]} points - knot and control points\r\n     * @param  {Number[]} vR - Resulting points\r\n     * @return {Number[]} vR\r\n     * @memberOf module:enyo/AnimationSupport/Tween\r\n     */\r\n    bezier: function(t, points, vR) {\r\n        if (!points) return;\r\n        if (!vR) vR = [];\r\n\r\n        var i, j,\r\n            c = points.length,\r\n            l = points[0].length,\r\n            lastIndex = (c - 1),\r\n            startPoint = points[0],\r\n            endPoint = points[lastIndex],\r\n            values = this.getBezierValues(t, lastIndex);\r\n\r\n        for (i = 0; i < l; i++) {\r\n            vR[i] = 0;\r\n            for (j = 0; j < c; j++) {\r\n                if ((j > 0) && (j < (c - 1))) {\r\n                    vR[i] = vR[i] + ((startPoint[i] + (points[j][i] * (endPoint[i] - startPoint[i]))) * values[j]);\r\n                } else {\r\n                    vR[i] = vR[i] + (points[j][i] * values[j]);\r\n                }\r\n            }\r\n        }\r\n        return vR;\r\n    },\r\n\r\n    /**\r\n     * Returns the control points for bezier curve.\r\n     * @param  {Object} easeObj- The easing object with values.\r\n     * @param  {Number[]} startPoint - Starting point of the curve\r\n     * @param  {Number[]} endPoint - End point of the curve\r\n     * @param  {Number[]} points - control points\r\n     * @return {Number[]} points\r\n     * @memberOf module:enyo/AnimationSupport/Tween\r\n     */\r\n    bezierPoints: function(easeObj, startPoint, endPoint, points) {\r\n        if (!easeObj) return;\r\n        var order = (easeObj && Object.keys(easeObj).length) ? (Object.keys(easeObj).length + 1) : 0;\r\n        var bValues = [],\r\n            m1 = [],\r\n            m2 = [],\r\n            m3 = [],\r\n            m4 = [],\r\n            l = 0;\r\n        points = [startPoint];\r\n\r\n        var t, a;\r\n        for (var key in easeObj) {\r\n            t = parseFloat(key) / 100;\r\n            a = parseFloat(easeObj[key]) / 100;\r\n            bValues = this.getBezierValues(t, order);\r\n            bValues.shift();\r\n            m1.push(a - bValues.pop());\r\n            m2.push(bValues);\r\n        }\r\n\r\n        m3 = transform.Matrix.inverseN(m2, bValues.length);\r\n        m4 = transform.Matrix.multiplyN(m3, m1);\r\n        l = m4.length;\r\n        for (var i = 0; i < l; i++) {\r\n            var pValues = [];\r\n            for (var j = 0; j < endPoint.length; j++) {\r\n                pValues.push(m4[i]);\r\n            }\r\n            points.push(pValues);\r\n        }\r\n\r\n        points.push(endPoint);\r\n        return points;\r\n    },\r\n\r\n    /**\r\n     * Traverses the path of the animation\r\n     * @param  {Number} t - Fraction which represents the animation (between 0 to 1)\r\n     * @param  {Number[]} path - Array of  points\r\n     * @param  {Number[]} vR Resulatant Array\r\n     * @return {Number[]} vR\r\n     * @memberOf module:enyo/AnimationSupport/Tween\r\n     */\r\n    traversePath: function(t, path, vR) {\r\n        if (!path) return;\r\n        if (!vR) vR = [];\r\n\r\n        var i, j,\r\n            c = path.length,\r\n            l = path[0].length,\r\n            lastIndex = (c - 1),\r\n            values = this.getBezierValues(t, lastIndex);\r\n\r\n        for (i = 0; i < l; i++) {\r\n            vR[i] = 0;\r\n            for (j = 0; j < c; j++) {\r\n                vR[i] = vR[i] + (path[j][i] * values[j]);\r\n            }\r\n        }\r\n        return vR;\r\n    },\r\n\r\n    /**\r\n     * Returns the control points for bezier spline.\r\n     * @param  {Object} ease- The easing object with values.\r\n     * @param  {Number[]} startQuat - Quaternion origin\r\n     * @param  {Number[]} endQuat - Quaternion destination\r\n     * @param  {Number[]} endPoint - Final Destination point\r\n     * @param  {Number[]} splinePoints - spline control points\r\n     * @return {Number[]} splinePoints\r\n     * @memberOf module:enyo/AnimationSupport/Tween\r\n     */\r\n    bezierSPoints: function(ease, startQuat, endQuat, endPoint, splinePoints) {\r\n        if (!ease) return;\r\n        var time = [0],\r\n            quats = [startQuat];\r\n\r\n        var a, n, _a, aI, bN, eP, key, i, j,\r\n            eD = formatCSSValues(endPoint);\r\n\r\n        splinePoints = splinePoints || {};\r\n        if (Object.keys(ease).length > 0) {\r\n            for (key in ease) {\r\n                eP = utils.clone(eD);\r\n                a = parseFloat(ease[key]) / 100;\r\n                for (i in eP) {\r\n                    eP[i] *= a;\r\n                }\r\n                quats.push(transform.Quaternion.toQuant(eP));\r\n                time.push(parseFloat(key) / 100);\r\n            }\r\n            quats.push(endQuat);\r\n            time.push(1);\r\n            n = quats.length - 1;\r\n            aI = this.slerp(startQuat, endQuat, 0);\r\n            splinePoints[0] = [quats[0], aI, aI, quats[1]];\r\n            for (i = 0, j = 1; i < n; i++, j++) {\r\n                if (i === 0) {\r\n                    aI = this.slerp(quats[0], this.slerp(quats[2], quats[1], 2.0), 1.0 / 3);\r\n                } else {\r\n                    _a = this.slerp(this.slerp(quats[i - 1], quats[i], 2.0), quats[i + 1], 0.5);\r\n                    aI = this.slerp(quats[j], _a, 1.0 / 3);\r\n                }\r\n                if (j === n) {\r\n                    bN = this.slerp(quats[j], this.slerp(quats[j - 2], quats[j - 1], 2.0), 1.0 / 3);\r\n                } else {\r\n                    _a = this.slerp(this.slerp(quats[j - 1], quats[j], 2.0), quats[j + 1], 0.5);\r\n                    bN = this.slerp(quats[j], _a, -1.0 / 3);\r\n                }\r\n                splinePoints[time[j]] = [quats[i], aI, bN, quats[i + 1]];\r\n            }\r\n        }\r\n        return splinePoints;\r\n    },\r\n\r\n    /**\r\n     * Creates bezier spline path for animation.\r\n     * @param  {Number} t - Fraction which represents the animation (between 0 to 1)\r\n     * @param  {Number[]} points - knot and control points\r\n     * @param  {Number[]} vR - Resulting points\r\n     * @return {Number[]} vR\r\n     * @memberOf module:enyo/AnimationSupport/Tween\r\n     */\r\n    bezierSpline: function(t, points, vR) {\r\n        if (!points) return;\r\n        if (!vR) vR = [];\r\n        var Q0, Q1, Q2, R0, R1,\r\n            p, key, pts;\r\n        for (p in points) {\r\n            if (p >= t) {\r\n                key = p;\r\n                break;\r\n            }\r\n        }\r\n        pts = points[key];\r\n\r\n        if (pts.length >= 4) {\r\n            Q0 = this.slerp(pts[0], pts[1], t);\r\n            Q1 = this.slerp(pts[1], pts[2], t);\r\n            Q2 = this.slerp(pts[2], pts[3], t);\r\n            R0 = this.slerp(Q0, Q1, t);\r\n            R1 = this.slerp(Q1, Q2, t);\r\n            vR = this.slerp(R0, R1, t);\r\n        } else\r\n            vR = this.slerp(pts[0], pts[1], t);\r\n        return vR;\r\n    },\r\n\r\n    /**\r\n     * This function returns the coefficents based on the order and the current position\r\n     * @private\r\n     * @param  {number} n - order\r\n     * @param  {number} k - current position\r\n     * @return {object}   - coefficients\r\n     */\r\n    getCoeff: function(n, k) {\r\n        n = parseInt(n, 10);\r\n        k = parseInt(k, 10);\r\n        // Credits\r\n        // https://math.stackexchange.com/questions/202554/how-do-i-compute-binomial-coefficients-efficiently#answer-927064\r\n        if (isNaN(n) || isNaN(k))\r\n            return void 0;\r\n        if ((n < 0) || (k < 0))\r\n            return void 0;\r\n        if (k > n)\r\n            return void 0;\r\n        if (k === 0)\r\n            return 1;\r\n        if (k === n)\r\n            return 1;\r\n        if (k > n / 2)\r\n            return this.getCoeff(n, n - k);\r\n\r\n        return n * this.getCoeff(n - 1, k - 1) / k;\r\n    },\r\n\r\n    /**\r\n     * Function to get the bezier coeffients based on the time and order\r\n     * @public\r\n     * @param  {number} t - time\r\n     * @param  {number} n - order\r\n     * @return {object}   - bezier coefficients\r\n     */\r\n    getBezierValues: function(t, n) {\r\n        t = parseFloat(t, 10),\r\n            n = parseInt(n, 10);\r\n\r\n        if (isNaN(t) || isNaN(n))\r\n            return void 0;\r\n        if ((t < 0) || (n < 0))\r\n            return void 0;\r\n        if (t > 1)\r\n            return void 0;\r\n\r\n        var c,\r\n            values = [],\r\n\r\n            x = (1 - t),\r\n            y = t;\r\n        //\r\n        // Binomial theorem to expand (x+y)^n\r\n        //\r\n        for (var k = 0; k <= n; k++) {\r\n            c = this.getCoeff(n, k) * Math.pow(x, (n - k)) * Math.pow(y, k);\r\n            values.push(c);\r\n        }\r\n\r\n        return values;\r\n    }\r\n};\r\n\r\n/**\r\n * Get DOM node animation properties.\r\n * @public\r\n * @param  {HTMLElement} node    DOM node\r\n * @param  {Object}      props   Properties to fetch from DOM.\r\n * @param  {Object}      initial Default properties to be applied.\r\n * @return {Object}              Object with various animation properties.\r\n */\r\nfunction getAnimatedProperty(node, props, initial) {\r\n    if (!node) return;\r\n\r\n    var eP = {},\r\n        sP = initial ? utils.mixin({}, initial) : {},\r\n        tP = {},\r\n        dP = {},\r\n        iP = {},\r\n        m, k, v, t,\r\n        s = initial ? undefined : dom.getComputedStyle(node);\r\n\r\n    for (k in props) {\r\n        v = sP[k];\r\n        if (!isTransform(k)) {\r\n            v = v || getStyleValue(s || dom.getComputedStyle(node), k);\r\n            iP[k] = v;\r\n            sP[k] = formatCSSValues(v, k);\r\n            eP[k] = formatCSSValues(props[k], k, sP[k] ? sP[k].length : sP[k]);\r\n        } else {\r\n            v = formatTransformValues(props[k], k);\r\n            if (k.match(/rotate/)) {\r\n                v = transform.Quaternion.toQuant(v);\r\n                tP.rotate = tP.rotate ? transform.Quaternion.multiplication(tP.rotate, v) : v;\r\n            } else {\r\n                t = k.replace(/[XYZ]$/, '');\r\n                tP[t] = tP[t] ? merge(tP[t], v) : v;\r\n            }\r\n            if (k.match(/[XYZ]$/)) {\r\n                t = k.replace(/[XYZ]$/, '');\r\n                props[t] = tP[t].join();\r\n                delete props[k];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (initial) {\r\n        dP.translate = initial.translate;\r\n        dP.rotate = initial.rotate.length < 4 ? transform.Quaternion.toQuant(initial.rotate) : initial.rotate;\r\n        dP.scale = initial.scale;\r\n        dP.skew = initial.skew;\r\n        dP.perspective = initial.perspective;\r\n    } else {\r\n        m = getStyleValue(s || dom.getComputedStyle(node), dom.getCssTransformProp());\r\n        m = formatTransformValues(m, 'matrix');\r\n        transform.Matrix.decompose(m, dP);\r\n        iP.transform = transform.Matrix.toString(m);\r\n    }\r\n\r\n    for (k in dP) {\r\n        sP[k] = dP[k];\r\n        eP[k] = tP[k] || dP[k];\r\n    }\r\n    return {\r\n        _startAnim: sP,\r\n        _endAnim: eP,\r\n        _transform: dP,\r\n        currentState: dP,\r\n        initialState: iP,\r\n        matrix: m,\r\n        props: props\r\n    };\r\n}\r\n\r\nfunction merge (ar1, ar2) {\r\n    ar1.map(function(num, id) {\r\n        return num + ar2[id];\r\n    });\r\n    return ar1;\r\n}\r\n\r\n\r\n/**\r\n * Converts comma separated values to array.\r\n * @public\r\n * @param  {String} val Value of required animation in any property.\r\n * @param  {Number} length [description]\r\n * @param  {[type]} prop [description]\r\n * @return {Number[]}     Create array from val.\r\n */\r\nfunction formatCSSValues(val, prop, length) {\r\n    var res;\r\n    if (typeof val === 'function') {\r\n        return val;\r\n    }\r\n    if (prop === 'duration' || prop === 'delay') {\r\n        val = 0;\r\n    }\r\n    if (SHADOW[prop] || COLOR[prop]) {\r\n        if (val === 'none') {\r\n            val = Array(7).fill(0);\r\n        } else if (val.indexOf('rgb') === 0) {\r\n            val = val.split(')')[0].replace(/^\\w*\\(/, '').concat(val.split(')')[1].split(' ').join());\r\n        } else {\r\n            val = val.split('rgb(')[1].replace(')',',').concat(val.split('rgb(')[0]).replace(/, $/,'');\r\n        }\r\n    }\r\n    res = stringToMatrix(val);\r\n    return length ? res.concat(Array(length - res.length).fill(0)): res;\r\n}\r\n\r\nfunction formatTransformValues(val, prop) {\r\n    var res;\r\n    switch (prop) {\r\n        case 'translateX':\r\n        case 'rotateX':\r\n        case 'skewX':\r\n            res = [parseFloat(val, 10), 0, 0];\r\n            break;\r\n        case 'translateY':\r\n        case 'rotateY':\r\n        case 'skewY':\r\n            res = [0, parseFloat(val, 10), 0];\r\n            break;\r\n        case 'translateZ':\r\n        case 'rotateZ':\r\n            res = [0, 0, parseFloat(val, 10)];\r\n            break;\r\n        case 'scaleX':\r\n            res = [parseFloat(val, 10), 1, 1];\r\n            break;\r\n        case 'scaleY':\r\n            res = [1, parseFloat(val, 10), 1];\r\n            break;\r\n        case 'scaleZ':\r\n            res = [1, 1, parseFloat(val, 10)];\r\n            break;\r\n        case 'matrix':\r\n            res = transform.Matrix.identity();\r\n            val = stringToMatrix(val.replace(/^\\w*\\(/, '').replace(')', ''));\r\n            if (val.length <= 6) {\r\n                res[0] = val[0];\r\n                res[1] = val[1];\r\n                res[4] = val[2];\r\n                res[5] = val[3];\r\n                res[12] = val[4];\r\n                res[13] = val[5];\r\n            }\r\n            if (val.length == 16) {\r\n                res = val;\r\n            }\r\n            break;\r\n        default:\r\n            res = stringToMatrix(val);\r\n    }\r\n    return res;\r\n}\r\n\r\n/**\r\n * Validates if property is a transform property.\r\n * @public\r\n * @param  {String} transform Any transform property, for which we want to identify whether or not the property is transform.\r\n * @return {Number}           Value of the required transform property.\r\n */\r\nfunction isTransform(transform) {\r\n    return TRANSFORM[transform];\r\n}\r\n\r\nfunction stringToMatrix(val) {\r\n    if (!val || val === \"auto\" || val === 'none') {\r\n        return 0;\r\n    }\r\n    return val.toString().split(\",\").map(function(v) {\r\n        return parseFloat(v, 10);\r\n    });\r\n}\r\n\r\nfunction toPropertyValue(prop, val, ret) {\r\n    if (!val) return;\r\n    ret = ret || {};\r\n    if (COLOR[prop]) {\r\n        val = val.map(function(v) {\r\n            return parseInt(v, 10);\r\n        });\r\n        val = 'rgb(' + val + ')';\r\n    } else if (INT_UNIT[prop]) {\r\n        val = parseInt(val[0], 10);\r\n    } else if (BORDER[prop]) {\r\n        val = val[0] + '%';\r\n    } else if (OPACITY[prop]) {\r\n        val = val[0].toFixed(6);\r\n        val = (val <= 0) ? '0.000001' : val;\r\n    } else if (SHADOW[prop]) {\r\n        val = 'rgb(' + val.slice(0, 3).map(function(v) {\r\n            return parseInt(v, 10);\r\n        }) + ') ' + val.slice(3).map(function(v) {\r\n            return v + 'px';\r\n        }).join(' ');\r\n    } else {\r\n        val = val[0] + 'px';\r\n    }\r\n\r\n    ret[prop] = val;\r\n    return ret;\r\n}\r\n\r\n\r\n/**\r\n* @private\r\n*/\r\nfunction toTransformValue (matrix, ret) {\r\n    var mat = transform.Matrix.toString(matrix),\r\n        key = dom.getStyleTransformProp();\r\n\r\n    ret = ret || {};\r\n    ret[key] = mat;\r\n    return ret;\r\n}\r\n\r\n\r\n/**\r\n * Gets a style property applied from the DOM element.\r\n * @public\r\n * @param  {HTMLElement}  style Computed style of a DOM.\r\n * @param  {String}       key   Property name for which style has to be fetched.\r\n * @return {Number|HTMLElement} \r\n */\r\nfunction getStyleValue(style, key) {\r\n    return style.getPropertyValue(key) || style[key];\r\n}\r\n\r\nvar\r\n    BORDER = {\r\n        'border-radius': 1,\r\n        'border-image-slice': 1,\r\n        'border-top-left-radius': 1,\r\n        'border-top-right-radius': 1,\r\n        'border-bottom-left-radius': 1,\r\n        'border-bottom-right-radius': 1\r\n    },\r\n    COLOR = {\r\n        'color': 1,\r\n        'fill': 1,\r\n        'stop-color': 1,\r\n        'flood-color': 1,\r\n        'border-color': 1,\r\n        'outline-color': 1,\r\n        'lighting-color': 1,\r\n        'border-top-color': 1,\r\n        'background-color': 1,\r\n        'border-left-color': 1,\r\n        'border-right-color': 1,\r\n        'border-bottom-color': 1\r\n    },\r\n    INT_UNIT = {\r\n        'z-index': 1\r\n    },\r\n    SHADOW = {\r\n        'box-shadow': 1,\r\n        'text-shadow': 1\r\n    },\r\n    OPACITY = {\r\n        'opacity': 1,\r\n        'flood-opacity': 1,\r\n        'stop-opacity': 1,\r\n        'fill-opacity': 1,\r\n        'stroke-opacity': 1\r\n    },\r\n    TRANSFORM = {\r\n        translate: 1,\r\n        translateX: 1,\r\n        translateY: 1,\r\n        translateZ: 1,\r\n        rotate: 1,\r\n        rotateX: 1,\r\n        rotateY: 1,\r\n        rotateZ: 1,\r\n        skew: 1,\r\n        skewX: 1,\r\n        skewY: 1,\r\n        scale: 1,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        perspective: 1\r\n    };","require('enyo');\r\n\r\nvar\r\n\tDom = require('./dom');\r\n\r\nvar _baseScreenType = 'standard',\r\n\t_riRatio,\r\n\t_screenType,\r\n\t_screenTypes = [ {name: 'standard', pxPerRem: 16, width: global.innerWidth,  height: global.innerHeight, aspectRatioName: 'standard'} ],\t// Assign one sane value in case defineScreenTypes is never run.\r\n\t_screenTypeObject,\r\n\t_oldScreenType;\r\n\r\nvar getScreenTypeObject = function (type) {\r\n\ttype = type || _screenType;\r\n\tif (_screenTypeObject && _screenTypeObject.name == type) {\r\n\t\treturn _screenTypeObject;\r\n\t}\r\n\treturn _screenTypes.filter(function (elem) {\r\n\t\treturn (type == elem.name);\r\n\t})[0];\r\n};\r\n\r\n/**\r\n* Resolution independence methods\r\n* @module enyo/resolution\r\n*/\r\nvar ri = module.exports = {\r\n\t/**\r\n\t* Sets up screen resolution scaling capabilities by defining an array of all the screens\r\n\t* being used. These should be listed in order from smallest to largest, according to\r\n\t* width.\r\n\t*\r\n\t* The `name`, `pxPerRem`, `width`, and `aspectRatioName` properties are required for\r\n\t* each screen type in the array. Setting `base: true` on a screen type marks it as the\r\n\t* default resolution, upon which everything else will be based.\r\n\t*\r\n\t* Executing this method also initializes the rest of the resolution-independence code.\r\n\t*\r\n\t* ```\r\n\t* var resolution = require('enyo/resolution');\r\n\t*\r\n\t* resolution.defineScreenTypes([\r\n\t* \t{name: 'vga',     pxPerRem: 8,  width: 640,  height: 480,  aspectRatioName: 'standard'},\r\n\t* \t{name: 'xga',     pxPerRem: 16, width: 1024, height: 768,  aspectRatioName: 'standard'},\r\n\t* \t{name: 'hd',      pxPerRem: 16, width: 1280, height: 720,  aspectRatioName: 'hdtv'},\r\n\t* \t{name: 'fhd',     pxPerRem: 24, width: 1920, height: 1080, aspectRatioName: 'hdtv', base: true},\r\n\t* \t{name: 'uw-uxga', pxPerRem: 24, width: 2560, height: 1080, aspectRatioName: 'cinema'},\r\n\t* \t{name: 'uhd',     pxPerRem: 48, width: 3840, height: 2160, aspectRatioName: 'hdtv'}\r\n\t* ]);\r\n\t* ```\r\n\t*\r\n\t* @param {Array} types - An array of objects containing screen configuration data, as in the\r\n\t* preceding example.\r\n\t* @public\r\n\t*/\r\n\tdefineScreenTypes: function (types) {\r\n\t\t_screenTypes = types;\r\n\t\tfor (var i = 0; i < _screenTypes.length; i++) {\r\n\t\t\tif (_screenTypes[i]['base']) _baseScreenType = _screenTypes[i].name;\r\n\t\t}\r\n\t\tri.init();\r\n\t},\r\n\r\n\t/**\r\n\t* Fetches the name of the screen type that best matches the current screen size. The best\r\n\t* match is defined as the screen type that is the closest to the screen resolution without\r\n\t* going over. (\"The Price is Right\" style.)\r\n\t*\r\n\t* @param {Object} [rez] - Optional measurement scheme. Must include `height` and `width` properties.\r\n\t* @returns {String} Screen type (e.g., `'fhd'`, `'uhd'`, etc.)\r\n\t* @public\r\n\t*/\r\n\tgetScreenType: function (rez) {\r\n\t\trez = rez || {\r\n\t\t\theight: global.innerHeight,\r\n\t\t\twidth: global.innerWidth\r\n\t\t};\r\n\t\tvar i,\r\n\t\t\ttypes = _screenTypes,\r\n\t\t\tbestMatch = types[types.length - 1].name;\r\n\r\n\t\t// loop thorugh resolutions\r\n\t\tfor (i = types.length - 1; i >= 0; i--) {\r\n\t\t\t// find the one that matches our current size or is smaller. default to the first.\r\n\t\t\tif (rez.width <= types[i].width) {\r\n\t\t\t\tbestMatch = types[i].name;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// return the name of the resolution if we find one.\r\n\t\treturn bestMatch;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tupdateScreenBodyClasses: function (type) {\r\n\t\ttype = type || _screenType;\r\n\t\tif (_oldScreenType) {\r\n\t\t\tDom.removeClass(document.body, 'enyo-res-' + _oldScreenType.toLowerCase());\r\n\t\t\tvar oldScrObj = getScreenTypeObject(_oldScreenType);\r\n\t\t\tif (oldScrObj && oldScrObj.aspectRatioName) {\r\n\t\t\t\tDom.removeClass(document.body, 'enyo-aspect-ratio-' + oldScrObj.aspectRatioName.toLowerCase());\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (type) {\r\n\t\t\tDom.addBodyClass('enyo-res-' + type.toLowerCase());\r\n\t\t\tvar scrObj = getScreenTypeObject(type);\r\n\t\t\tif (scrObj.aspectRatioName) {\r\n\t\t\t\tDom.addBodyClass('enyo-aspect-ratio-' + scrObj.aspectRatioName.toLowerCase());\r\n\t\t\t}\r\n\t\t\treturn type;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetRiRatio: function (type) {\r\n\t\ttype = type || _screenType;\r\n\t\tif (type) {\r\n\t\t\tvar ratio = this.getUnitToPixelFactors(type) / this.getUnitToPixelFactors(_baseScreenType);\r\n\t\t\tif (type == _screenType) {\r\n\t\t\t\t// cache this if it's for our current screen type.\r\n\t\t\t\t_riRatio = ratio;\r\n\t\t\t}\r\n\t\t\treturn ratio;\r\n\t\t}\r\n\t\treturn 1;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetUnitToPixelFactors: function (type) {\r\n\t\ttype = type || _screenType;\r\n\t\tif (type) {\r\n\t\t\treturn getScreenTypeObject(type).pxPerRem;\r\n\t\t}\r\n\t\treturn 1;\r\n\t},\r\n\r\n\t/**\r\n\t* Calculates the aspect ratio of the specified screen type. If no screen type is provided,\r\n\t* the current screen type is used.\r\n\t*\r\n\t* @param {String} type - Screen type whose aspect ratio will be calculated. If no screen\r\n\t* type is provided, the current screen type is used.\r\n\t* @returns {Number} The calculated screen ratio (e.g., `1.333`, `1.777`, `2.333`, etc.)\r\n\t* @public\r\n\t*/\r\n\tgetAspectRatio: function (type) {\r\n\t\tvar scrObj = getScreenTypeObject(type);\r\n\t\tif (scrObj.width && scrObj.height) {\r\n\t\t\treturn (scrObj.width / scrObj.height);\r\n\t\t}\r\n\t\treturn 1;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the name of the aspect ratio for a specified screen type, or for the default\r\n\t* screen type if none is provided.\r\n\t*\r\n\t* @param {String} type - Screen type whose aspect ratio name will be returned. If no\r\n\t* screen type is provided, the current screen type will be used.\r\n\t* @returns {String} The name of the screen type's aspect ratio\r\n\t* @public\r\n\t*/\r\n\tgetAspectRatioName: function (type) {\r\n\t\tvar scrObj = getScreenTypeObject(type);\r\n\t\t return scrObj.aspectRatioName || 'standard';\r\n\t},\r\n\r\n\t/**\r\n\t* Takes a provided pixel value and performs a scaling operation based on the current\r\n\t* screen type.\r\n\t*\r\n\t* @param {Number} px - The quantity of standard-resolution pixels to scale to the\r\n\t* current screen resolution.\r\n\t* @returns {Number} The scaled value based on the current screen scaling factor\r\n\t* @public\r\n\t*/\r\n\tscale: function (px) {\r\n\t\treturn (_riRatio || this.getRiRatio()) * px;\r\n\t},\r\n\r\n\t/**\r\n\t* The default configurable [options]{@link module:enyo/resolution.selectSrc#options}.\r\n\t*\r\n\t* @typedef {Object} module:enyo/resolution.selectSrcSrc\r\n\t* @property {String} hd - HD / 720p Resolution image asset source URI/URL\r\n\t* @property {String} fhd - FHD / 1080p Resolution image asset source URI/URL\r\n\t* @property {String} uhd - UHD / 4K Resolution image asset source URI/URL\r\n\t*/\r\n\r\n\t/**\r\n\t* Selects the ideal image asset from a set of assets, based on various screen\r\n\t* resolutions: HD (720p), FHD (1080p), UHD (4k). When a `src` argument is\r\n\t* provided, `selectSrc()` will choose the best image with respect to the current\r\n\t* screen resolution. `src` may be either the traditional string, which will pass\r\n\t* straight through, or a hash/object of screen types and their asset sources\r\n\t* (keys:screen and values:src). The image sources will be used when the screen\r\n\t* resolution is less than or equal to the provided screen types.\r\n\t*\r\n\t* ```\r\n\t* // Take advantage of the multi-res mode\r\n\t* var\r\n\t* \tkind = require('enyo/kind'),\r\n\t* \tImage = require('enyo/Image');\r\n\t*\r\n\t* {kind: Image, src: {\r\n\t* \t'hd': 'http://lorempixel.com/64/64/city/1/',\r\n\t* \t'fhd': 'http://lorempixel.com/128/128/city/1/',\r\n\t* \t'uhd': 'http://lorempixel.com/256/256/city/1/'\r\n\t* }, alt: 'Multi-res'},\r\n\t*\r\n\t* // Standard string `src`\r\n\t* {kind: Image, src: http://lorempixel.com/128/128/city/1/', alt: 'Large'},\r\n\t* ```\r\n\t*\r\n\t* @param {(String|module:enyo/resolution~selectSrcSrc)} src - A string containing\r\n\t* a single image source or a key/value hash/object containing keys representing screen\r\n\t* types (`'hd'`, `'fhd'`, `'uhd'`, etc.) and values containing the asset source for\r\n\t* that target screen resolution.\r\n\t* @returns {String} The chosen source, given the string or hash provided\r\n\t* @public\r\n\t*/\r\n\tselectSrc: function (src) {\r\n\t\tif (typeof src != 'string' && src) {\r\n\t\t\tvar i, t,\r\n\t\t\t\tnewSrc = src.fhd || src.uhd || src.hd,\r\n\t\t\t\ttypes = _screenTypes;\r\n\r\n\t\t\t// loop through resolutions\r\n\t\t\tfor (i = types.length - 1; i >= 0; i--) {\r\n\t\t\t\tt = types[i].name;\r\n\t\t\t\tif (_screenType == t && src[t]) newSrc = src[t];\r\n\t\t\t}\r\n\r\n\t\t\tsrc = newSrc;\r\n\t\t}\r\n\t\treturn src;\r\n\t},\r\n\r\n\t/**\r\n\t* This will need to be re-run any time the screen size changes, so all the values can be\r\n\t* re-cached.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\t// Later we can wire this up to a screen resize event so it doesn't need to be called manually.\r\n\tinit: function () {\r\n\t\t_oldScreenType = _screenType;\r\n\t\t_screenType = this.getScreenType();\r\n\t\t_screenTypeObject = getScreenTypeObject();\r\n\t\tthis.updateScreenBodyClasses();\r\n\t\tDom.unitToPixelFactors.rem = this.getUnitToPixelFactors();\r\n\t\t_riRatio = this.getRiRatio();\r\n\t}\r\n};\r\n\r\nri.init();\r\n","var\r\n\tdom = require('../dom'),\r\n\tplatform = require('../platform'),\r\n\tutils = require('../utils');\r\n\r\n/**\r\n* Used internally by {@link module:enyo/gesture}\r\n*\r\n* @module enyo/gesture/util\r\n* @private\r\n*/\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\teventProps: ['target', 'relatedTarget', 'clientX', 'clientY', 'pageX', 'pageY',\r\n\t\t'screenX', 'screenY', 'altKey', 'ctrlKey', 'metaKey', 'shiftKey',\r\n\t\t'detail', 'identifier', 'dispatchTarget', 'which', 'srcEvent'],\r\n\r\n\t/**\r\n\t* Creates an {@glossary event} of type `type` and returns it.\r\n\t* `evt` should be an event [object]{@glossary Object}.\r\n\t*\r\n\t* @param {String} type - The type of {@glossary event} to make.\r\n\t* @param {(Event|Object)} evt - The event you'd like to clone or an object that looks like it.\r\n\t* @returns {Object} The new event [object]{@glossary Object}.\r\n\t* @public\r\n\t*/\r\n\tmakeEvent: function(type, evt) {\r\n\t\tvar e = {};\r\n\t\te.type = type;\r\n\t\tfor (var i=0, p; (p=this.eventProps[i]); i++) {\r\n\t\t\te[p] = evt[p];\r\n\t\t}\r\n\t\te.srcEvent = e.srcEvent || evt;\r\n\t\te.preventDefault = this.preventDefault;\r\n\t\te.disablePrevention = this.disablePrevention;\r\n\r\n\t\tif (dom._bodyScaleFactorX !== 1 || dom._bodyScaleFactorY !== 1) {\r\n\t\t\t// Intercept only these events, not all events, like: hold, release, tap, etc,\r\n\t\t\t// to avoid doing the operation again.\r\n\t\t\tif (e.type == 'move' || e.type == 'up' || e.type == 'down' || e.type == 'enter' || e.type == 'leave') {\r\n\t\t\t\te.clientX *= dom._bodyScaleFactorX;\r\n\t\t\t\te.clientY *= dom._bodyScaleFactorY;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//\r\n\t\t// normalize event.which and event.pageX/event.pageY\r\n\t\t// Note that while 'which' works in IE9, it is broken for mousemove. Therefore,\r\n\t\t// in IE, use global.event.button\r\n\t\tif (platform.ie < 10) {\r\n\t\t\tvar b = global.event && global.event.button;\r\n\t\t\tif (b) {\r\n\t\t\t\t// multi-button not supported, priority: left, right, middle\r\n\t\t\t\t// (note: IE bitmask is 1=left, 2=right, 4=center);\r\n\t\t\t\te.which = b & 1 ? 1 : (b & 2 ? 2 : (b & 4 ? 3 : 0));\r\n\t\t\t}\r\n\t\t} else if (platform.webos || global.PalmSystem) {\r\n\t\t\t// Temporary fix for owos: it does not currently supply 'which' on move events\r\n\t\t\t// and the user agent string doesn't identify itself so we test for PalmSystem\r\n\t\t\tif (e.which === 0) {\r\n\t\t\t\te.which = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn e;\r\n\t},\r\n\r\n\t/**\r\n\t* Installed on [events]{@glossary event} and called in event context.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tpreventDefault: function() {\r\n\t\tif (this.srcEvent) {\r\n\t\t\tthis.srcEvent.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdisablePrevention: function() {\r\n\t\tthis.preventDefault = utils.nop;\r\n\t\tif (this.srcEvent) {\r\n\t\t\tthis.srcEvent.preventDefault = utils.nop;\r\n\t\t}\r\n\t}\r\n};\r\n","require('enyo');\r\n\r\nvar\r\n\tutils = require('./utils'),\r\n\tlogger = require('./logger');\r\nvar\r\n\tDom = require('./dom');\r\n\r\n/**\r\n* This is a {@glossary delegate} (strategy) used by {@link module:enyo/DataList~DataList}\r\n* for vertically-oriented lists. This is used by all lists for this strategy; it\r\n* does not get copied, but is called directly from the list.\r\n*\r\n* @module enyo/VerticalDelegate\r\n* @private\r\n*/\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t* Used to determine the minimum size of the page. The page size will be at least this\r\n\t* number of times greater than the viewport size.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 2\r\n\t* @public\r\n\t*/\r\n\tpageSizeMultiplier: 2,\r\n\r\n\t/**\r\n\t* Sets the priority properties for this orientation, which can then be customized by\r\n\t* other [delegates]{@glossary delegate} that wish to share basic functionality.\r\n\t*\r\n\t* @method\r\n\t* @param {module:enyo/DataList~DataList} list - The [list]{@link module:enyo/DataList~DataList} to perform this action on.\r\n\t* @private\r\n\t*/\r\n\tinitList: function (list) {\r\n\t\tlist.posProp   = 'top';\r\n\t\tlist.upperProp = 'top';\r\n\t\tlist.lowerProp = 'bottom';\r\n\t\tlist.psizeProp = 'height';\r\n\t\tlist.ssizeProp = 'width';\r\n\t\t// set the scroller options\r\n\t\tvar so         = list.scrollerOptions? (list.scrollerOptions = utils.clone(list.scrollerOptions)): (list.scrollerOptions = {});\r\n\t\t// this is a datalist...it has to be scroll or auto for vertical\r\n\t\tso.vertical    = so.vertical == 'scroll'? 'scroll': 'auto';\r\n\t\tso.horizontal  = so.horizontal || 'hidden';\r\n\t\t// determine if the _controlsPerPage_ property has been set on the list\r\n\t\tif (list.controlsPerPage !== null && !isNaN(list.controlsPerPage)) {\r\n\t\t\tlist._staticControlsPerPage = true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tgenerate: function (list) {\r\n\t\tfor (var i=0, p; (p=list.pages[i]); ++i) {\r\n\t\t\tthis.generatePage(list, p, p.index);\r\n\t\t}\r\n\t\tthis.adjustPagePositions(list);\r\n\t\tthis.adjustBuffer(list);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t* Performs a hard reset of the [list's]{@link module:enyo/DataList~DataList} pages and children.\r\n\t* Scrolls to the top and resets each page's children to have the correct indices.\r\n\t*\r\n\t* @method\r\n\t* @param {module:enyo/DataList~DataList} list - The [list]{@link module:enyo/DataList~DataList} to perform this action on.\r\n\t* @private\r\n\t*/\r\n\treset: function (list) {\r\n\t\tlist.$.page1.index = 0;\r\n\t\tlist.$.page2.index = 1;\r\n\t\tthis.generate(list);\r\n\t\tlist.hasReset = true;\r\n\t\t// reset the scroller so it will also start from the 'top' whatever that may\r\n\t\t// be (left/top)\r\n\t\tthis.scrollTo(list, 0, 0);\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves [list]{@link module:enyo/DataList~DataList} pages, indexed by their position.\r\n\t*\r\n\t* @param {module:enyo/DataList~DataList} list - The [list]{@link module:enyo/DataList~DataList} to perform this action on.\r\n\t* @returns {Object} Returns a [hash]{@glossary Object} of the pages marked by their\r\n\t*\tposition as either 'firstPage' or 'lastPage'.\r\n\t* @private\r\n\t*/\r\n\tpagesByPosition: function (list) {\r\n\t\tvar metrics     = list.metrics.pages,\r\n\t\t\tpos         = list.pagePositions || (list.pagePositions={}),\r\n\t\t\tupperProp   = list.upperProp,\r\n\t\t\tfirstIndex  = list.$.page1.index || 0,\r\n\t\t\tsecondIndex = (list.$.page2.index || list.$.page2.index === 0) ? list.$.page2.index : 1;\r\n\t\tpos.firstPage   = (\r\n\t\t\tmetrics[firstIndex] && metrics[secondIndex] &&\r\n\t\t\t(metrics[secondIndex][upperProp] < metrics[firstIndex][upperProp])\r\n\t\t\t? list.$.page2\r\n\t\t\t: list.$.page1\r\n\t\t);\r\n\t\tpos.lastPage = (pos.firstPage === list.$.page1? list.$.page2: list.$.page1);\r\n\t\treturn pos;\r\n\t},\r\n\r\n\t/**\r\n\t* Refreshes each page in the given [list]{@link module:enyo/DataList~DataList}, adjusting its position\r\n\t* and adjusting the buffer accordingly.\r\n\t*\r\n\t* @method\r\n\t* @param {module:enyo/DataList~DataList} list - The [list]{@link module:enyo/DataList~DataList} to perform this action on.\r\n\t* @private\r\n\t*/\r\n\trefresh: function (list) {\r\n\t\tif (!list.hasReset) { return this.reset(list); }\r\n\t\tthis.assignPageIndices(list);\r\n\t\tthis.generate(list);\r\n\t},\r\n\r\n\t/**\r\n\t* Once the [list]{@link module:enyo/DataList~DataList} is initially rendered, it will generate its\r\n\t* [scroller]{@link module:enyo/Scroller~Scroller} (so we know that is available). Now we need to\r\n\t* cache our initial size values and apply them to our pages individually.\r\n\t*\r\n\t* @method\r\n\t* @param {module:enyo/DataList~DataList} list - The [list]{@link module:enyo/DataList~DataList} to perform this action on.\r\n\t* @private\r\n\t*/\r\n\trendered: function (list) {\r\n\t\tif (list.$.scroller.addScrollListener) {\r\n\t\t\tlist.usingScrollListener = true;\r\n\t\t\tlist.$.scroller.addScrollListener(\r\n\t\t\t\tutils.bindSafely(this, 'scrollHandler', list)\r\n\t\t\t);\r\n\t\t}\r\n\t\t// get our initial sizing cached now since we should actually have\r\n\t\t// bounds at this point\r\n\t\tthis.updateBounds(list);\r\n\t\t// calc offset of pages to scroller client\r\n\t\tthis.calcScrollOffset(list);\r\n\t\t// now if we already have a length then that implies we have a controller\r\n\t\t// and that we have data to render at this point, otherwise we don't\r\n\t\t// want to do any more initialization\r\n\t\tif (list.collection && list.collection.length) { this.reset(list); }\r\n\t},\r\n\t/**\r\n\t* Generates the markup for the page content.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tgeneratePage: function (list, page, index) {\r\n\t\t// Temporarily add logging code to make it easier for\r\n\t\t// QA and others to detect and report page-index issues\r\n\t\tif (index < 0) {\r\n\t\t\tlogger.warn('Invalid page index: ' + index);\r\n\t\t}\r\n\t\t// in case it hasn't been set we ensure it is marked correctly\r\n\t\tpage.index  = index;\r\n\t\t\t// the collection of data with records to use\r\n\t\tvar data    = list.collection,\r\n\t\t\t// the metrics for the entire list\r\n\t\t\tmetrics = list.metrics,\r\n\t\t\t// controls per page\r\n\t\t\tperPage = this.controlsPerPage(list),\r\n\t\t\t// placeholder for the control we're going to update\r\n\t\t\tview;\r\n\r\n\t\t// the first index for this generated page\r\n\t\tpage.start  = perPage * index;\r\n\t\t// the last index for this generated page\r\n\t\tpage.end    = Math.min((data.length - 1), (page.start + perPage) - 1);\r\n\r\n\t\t// if generating a control we need to use the correct page as the control parent\r\n\t\tlist.controlParent = page;\r\n\t\tfor (var i=page.start; i <= page.end && i < data.length; ++i) {\r\n\t\t\tview = (page.children[i - page.start] || list.createComponent({}));\r\n\t\t\t// disable notifications until all properties to be updated\r\n\t\t\t// have been\r\n\t\t\tview.teardownRender();\r\n\t\t\tview.stopNotifications();\r\n\t\t\tview.set('model', data.at(i));\r\n\t\t\tview.set('index', i);\r\n\t\t\tthis.checkSelected(list, view);\r\n\t\t\tview.set('selected', list.isSelected(view.model));\r\n\t\t\tview.startNotifications();\r\n\t\t\tview.canGenerate = true;\r\n\t\t}\r\n\t\t// if there are any controls that need to be hidden we do that now\r\n\t\tfor (i=(i-page.start); i < page.children.length; ++i) {\r\n\t\t\tview = page.children[i];\r\n\t\t\tview.teardownRender();\r\n\t\t\tview.canGenerate = false;\r\n\t\t\tview.set('model', null);\r\n\t\t}\r\n\t\t// update the entire page at once - this removes old nodes and updates\r\n\t\t// to the correct ones\r\n\t\tpage.render();\r\n\t\t// now to update the metrics\r\n\t\tmetrics        = metrics.pages[index] || (metrics.pages[index] = {});\r\n\t\tmetrics.height = this.pageHeight(list, page);\r\n\t\tmetrics.width  = this.pageWidth(list, page);\r\n\t\t// update the childSize value now that we have measurements\r\n\t\tthis.childSize(list);\r\n\t},\r\n\r\n\t/**\r\n\t* Checks whether the control should have selected set based on selectionProperty.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcheckSelected: function (list, view) {\r\n\t\tvar p = list.selectionProperty,\r\n\t\t\tm = view.model,\r\n\t\t\tshouldBeSelected;\r\n\t\tif (p) {\r\n\t\t\tshouldBeSelected = (typeof m.get === 'function') ? m.get(p) : m[p];\r\n\t\t\tif (shouldBeSelected && !list.isSelected(m)) {\r\n\t\t\t\tlist.select(view.index);\r\n\t\t\t\t// don't have to check opposite case (model is false and isSelected is true)\r\n\t\t\t\t// because that shouldn't happen\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Generates a child size for the given [list]{@link module:enyo/DataList~DataList}.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tchildSize: function (list) {\r\n\t\tif (!list.fixedChildSize) {\r\n\t\t\tvar pageIndex = list.$.page1.index,\r\n\t\t\t\tsizeProp  = list.psizeProp,\r\n\t\t\t\tn         = list.$.page1.node || list.$.page1.hasNode(),\r\n\t\t\t\tsize, props;\r\n\t\t\tif (pageIndex >= 0 && n) {\r\n\t\t\t\tprops = list.metrics.pages[pageIndex];\r\n\t\t\t\tsize  = props? props[sizeProp]: 0;\r\n\t\t\t\tlist.childSize = Math.floor(size / (n.children.length || 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn list.fixedChildSize || list.childSize || (list.childSize = 100); // we have to start somewhere\r\n\t},\r\n\r\n\t/**\r\n\t* Calculates the number of controls required to fill a page. This functionality is broken\r\n\t* out of [controlsPerPage]{@link module:enyo/VerticalDelegate#controlsPerPage} so that it\r\n\t* can be overridden by delegates that inherit from this one.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcalculateControlsPerPage: function (list) {\r\n\t\tvar fn              = this[list.psizeProp],\r\n\t\t\tmulti           = list.pageSizeMultiplier || this.pageSizeMultiplier,\r\n\t\t\tchildSize       = this.childSize(list);\r\n\r\n\t\t// using height/width of the available viewport times our multiplier value\r\n\t\treturn Math.ceil(((fn.call(this, list) * multi) / childSize) + 1);\r\n\t},\r\n\r\n\t/**\r\n\t* When necessary, updates the the value of `controlsPerPage` dynamically to ensure that\r\n\t* the page size is always larger than the viewport size. Note that once a\r\n\t* [control]{@link module:enyo/Control~Control} is instanced (if this number increases and then decreases),\r\n\t* the number of available controls will be used instead. This method updates the\r\n\t* [childSize]{@link module:enyo/DataList~DataList#childSize} and is used internally to calculate other\r\n\t* values, such as [defaultPageSize]{@link module:enyo/VerticalDelegate#defaultPageSize}.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcontrolsPerPage: function (list, forceUpdate) {\r\n\t\tif (list._staticControlsPerPage) {\r\n\t\t\treturn list.controlsPerPage;\r\n\t\t} else {\r\n\t\t\tvar updatedControls = list._updatedControlsPerPage,\r\n\t\t\t\tupdatedBounds   = list._updatedBounds,\r\n\t\t\t\tperPage         = list.controlsPerPage;\r\n\t\t\t// if we've never updated the value or it was done longer ago than the most\r\n\t\t\t// recent updated sizing/bounds we need to update\r\n\t\t\tif (forceUpdate || !updatedControls || (updatedControls < updatedBounds)) {\r\n\t\t\t\tperPage = list.controlsPerPage = this.calculateControlsPerPage(list);\r\n\t\t\t\t// update our time for future comparison\r\n\t\t\t\tlist._updatedControlsPerPage = utils.perfNow();\r\n\t\t\t}\r\n\t\t\treturn perPage;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the page index for the given record index.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tpageForIndex: function (list, i) {\r\n\t\tvar perPage = list.controlsPerPage || this.controlsPerPage(list);\r\n\t\treturn Math.floor(i / (perPage || 1));\r\n\t},\r\n\r\n\t/**\r\n\t* An indirect interface to the list's scroller's scrollToControl()\r\n\t* method. We provide this to create looser coupling between the\r\n\t* delegate and the list / scroller, and to enable subkinds of the\r\n\t* delegate to easily override scrollToControl() functionality to\r\n\t* include options specific to the scroller being used.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tscrollToControl: function (list, control) {\r\n\t\tlist.$.scroller.scrollToControl(control);\r\n\t},\r\n\r\n\t/**\r\n\t* An indirect interface to the list's scroller's scrollTo()\r\n\t* method. We provide this to create looser coupling between the\r\n\t* delegate and the list / scroller, and to enable subkinds of the\r\n\t* delegate to easily override scrollTo() functionality to\r\n\t* include options specific to the scroller being used.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tscrollTo: function (list, x, y) {\r\n\t\tlist.$.scroller.scrollTo(x, y);\r\n\t},\r\n\r\n\t/**\r\n\t* Attempts to scroll to the given index.\r\n\t*\r\n\t* @method\r\n\t* @param {module:enyo/DataList~DataList} list - The [list]{@link module:enyo/DataList~DataList} to perform this action on.\r\n\t* @param {Number} i - The index to scroll to.\r\n\t* @param {Function} callback - A function to be executed after the scroll operation is\r\n\t*   complete.\r\n\t* @private\r\n\t*/\r\n\tscrollToIndex: function (list, i, callback) {\r\n\t\t\t// first see if the child is already available to scroll to\r\n\t\tvar c = this.childForIndex(list, i),\r\n\t\t\t// but we also need the page so we can find its position\r\n\t\t\tp = this.pageForIndex(list, i);\r\n\t\t// if there is no page then the index is bad\r\n\t\tif (p < 0 || p > this.pageCount(list)) { return; }\r\n\t\t// if there isn't one, then we know we need to go ahead and\r\n\t\t// update, otherwise we should be able to use the scroller's\r\n\t\t// own methods to find it\r\n\t\tlist.$.scroller.stop();\r\n\t\tif (c) {\r\n\t\t\tthis.scrollToControl(list, c);\r\n\t\t\tif (typeof callback === 'function') {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// we do this to ensure we trigger the paging event when necessary\r\n\t\t\tthis.resetToPosition(list, this.pagePosition(list, p));\r\n\t\t\t// now retry the original logic until we have this right\r\n\t\t\tlist.startJob('vertical_delegate_scrollToIndex', function () {\r\n\t\t\t\tlist.scrollToIndex(i, callback);\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the calculated height for the given page.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tpageHeight: function (list, page) {\r\n\t\tvar h = page.node.offsetHeight;\r\n\t\tvar m = list.metrics.pages[page.index];\r\n\t\tvar len = list.collection? list.collection.length: 0;\r\n\t\tif (h === 0 && len && page.node.children.length) {\r\n\t\t\tlist.heightNeedsUpdate = true;\r\n\t\t\t// attempt to reuse the last known height for this page\r\n\t\t\th = m? m.height: 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the calculated width for the given page.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tpageWidth: function (list, page) {\r\n\t\tvar w = page.node.offsetWidth;\r\n\t\tvar m = list.metrics.pages[page.index];\r\n\t\tvar len = list.collection? list.collection.length: 0;\r\n\t\tif (w === 0 && len && page.node.children.length) {\r\n\t\t\tlist.widthNeedsUpdate = true;\r\n\t\t\t// attempt to reuse the last known width for this page\r\n\t\t\tw = m? m.width: 0;\r\n\t\t}\r\n\t\treturn w;\r\n\t},\r\n\r\n\t/**\r\n\t* Attempts to intelligently decide when to force updates for [models]{@link module:enyo/Model~Model}\r\n\t* being added, if the models are part of any visible pages. For now, an assumption is\r\n\t* made that records being added are ordered and sequential.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tmodelsAdded: function (list, props) {\r\n\t\tvar cpp, end, pages, firstModifiedPage;\r\n\r\n\t\t// if the list has not already reset, reset\r\n\t\tif (!list.hasReset) return this.reset(list);\r\n\r\n\t\tcpp = this.controlsPerPage(list);\r\n\t\tend = Math.max(list.$.page1.start, list.$.page2.start) + cpp - 1;\r\n\r\n\t\t// note that this will refresh the following scenarios\r\n\t\t// 1. if the dataset was spliced in above the current indices and the last index added was\r\n\t\t//    less than the first index rendered\r\n\t\t// 2. if the dataset was spliced in above the current indices and overlapped some of the\r\n\t\t//    current indices\r\n\t\t// 3. if the dataset was spliced in above the current indices and completely overlapped\r\n\t\t//    the current indices (pushing them all down)\r\n\t\t// 4. if the dataset was spliced inside the current indices (pushing some down)\r\n\t\t// 5. if the dataset was appended to the current dataset and was inside the indices that\r\n\t\t//    should be currently rendered (there was a partially filled page)\r\n\r\n\t\t// the only time we don't refresh is if the first index of the contiguous set of added\r\n\t\t// models is beyond our final rendered page (possible) indices\r\n\r\n\t\t// in the case where it does not need to refresh the existing controls except the last page\r\n\t\t// if the last page is not fully filled, it will be filled with added models\r\n\t\t// so we should generate the last page.\r\n\r\n\t\t// it will update its measurements and page positions within the buffer\r\n\t\t// so scrolling can continue properly\r\n\r\n\t\t// if we need to refresh, do it now and ensure that we're properly setup to scroll\r\n\t\t// if we were adding to a partially filled page\r\n\t\tif (props.index <= end ) {\r\n\t\t\tthis.refresh(list);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// The first page affected by the added models and all pages thereafter\r\n\t\t\t// need to have their metrics invalidated\r\n\t\t\tpages = list.metrics.pages;\r\n\t\t\tfirstModifiedPage = this.pageForIndex(list, props.index);\r\n\r\n\t\t\tfor (var page in pages) {\r\n\t\t\t\tif (page >= firstModifiedPage) {\r\n\t\t\t\t\tpages[page] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// we still need to ensure that the metrics are updated so it knows it can scroll\r\n\t\t\t// past the boundaries of the current pages (potentially)\r\n\t\t\tthis.adjustBuffer(list);\r\n\t\t\tthis.adjustPagePositions(list);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Attempts to find the [control]{@link module:enyo/Control~Control} for the requested index.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tchildForIndex: function (list, i) {\r\n\t\tvar p  = this.pageForIndex(list, i),\r\n\t\t\tp1 = list.$.page1,\r\n\t\t\tp2 = list.$.page2;\r\n\t\tp = (p==p1.index && p1) || (p==p2.index && p2);\r\n\t\tif (p) {\r\n\t\t\tfor (var j=0, c; (c=p.children[j]); ++j) {\r\n\t\t\t\tif (c.index == i) {\r\n\t\t\t\t\treturn c;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Attempts to intelligently decide when to force updates for [models]{@link module:enyo/Model~Model}\r\n\t* being removed, if the models are part of any visible pages.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tmodelsRemoved: function (list, props) {\r\n\r\n\t\t// if the list has not already reset, reset\r\n\t\tif (!list.hasReset) return this.reset(list);\r\n\r\n\t\tvar pg1 = list.$.page1,\r\n\t\t\tpg2 = list.$.page2,\r\n\t\t\tlastIdx = Math.max(pg1.end, pg2.end);\r\n\r\n\t\t// props.models is removed modelList and the lowest index among removed models\r\n\t\tif (props.models.low <= lastIdx) {\r\n\t\t\tthis.refresh(list);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Recalculates the buffer size based on the current metrics for the given list. This\r\n\t* may not be completely accurate until the final page is scrolled into view.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tadjustBuffer: function (list) {\r\n\t\tvar cs = this.childSize(list),\r\n\t\t\tcount = list.collection ? list.collection.length : 0,\r\n\t\t\tbs = 0, sp = list.psizeProp, ss = list.ssizeProp,\r\n\t\t\tn = list.$.buffer.node || list.$.buffer.hasNode();\r\n\t\tif (n) {\r\n\t\t\tbs = cs * count;\r\n\t\t\tlist.bufferSize = bs;\r\n\t\t\tn.style[sp] = bs + 'px';\r\n\t\t\tn.style[ss] = this[ss](list) + 'px';\r\n\t\t\tlist.$.scroller.remeasure();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Ensures that the pages are positioned according to their calculated positions,\r\n\t* updating if necessary.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tadjustPagePositions: function (list) {\r\n\t\tfor (var i=0, p; (p=list.pages[i]); ++i) {\r\n\t\t\tvar pi = p.index,\r\n\t\t\t\tcp = this.pagePosition(list, p.index),\r\n\t\t\t\tmx = list.metrics.pages[pi] || (list.metrics.pages[pi] = {}),\r\n\t\t\t\tpp = list.posProp,\r\n\t\t\t\tup = list.upperProp,\r\n\t\t\t\tlp = list.lowerProp,\r\n\t\t\t\tsp = list.psizeProp;\r\n\t\t\tp.node.style[pp] = cp + 'px';\r\n\t\t\tp[up] = mx[up] = cp;\r\n\t\t\tp[lp] = mx[lp] = (mx[sp] + cp);\r\n\t\t}\r\n\t\tthis.setScrollThreshold(list);\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the assumed position for the requested page index.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tpagePosition: function (list, index) {\r\n\t\tvar mx = list.metrics.pages,\r\n\t\t\tds = this.defaultPageSize(list),\r\n\t\t\ttt = 0, sp = list.psizeProp, cp;\r\n\t\twhile (index > 0) {\r\n\t\t\tcp = mx[--index];\r\n\t\t\t// if the index is > 0 then we need to ensure we have at least\r\n\t\t\t// the minimum height available so this is a deliberate 'fail-on-zero' case\r\n\t\t\ttt += (cp && cp[sp]? cp[sp]: ds);\r\n\t\t}\r\n\t\treturn tt;\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the default page size.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdefaultPageSize: function (list) {\r\n\t\tvar perPage = list.controlsPerPage || this.controlsPerPage(list);\r\n\t\treturn (perPage * (list.fixedChildSize || list.childSize || 100));\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the number of pages for the given [list]{@link module:enyo/DataList~DataList}.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tpageCount: function (list) {\r\n\t\tvar perPage = list.controlsPerPage || this.controlsPerPage(list);\r\n\t\tvar len = list.collection? list.collection.length: 0;\r\n\t\treturn (Math.ceil(len / (perPage || 1)));\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the current (and desired) scroll position from the\r\n\t* [scroller]{@link module:enyo/Scroller~Scroller} for the given list.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tgetScrollPosition: function (list) {\r\n\t\treturn list.$.scroller.getScrollTop();\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the scroll position on the [scroller]{@link module:enyo/Scroller~Scroller}\r\n\t* owned by the given list.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tsetScrollPosition: function (list, pos) {\r\n\t\tlist.$.scroller.setScrollTop(pos);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tscrollHandler: function (list, bounds) {\r\n\t\tvar last = this.pageCount(list)-1,\r\n\t\t\tpos  = this.pagesByPosition(list);\r\n\t\tif ((bounds.xDir === 1 || bounds.yDir === 1) && pos.lastPage.index !== (last)) {\r\n\t\t\tthis.generatePage(list, pos.firstPage, pos.lastPage.index + 1);\r\n\t\t\tthis.adjustPagePositions(list);\r\n\t\t\tthis.adjustBuffer(list);\r\n\t\t\t// note that the reference to the page positions has been udpated by\r\n\t\t\t// another method so we trust the actual pages\r\n\t\t\tlist.triggerEvent('paging', {\r\n\t\t\t\tstart: pos.firstPage.start,\r\n\t\t\t\tend: pos.lastPage.end,\r\n\t\t\t\taction: 'scroll'\r\n\t\t\t});\r\n\t\t} else if ((bounds.xDir === -1 || bounds.yDir === -1) && pos.firstPage.index !== 0) {\r\n\t\t\tthis.generatePage(list, pos.lastPage, pos.firstPage.index - 1);\r\n\t\t\tthis.adjustPagePositions(list);\r\n\t\t\tthis.adjustBuffer(list);\r\n\t\t\t// note that the reference to the page positions has been udpated by\r\n\t\t\t// another method so we trust the actual pages\r\n\t\t\tlist.triggerEvent('paging', {\r\n\t\t\t\tstart: pos.firstPage.start,\r\n\t\t\t\tend: pos.lastPage.end,\r\n\t\t\t\taction: 'scroll'\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tsetScrollThreshold: function (list) {\r\n\t\tvar threshold = list.scrollThreshold || (list.scrollThreshold={}),\r\n\t\t\tmetrics   = list.metrics.pages,\r\n\t\t\tpos       = this.pagesByPosition(list),\r\n\t\t\tfirstIdx  = pos.firstPage.index,\r\n\t\t\tlastIdx   = pos.lastPage.index,\r\n\t\t\tcount     = this.pageCount(list)-1,\r\n\t\t\tlowerProp = list.lowerProp,\r\n\t\t\tupperProp = list.upperProp,\r\n\t\t\tfn        = upperProp == 'top'? this.height: this.width;\r\n\t\t// now to update the properties the scroller will use to determine\r\n\t\t// when we need to be notified of position changes requiring paging\r\n\t\tif (firstIdx === 0) {\r\n\t\t\tthreshold[upperProp] = undefined;\r\n\t\t} else {\r\n\t\t\tthreshold[upperProp] = (metrics[firstIdx][upperProp] + this.childSize(list));\r\n\t\t}\r\n\t\tif (lastIdx >= count) {\r\n\t\t\tthreshold[lowerProp] = undefined;\r\n\t\t} else {\r\n\t\t\tthreshold[lowerProp] = (metrics[lastIdx][lowerProp] - fn.call(this, list) - this.childSize(list));\r\n\t\t}\r\n\t\tif (list.usingScrollListener) {\r\n\t\t\tlist.$.scroller.setScrollThreshold(threshold);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Determines which two pages to generate, based on a\r\n\t* specific target scroll position.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tassignPageIndices: function (list, targetPos) {\r\n\t\tvar index1, index2, bias,\r\n\t\t\tpc = this.pageCount(list),\r\n\t\t\tlast = Math.max(0, pc - 1),\r\n\t\t\tcurrentPos = this.getScrollPosition(list);\r\n\r\n\t\t// If no target position was specified, use the current position\r\n\t\tif (typeof targetPos == 'undefined') {\r\n\t\t\ttargetPos = currentPos;\r\n\t\t}\r\n\r\n\t\t// Make sure the target position is in-bounds\r\n\t\ttargetPos = Math.max(0, Math.min(targetPos, list.bufferSize));\r\n\r\n\t\t// First, we find the target page (the one that covers the target position)\r\n\t\tindex1 = Math.floor(targetPos / this.defaultPageSize(list));\r\n\t\tindex1 = Math.min(index1, last);\r\n\r\n\t\t// Our list always generates two pages worth of content, so -- now that we have\r\n\t\t// our target page -- we need to pick either the preceding page or the following\r\n\t\t// page to generate as well. To help us decide, we first determine how our\r\n\t\t// target position relates to our current position. If we know which direction\r\n\t\t// we're moving in, it's generally better to render the page that lies between\r\n\t\t// our current position and our target position, in case we are about to scroll\r\n\t\t// \"lazily\" to an element near the edge of our target page. If we don't have any\r\n\t\t// information to work with, we arbitrarily favor the following page.\r\n\t\tbias = (targetPos > currentPos) ? -1 : 1;\r\n\r\n\t\t// Now we know everything we need to choose our second page...\r\n\t\tindex2 =\r\n\t\t\t// If our target page is the first page (index == 0), there is no preceding\r\n\t\t\t// page -- so we choose the following page (index == 1). Note that our\r\n\t\t\t// our target page will always be (index == 0) if the list is empty or has\r\n\t\t\t// only one page worth of content. Picking (index == 1) for our second page\r\n\t\t\t// in these cases is fine, though the page won't contain any elements.\r\n\t\t\t(index1 === 0) ? 1 :\r\n\t\t\t// If target page is the last page, there is no following page -- so we choose\r\n\t\t\t// the preceding page.\r\n\t\t\t(index1 === last) ? index1 - 1 :\r\n\t\t\t// In all other cases, we pick a page using our previously determined bias.\r\n\t\t\tindex1 + bias;\r\n\r\n\t\tlist.$.page1.index = index1;\r\n\t\tlist.$.page2.index = index2;\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tresetToPosition: function (list, px) {\r\n\t\tthis.assignPageIndices(list, px);\r\n\t\tthis.generate(list);\r\n\t\tlist.triggerEvent('paging', {\r\n\t\t\tstart: list.$.page1.start,\r\n\t\t\tend: list.$.page2.end,\r\n\t\t\taction: 'reset'\r\n\t\t});\r\n\t},\r\n\t/**\r\n\t* Handles scroll [events]{@glossary event} for the given [list]{@link module:enyo/DataList~DataList}.\r\n\t* The events themselves aren't helpful, as, depending on the underlying\r\n\t* `scrollStrategy`, they have varied information. This is a hefty method, but it is\r\n\t* contained to keep from calling too many [functions]{@glossary Function} whenever\r\n\t* this event is propagated.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdidScroll: function (list, event) {\r\n\t\tif (!list.usingScrollListener) {\r\n\t\t\tvar threshold = list.scrollThreshold,\r\n\t\t\t\tbounds    = event.scrollBounds,\r\n\t\t\t\tds        = this.defaultPageSize(list),\r\n\t\t\t\tlowerProp = list.lowerProp,\r\n\t\t\t\tupperProp = list.upperProp,\r\n\t\t\t\tpos       = bounds[upperProp],\r\n\t\t\t\tut        = threshold[upperProp],\r\n\t\t\t\tlt        = threshold[lowerProp];\r\n\t\t\tif (bounds.xDir === 1 || bounds.yDir === 1) {\r\n\t\t\t\tif (!isNaN(lt)) {\r\n\t\t\t\t\tif (pos >= lt) {\r\n\t\t\t\t\t\tif (pos >= lt + ds) {\r\n\t\t\t\t\t\t\t// big jump\r\n\t\t\t\t\t\t\tthis.resetToPosition(list, pos);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// continuous scrolling\r\n\t\t\t\t\t\t\tthis.scrollHandler(list, bounds);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bounds.yDir === -1 || bounds.xDir === -1) {\r\n\t\t\t\tif (!isNaN(ut) && (pos <= ut)) {\r\n\t\t\t\t\tif (pos <= ut) {\r\n\t\t\t\t\t\tif (pos <= ut - ds) {\r\n\t\t\t\t\t\t\t// big jump\r\n\t\t\t\t\t\t\tthis.resetToPosition(list, pos);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//continuous scrolling\r\n\t\t\t\t\t\t\tthis.scrollHandler(list, bounds);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* The delegate's `resize` event handler.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdidResize: function (list) {\r\n\t\tvar prevCPP = list.controlsPerPage;\r\n\r\n\t\tlist._updateBounds = true;\r\n\t\tthis.updateBounds(list);\r\n\t\t// Need to update our controlsPerPage value immediately,\r\n\t\t// before any cached metrics are used\r\n\t\tthis.controlsPerPage(list);\r\n\t\tif (prevCPP !== list.controlsPerPage) {\r\n\t\t\t// since we are now using a different number of controls per page,\r\n\t\t\t// we need to invalidate our cached page metrics\r\n\t\t\tlist.metrics.pages = {};\r\n\t\t}\r\n\t\tthis.resetToPosition(list);\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the height for the given [list]{@link module:enyo/DataList~DataList}. This value\r\n\t* is cached and reused until the list is resized.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\theight: function (list) {\r\n\t\tif (list._updateBounds) { this.updateBounds(list); }\r\n\t\treturn list.boundsCache.height;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the width for the given [list]{@link module:enyo/DataList~DataList}. This value\r\n\t* is cached and reused until the list is resized.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\twidth: function (list) {\r\n\t\tif (list._updateBounds) { this.updateBounds(list); }\r\n\t\treturn list.boundsCache.width;\r\n\t},\r\n\r\n\t/**\r\n\t* Updates the cached values for the sizing of the given list.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tupdateBounds: function (list) {\r\n\t\tlist.boundsCache    = list.getBounds();\r\n\t\tlist._updatedBounds = utils.perfNow();\r\n\t\tlist._updateBounds  = false;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the `start` and `end` indices of the visible controls. Partially visible controls\r\n\t* are included if the amount visible exceeds the {@link module:enyo/DataList~DataList#visibleThreshold}.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tgetVisibleControlRange: function (list) {\r\n\t\tvar ret = {\r\n\t\t\t\tstart: -1,\r\n\t\t\t\tend: -1\r\n\t\t\t},\r\n\t\t\tposProp = list.posProp,\r\n\t\t\tsizeProp = list.psizeProp,\r\n\t\t\tsize = this[sizeProp](list),\r\n\t\t\tscrollPosition = this.getScrollPosition(list),\r\n\t\t\tpages = list.pages.slice(0).sort(function (a, b) {\r\n\t\t\t\treturn a.start - b.start;\r\n\t\t\t}),\r\n\t\t\ti = 0,\r\n\t\t\tmax = list.collection? list.collection.length - 1 : 0,\r\n\t\t\tcpp = list.controlsPerPage,\r\n\t\t\tadjustedScrollPosition, p, bounds, ratio;\r\n\r\n\t\t// find the first showing page and estimate the start and end indices\r\n\t\twhile ((p = pages[i++])) {\r\n\t\t\tbounds = p.getBounds();\r\n\t\t\tbounds.right = list.bufferSize - bounds.left - bounds.width;\r\n\r\n\t\t\tadjustedScrollPosition = scrollPosition - list.scrollPositionOffset;\r\n\r\n\t\t\tif (scrollPosition >= bounds[posProp] && scrollPosition < bounds[posProp] + bounds[sizeProp]) {\r\n\t\t\t\tratio = cpp/bounds[sizeProp];\r\n\t\t\t\tret.start = Math.min(max, Math.max(0, Math.round((adjustedScrollPosition - bounds[posProp])*ratio) + p.start));\r\n\t\t\t\tret.end = Math.min(max, Math.round(size*ratio) + ret.start);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tret.start = this.adjustIndex(list, ret.start, p, bounds, adjustedScrollPosition, true);\r\n\t\tret.end = Math.max(ret.start, this.adjustIndex(list, ret.end, p, bounds, adjustedScrollPosition + size, false));\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/**\r\n\t* Calculates the scroll position offset to account for the dimensions of any controls that\r\n\t* are within the scroller but precede the pages.\r\n\t*\r\n\t* @method\r\n\t* @param  {module:enyo/DataList~DataList} list - The instance of enyo/DataList\r\n\t* @private\r\n\t*/\r\n\tcalcScrollOffset: function (list) {\r\n\t\tvar wrapper = list.pages[0].parent.hasNode(),\r\n\t\t\tscroller = list.$.scroller.hasNode(),\r\n\t\t\tposProp = list.posProp,\r\n\t\t\tposition;\r\n\r\n\t\t// these should always be truthy in production scenarios but since the nodes aren't\r\n\t\t// actually rendered in mocha, the tests fail so guarding against that.\r\n\t\tif (wrapper && scroller) {\r\n\t\t\tposition = Dom.calcNodePosition(wrapper, scroller);\r\n\t\t\tlist.scrollPositionOffset = position[posProp];\r\n\t\t} else {\r\n\t\t\tlist.scrollPositionOffset = 0;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Refines an estimated `index` to a precise index by evaluating the bounds of the control at\r\n\t* the estimated `index` against the visible area and adjusting it up or down based on the\r\n\t* actual bounds and the `list`'s {@link module:enyo/DataList~DataList#visibleThreshold}.\r\n\t*\r\n\t* @method\r\n\t* @param {module:enyo/DataList~DataList} list\r\n\t* @param {Number}        index           Estimated index\r\n\t* @param {module:enyo/Control~Control}  page            Page control containing control at `index`\r\n\t* @param {Object}        pageBounds      Bounds of `page`\r\n\t* @param {Number}        scrollBoundary  Edge of visible area (top, bottom, left, or right)\r\n\t* @param {Boolean}       start           `true` for start of boundary (top, right), `false`\r\n\t*   for end\r\n\t* @private\r\n\t*/\r\n\tadjustIndex: function (list, index, page, pageBounds, scrollBoundary, start) {\r\n\t\tvar dir = start? -1 : 1,\r\n\t\t\tposProp = list.posProp,\r\n\t\t\tsizeProp  = list.psizeProp,\r\n\t\t\tmax = list.collection? list.collection.length - 1 : 0,\r\n\t\t\tlast, control, bounds,\r\n\r\n\t\t\t// edge of control\r\n\t\t\tedge,\r\n\r\n\t\t\t// distance from edge of control to scroll boundary\r\n\t\t\tdEdge,\r\n\r\n\t\t\t// distance from visible threshold to scroll boundary\r\n\t\t\tdThresh;\r\n\r\n\t\tdo {\r\n\t\t\tcontrol = list.getChildForIndex(index);\r\n\r\n\t\t\t// if index is on a boundary (other than 0) and the control is fully visible, the\r\n\t\t\t// control at index may not exist if the buffer page hasn't shifted to cover this\r\n\t\t\t// index range yet. If that's the case, revert to our previous index and stop.\r\n\t\t\tif (!control) {\r\n\t\t\t\tindex = last;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// account for crossing page boundaries\r\n\t\t\tif (control.parent != page) {\r\n\t\t\t\tpage = control.parent;\r\n\t\t\t\tpageBounds = page.getBounds();\r\n\t\t\t}\r\n\r\n\t\t\tbounds = control.getBounds();\r\n\t\t\tbounds.right = pageBounds.width - bounds.left - bounds.width;\r\n\r\n\t\t\tedge = bounds[posProp] + pageBounds[posProp] + (start? 0 : bounds[sizeProp]);\r\n\t\t\tdEdge = edge - scrollBoundary;\r\n\t\t\tdThresh = dEdge - dir*bounds[sizeProp]*(1-list.visibleThreshold)\t;\r\n\r\n\t\t\tif ((start && dEdge > 0) || (!start && dEdge < 0)) {\r\n\t\t\t\t// control is fully visible\r\n\t\t\t\tif (last !== index + dir) {\r\n\t\t\t\t\tlast = index;\r\n\t\t\t\t\tindex += dir;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if this control is fully visible but the last was too obscured, use this\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if ((start && dThresh >= 0) || (!start && dThresh <= 0)) {\r\n\t\t\t\t// control is partially obscured but enough is visible\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\t// control is too obscured\r\n\t\t\t\tif (last !== index - dir) {\r\n\t\t\t\t\tlast = index;\r\n\t\t\t\t\tindex -= dir;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// use the last since this is too obscured\r\n\t\t\t\t\tindex = last;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// guard against selecting an index that is out of bounds\r\n\t\t\tif (index < 0) {\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (index > max) {\r\n\t\t\t\tindex = max;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} while (true);\r\n\r\n\t\treturn index;\r\n\t}\r\n};\r\n","var\r\n\ttween = require('./tween'),\r\n\tutils = require('./utils'),\r\n\tanimation = require('./animation');\r\n/**\r\n * Contains the declaration for the {@link module:enyo/scene~scene} of an animation.\r\n * @module enyo/scene\r\n */\r\n\r\nvar _ts, _framerate = 16.6;\r\n\r\nvar AnimationSupport = {\r\n\t/**\r\n\t * Reiterates the animation applied to the component.\r\n\t * It could be;\r\n\t * true, for infinite iteration\r\n\t * [Number], for how many times animation should iterate.\r\n\t * false, for no repetition\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\trepeat: false,\r\n\t/**\r\n\t * Reduces GPU layers when the animation is completed.\r\n\t * As most of the transform animations happens on \r\n\t * GPU layer, ans stays there even after the animations \r\n\t * is completed. However, need to be carefull while using this\r\n\t * feature as if the component tends to animate regularly, this \r\n\t * feature would be an overhead.\r\n\t * when true, GPU memory is freed\r\n\t *      false, layer remain intact.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\thandleLayers: false,\r\n\t/**\r\n\t * Indentifies whether the animation is in progress or not.\r\n\t * when true, animation is in progress\r\n\t *      false, otherwise.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\tanimating: false,\r\n\t/**\r\n\t * Specifies the rate at which animation should be played.\r\n\t * When 0, animation is still\r\n\t *      1, animation plays with normal speed\r\n\t *      2, animation plays with 2X fast speed\r\n\t *      0.5, animation plays with slow speed at half of normal speed.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\tdirection: 0,\r\n\t/**\r\n\t * Specifies the rate at which animation should be played.\r\n\t * When 0, animation is still\r\n\t *      1, animation plays with normal speed\r\n\t *      2, animation plays with 2X fast speed\r\n\t *      0.5, animation plays with slow speed at half of normal speed.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\tspeed: 0,\r\n\t/**\r\n\t * Moves animation to a particular point within the span of \r\n\t * an animation. Its value could lie between 0 and total duration\r\n\t * of the animation.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\tseekInterval: 0,\r\n\t/**\r\n\t * Plays animation in sequence when set to true else \r\n\t * its a parallal animation. This could be applied for\r\n\t * animation properties as well as for scenes within a \r\n\t * scene.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\tisSequence: true,\r\n\t/**\r\n\t * Starts animation when scene is initialized, \r\n\t * when this property is set to true. When false scene instance has\r\n\t * to be explicity played using 'play' api.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\tautoPlay: true,\r\n\t/**\r\n\t * The limit for an animation, which could be an instance\r\n\t * of time as well as distance.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\tspan: 0,\r\n\t/**\r\n\t * The current time state of animation. This represents the\r\n\t * time at which animation is progressed upon. As this property \r\n\t * directly impacts the state of animation, updating this value  \r\n\t * have direct effect on animation unless its animation is halted.\r\n\t * The range lies between 0 to overall span of animation.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\ttimeline: 0,\r\n\t/**\r\n\t * Starts the animation of scene.\r\n\t * @public\r\n\t * @memberOf module:enyo/scene\r\n\t */\r\n\tplay: function() {\r\n\t\tthis.direction = this.speed = 1;\r\n\t\tif (isNaN(this.timeline) || !this.timeline) {\r\n\t\t\tthis.timeline = 0;\r\n\t\t}\r\n\t\tthis.animating = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Resumes the paused animation of scene.\r\n\t * @memberOf module:enyo/scene\r\n\t * @public\r\n\t */\r\n\tresume: function() {\r\n\t\tthis.direction = 1;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Pauses the animation of scene.\r\n\t * @memberOf module:enyo/scene\r\n\t * @public\r\n\t */\r\n\tpause: function() {\r\n\t\tthis.direction = 0;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Reverses the animation of scene.\r\n\t * @memberOf module:enyo/scene\r\n\t * @public\r\n\t */\r\n\treverse: function() {\r\n\t\tthis.direction = -1;\r\n\t},\r\n\r\n\t/**\r\n\t * Stops the animation of scene.\r\n\t * @memberOf module:enyo/scene\r\n\t * @public\r\n\t */\r\n\tstop: function() {\r\n\t\tthis.speed = 0;\r\n\t\tthis.timeline = 0;\r\n\t},\r\n\r\n\t/**\r\n\t * Seeks the animation to the position provided in <code>seek</code>\r\n\t * The value of <code>seek</code> should be between <b>0</b> to <code>duration</code> of the animation.\r\n\t * @param  {Number} seek      where the animation has to be seeked\r\n\t * @memberOf module:enyo/scene\r\n\t * @public\r\n\t */\r\n\tseek: function(seek) {\r\n\t\tthis.timeline = seek;\r\n\t},\r\n\r\n\t/**\r\n\t * Seeks the animation to the position provided in <code>seek</code> with animation\r\n\t * The value of <code>seek</code> should be between <b>0</b> to <code>duration</code> of the animation.\r\n\t * @param  {Number} seek      where the animation has to be seeked\r\n\t * @memberOf module:enyo/scene\r\n\t * @public\r\n\t */\r\n\tseekAnimate: function(seek) {\r\n\t\tif (seek >= 0) {\r\n\t\t\tif (!this.animating)\r\n\t\t\t\tthis.play();\r\n\t\t\tthis.speed = 1;\r\n\t\t} else {\r\n\t\t\tthis.speed = -1;\r\n\t\t}\r\n\t\tthis.seekInterval = this.timeline + seek;\r\n\t\tif (this.seekInterval < 0) {\r\n\t\t\tthis.speed = 0;\r\n\t\t\tthis.seekInterval = 0;\r\n\t\t}\r\n\t},\r\n\r\n\t//TODO: Move these events to Event Delegator\r\n\t/**\r\n\t * Event to identify when the scene has done animating.\r\n\t * @memberOf module:enyo/scene\r\n\t * @public\r\n\t */\r\n\tcompleted: function() {},\r\n\r\n\t/**\r\n\t * Event to identify when the scene has done a step(rAF updatation of time) in the animation.\r\n\t * @memberOf module:enyo/scene\r\n\t * @public\r\n\t */\r\n\tstep: function() {}\r\n};\r\n\r\n/**\r\n * Interface which accepts the animation details and returns a scene object\r\n * @param  {Object} actor      component which has to be animated\r\n * @param  {Object} props      properties of the component\r\n * @param  {Object} opts       additional options\r\n * @return {Object}            A scene object\r\n */\r\nmodule.exports = function (proto, properties, opts) {\r\n\tvar i, ctor, ps, s;\r\n\r\n\tif (!utils.isArray(proto)) {\r\n\t\tps = new scene(proto, properties, opts);\r\n\t} else {\r\n\t\tps = new scene();\r\n\t\tif (opts) utils.mixin(ps, opts);\r\n\t\tfor (i = 0;\r\n\t\t\t(ctor = proto[i]); i++) {\r\n\t\t\ts = new scene(ctor, properties);\r\n\t\t\tps.addScene(s);\r\n\t\t}\r\n\t}\r\n\r\n\tps.autoPlay && ps.play();\r\n\treturn ps;\r\n};\r\n\r\n/**\r\n * {@link module:enyo/Scene~Scene}\r\n *\r\n * @class Scene\r\n * @extends module:enyo/Scene~Scene\r\n * @param  {Object} actor      component which has to be animated\r\n * @param  {Object} props      properties of the component\r\n * @param  {Object} opts       additional options\r\n * @public\r\n */\r\nfunction scene(actor, props, opts) {\r\n\tthis.id = utils.uid(\"@\");\r\n\tthis.poses = [];\r\n\tthis.rolePlays = [];\r\n\tthis.actor = actor;\r\n\r\n\tthis.rAFId = animation.subscribe(this, loop);\r\n\tutils.mixin(this, AnimationSupport);\r\n\tif (opts) utils.mixin(this, opts);\r\n\r\n\tif (props) {\r\n\t\tvar anims = utils.isArray(props) ? props : [props];\r\n\t\tfor (var i = 0, anim;\r\n\t\t\t(anim = anims[i]); i++) {\r\n\t\t\tif (anim.delay) this.addAnimation({}, anim.delay, actor.duration);\r\n\t\t\tthis.addAnimation(anim, anim.duration || 0, actor.duration);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks whether the scene is in a active state, which then can be animated\r\n * @return {Boolean} generated value in true or false. true in case of the parent scene\r\n * @memberOf module:enyo/scene\r\n * @public\r\n */\r\nscene.prototype.isActive = function() {\r\n\tif (this.actor)\r\n\t\treturn this.actor.generated && !this.actor.destroyed;\r\n\r\n\t// making sure parent scenes are always active.\r\n\treturn true;\r\n};\r\n\r\n/**\r\n * Sets the new animations with the properties passed.\r\n * @param {Object} properties       Animation properties\r\n * @memberOf module:enyo/scene\r\n * @public\r\n */\r\nscene.prototype.setAnimation = function(properties) {\r\n\tvar currentPose = findScene(this.poses, \"poses\");\r\n\tsetScene(currentPose, this.timeline, properties);\r\n};\r\n\r\n/**\r\n * Gets the current animation pose.\r\n * @param {Number} index       animation index\r\n * @return {Object} pose       pose with the passed index\r\n * @memberOf module:enyo/scene\r\n * @public\r\n */\r\nscene.prototype.getAnimation = function(index) {\r\n\treturn index < 0 || this.poses[index];\r\n};\r\n\r\n/**\r\n * addAnimation is used for adding new animation with the passed properties at run time.\r\n * @param {Object} newProp  animation properties for new animation\r\n * @param {Number} span     span between the animation\r\n * @param {Number} dur      duration for the new animation\r\n * @memberOf module:enyo/scene\r\n * @public\r\n */\r\nscene.prototype.addAnimation = function(newProp, span, dur) {\r\n\tdur = dur || this.span;\r\n\tvar l = this.poses.length,\r\n\t\told = 0,\r\n\t\tspanCache = span.toString().match(/%$/) ? (span.replace(/%$/, '') * dur / 100) : span,\r\n\t\tnewSpan = newProp instanceof this.constructor ? newProp.span : spanCache;\r\n\r\n\tif (l > 0 && this.isSequence) {\r\n\t\told = this.poses[l - 1].span;\r\n\t\tnewSpan += old;\r\n\t}\r\n\tthis.poses.push({\r\n\t\tanimate: newProp,\r\n\t\tspan: newSpan,\r\n\t\tbegin: old\r\n\t});\r\n\tthis.span = newSpan;\r\n};\r\n\r\n/**\r\n * Add a new animation scene for the animation.\r\n * @param {Object} sc scene which has to be added\r\n * @memberOf module:enyo/scene\r\n * @public\r\n */\r\nscene.prototype.addScene = function(sc) {\r\n\tvar l = this.poses.length,\r\n\t\told = 0,\r\n\t\tnewSpan = sc instanceof this.constructor ? sc.span : 0;\r\n\r\n\tif (l > 0 && this.isSequence) {\r\n\t\told = this.poses[l - 1].span;\r\n\t\tnewSpan += old;\r\n\t\tsc.span = newSpan;\r\n\t\tsc.begin = old;\r\n\t}\r\n\r\n\tthis.poses.push(sc);\r\n\tthis.span = newSpan;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nfunction action(ts, pose) {\r\n\tvar tm, i, poses,\r\n\t\tdur = this.span,\r\n\t\tactor = this.actor;\r\n\r\n\tif (this.isActive()) {\r\n\t\ttm = rolePlay(ts, this);\r\n\t\tif (isNaN(tm) || tm < 0) return pose;\r\n\r\n\t\tposes = posesAtTime(this.poses, tm > dur ? dur : tm);\r\n\t\tfor (i = 0, pose;\r\n\t\t\t(pose = poses[i]); i++) {\r\n\t\t\tif (pose instanceof this.constructor) {\r\n\t\t\t\tpose.speed = this.speed;\r\n\t\t\t\tpose.direction = this.direction;\r\n\t\t\t\tpose.handleLayers = this.handleLayers;\r\n\t\t\t\taction.call(pose, ts);\r\n\t\t\t} else {\r\n\t\t\t\tupdate(pose, actor, (tm - pose.begin), (pose.span - pose.begin));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.step && this.step(actor);\r\n\r\n\t\tif (tm > dur) cut.call(this, actor);\r\n\t}\r\n\treturn pose;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction cut(actor) {\r\n\tthis.repeat = REPEAT[this.repeat] || this.repeat;\r\n\tthis.timeline = --this.repeat ? 0 : this.span;\r\n\r\n\tif (this.repeat > 0) {\r\n\t\tapplyInitialStyle(this);\r\n\t\treturn;\r\n\t} else {\r\n\t\tif (FILLMODE[this.fillmode]) {\r\n\t\t\tapplyInitialStyle(this);\r\n\t\t}\r\n\t}\r\n\r\n\tif (this.handleLayers) {\r\n\t\tthis.speed = 0;\r\n\t\tif (this.active) {\r\n\t\t\tthis.active = false;\r\n\t\t\ttween.halt(actor);\r\n\t\t}\r\n\t}\r\n\tthis.animating = false;\r\n\tthis.completed && this.completed(actor);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction loop(was, is) {\r\n\tif (this.animating) {\r\n\t\t_ts = is - (was || 0);\r\n\t\t_ts = (_ts > _framerate) ? _framerate : _ts;\r\n\t\taction.call(this, _ts);\r\n\t} else if (this.actor && this.actor.destroyed) {\r\n\t\tanimation.unsubscribe(this.rAFId);\r\n\t}\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction update(pose, actor, since, dur) {\r\n\tvar t;\r\n\tif (!pose._startAnim) tween.init(actor, pose);\r\n\tif (since < 0) since = 0;\r\n\tif (since <= dur && dur !== 0) {\r\n\t\tt = since / dur;\r\n\t\ttween.step(actor, pose, t > 0.98 ? 1 : t, dur);\r\n\t} else {\r\n\t\ttween.step(actor, pose, 1, dur);\r\n\t}\r\n}\r\n\r\n/**\r\n * <code>rolePlay</code> updated the timeline of the actor which is currently animating.\r\n * @param  {Number} t     Elapsed time since the animation of this pose has started (ratio in factor of 1)\r\n * @param  {@link module:enyo/Component~Component} actor The component which is animating\r\n * @return {Number}       Returns the updated timeline of the actor\r\n * @private\r\n */\r\nfunction rolePlay(t, actor) {\r\n\tactor = actor || this;\r\n\tt = t * actor.speed * actor.direction;\r\n\r\n\tactor.timeline += t;\r\n\tif (actor.seekInterval !== 0) {\r\n\t\tif ((actor.seekInterval - actor.timeline) * actor.speed < 0) {\r\n\t\t\tactor.seekInterval = 0;\r\n\t\t\tactor.speed = 0;\r\n\t\t}\r\n\t}\r\n\r\n\tif (actor.timeline === undefined || actor.timeline < 0)\r\n\t\tactor.timeline = 0;\r\n\treturn actor.timeline;\r\n}\r\n\r\n/**\r\n * Returns animation pose index for a particular\r\n * instance of time from the list of\r\n * animations added to the scene.\r\n * @param  {number} span - Time span from the animation timeline\r\n * @return {number}      - index of the animation\r\n * @private\r\n */\r\nfunction posesAtTime(anims, span) {\r\n\tfunction doFilter(val, idx, ar) {\r\n\t\treturn span > (val.begin || 0) && span <= val.span;\r\n\t}\r\n\treturn anims.filter(doFilter);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction modify(pose, currentTm) {\r\n\tpose.span = currentTm;\r\n\tdelete pose._endAnim;\r\n\tpose._endAnim = pose.currentState;\r\n\treturn pose;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction setScene(poseArr, tm, properties) {\r\n\tvar currentTime = tm;\r\n\tfor (var i = 0; i < poseArr.length; i++) {\r\n\r\n\t\tif (poseArr[i].begin <= currentTime && poseArr[i].span >= currentTime) { // check the current Pose\r\n\t\t\tmodify(poseArr[i], currentTime);\r\n\t\t\tposeArr.splice((i + 1), poseArr.length - (i + 1));\r\n\t\t\tposeArr[(i + 1)] = {\r\n\t\t\t\tanimate: properties,\r\n\t\t\t\tbegin: currentTime,\r\n\t\t\t\tspan: currentTime + properties.duration\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction hasScene(poseArr, propCheck) {\r\n\tvar bool;\r\n\tif (!utils.isArray(poseArr)) {\r\n\t\tbool = poseArr[propCheck] ? true : false;\r\n\t} else {\r\n\t\tfor (var i = 0; i < poseArr.length; i++) {\r\n\t\t\tbool = poseArr[i][propCheck] ? true : false;\r\n\t\t\tif (bool) break;\r\n\t\t}\r\n\t}\r\n\treturn bool;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction findScene(poseArr, propCheck) {\r\n\tvar parentNode, currNode = poseArr;\r\n\tif (hasScene(poseArr, propCheck)) {\r\n\t\tif (utils.isArray(poseArr)) {\r\n\t\t\tfor (var i = 0; i < poseArr.length; i++) {\r\n\t\t\t\tparentNode = currNode[i];\r\n\t\t\t\tcurrNode = findScene(currNode[i].poses, propCheck);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tparentNode = currNode;\r\n\t\t\tcurrNode = findScene(currNode.poses, propCheck);\r\n\t\t}\r\n\t}\r\n\treturn parentNode ? parentNode[propCheck] : parentNode;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nfunction applyInitialStyle(node) {\r\n\tnode = node.actor ? node : findScene(node.poses, \"actor\");\r\n\tnode = node.actor || node;\r\n\tnode.addStyles(node.initialState);\r\n}\r\n\r\nvar\r\n\tREPEAT = {\r\n\t\t'true': Infinity,\r\n\t\t'false': 0\r\n\t},\r\n\tFILLMODE = {\r\n\t\t'backwards': true,\r\n\t\t'forwards': false,\r\n\t\t'default': false,\r\n\t\t'none': false\r\n\t};","require('enyo');\r\n\r\nvar\r\n    logger = require('./logger'),\r\n    scene = require('./scene'),\r\n    utils = require('./utils');\r\n\r\nvar defaultCtor = null;\r\n\r\n/**\r\n* Creates a JavaScript {@glossary constructor} function with\r\n* a prototype defined by `props`. **All constructors must have a unique name.**\r\n*\r\n* `kind()` makes it easy to build a constructor-with-prototype (like a\r\n* class) that has advanced features like prototype-chaining\r\n* ({@glossary inheritance}).\r\n*\r\n* A plug-in system is included for extending the abilities of the\r\n* {@glossary kind} generator, and constructors are allowed to\r\n* perform custom operations when subclassed.\r\n*\r\n* If you make changes to `enyo/kind`, be sure to add or update the appropriate\r\n* [unit tests](@link https://github.com/enyojs/enyo/tree/master/tools/test/core/tests).\r\n*\r\n* For more information, see the documentation on\r\n* [Kinds]{@linkplain $dev-guide/key-concepts/kinds.html} in the Enyo Developer Guide.\r\n*\r\n* @module enyo/kind\r\n* @param {Object} props - A [hash]{@glossary Object} of properties used to define and create\r\n*\tthe {@glossary kind}\r\n* @public\r\n*/\r\n/*jshint -W120*/\r\nvar kind = exports = module.exports = function (props) {\r\n/*jshint +W120*/\r\n\t// extract 'name' property\r\n\tvar name = props.name || '';\r\n\tdelete props.name;\r\n\t// extract 'kind' property\r\n\tvar hasKind = ('kind' in props);\r\n\tvar kindName = props.kind;\r\n\tdelete props.kind;\r\n\t// establish base class reference\r\n\tvar base = constructorForKind(kindName);\r\n\tvar isa = base && base.prototype || null;\r\n\t// if we have an explicit kind property with value undefined, we probably\r\n\t// tried to reference a kind that is not yet in scope\r\n\tif (hasKind && kindName === undefined || base === undefined) {\r\n\t\tvar problem = kindName === undefined ? 'undefined kind' : 'unknown kind (' + kindName + ')';\r\n\t\tthrow 'enyo.kind: Attempt to subclass an ' + problem + '. Check dependencies for [' + (name || '<unnamed>') + '].';\r\n\t}\r\n\t// make a boilerplate constructor\r\n\tvar ctor = kind.makeCtor();\r\n\t// semi-reserved word 'constructor' causes problems with Prototype and IE, so we rename it here\r\n\tif (props.hasOwnProperty('constructor')) {\r\n\t\tprops._constructor = props.constructor;\r\n\t\tdelete props.constructor;\r\n\t}\r\n\t// create our prototype\r\n\t//ctor.prototype = isa ? enyo.delegate(isa) : {};\r\n\tutils.setPrototype(ctor, isa ? utils.delegate(isa) : {});\r\n\t// there are special cases where a base class has a property\r\n\t// that may need to be concatenated with a subclasses implementation\r\n\t// as opposed to completely overwriting it...\r\n\tkind.concatHandler(ctor, props);\r\n\r\n\t// put in our props\r\n\tutils.mixin(ctor.prototype, props);\r\n\t// alias class name as 'kind' in the prototype\r\n\t// but we actually only need to set this if a new name was used,\r\n\t// not if it is inheriting from a kind anonymously\r\n\tif (name) {\r\n\t\tctor.prototype.kindName = name;\r\n\t}\r\n\t// this is for anonymous constructors\r\n\telse {\r\n\t\tctor.prototype.kindName = base && base.prototype? base.prototype.kindName: '';\r\n\t}\r\n\t// cache superclass constructor\r\n\tctor.prototype.base = base;\r\n\t// reference our real constructor\r\n\tctor.prototype.ctor = ctor;\r\n\t// support pluggable 'features'\r\n\tutils.forEach(kind.features, function(fn){ fn(ctor, props); });\r\n\t\r\n\tif (name) kindCtors[name] = ctor;\r\n\t\r\n\treturn ctor;\r\n};\r\n\r\nexports.setDefaultCtor = function (ctor) {\r\n\tdefaultCtor = ctor;\r\n};\r\n\r\nvar getDefaultCtor = exports.getDefaultCtor = function () {\r\n\treturn defaultCtor;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nvar concatenated = exports.concatenated = [];\r\n\r\n/**\r\n* Creates a singleton of a given {@glossary kind} with a given\r\n* definition. **The `name` property will be the instance name of the singleton\r\n* and must be unique.**\r\n*\r\n* ```javascript\r\n* var\r\n* \tkind = require('enyo/kind'),\r\n* \tControl = require('enyo/Control');\r\n*\r\n* module.exports = singleton({\r\n* \tkind: Control,\r\n* \tname: 'app.MySingleton',\r\n* \tpublished: {\r\n* \t\tvalue: 'foo'\r\n* \t},\r\n* \tmakeSomething: function() {\r\n* \t\t//...\r\n* \t}\r\n* });\r\n*\r\n* app.MySingleton.makeSomething();\r\n* app.MySingleton.setValue('bar');\r\n*```\r\n*\r\n* @public\r\n*/\r\nexports.singleton = function (conf) {\r\n\t// extract 'name' property (the name of our singleton)\r\n\tdelete(conf.name);\r\n\t// create an unnamed kind and save its constructor's function\r\n\tvar Kind = kind(conf);\r\n\tvar inst = new Kind();\r\n\treturn inst;\r\n};\r\n\r\n/**\r\n* @name module:enyo/kind.makeCtor\r\n* @method\r\n* @private\r\n*/\r\nkind.makeCtor = function () {\r\n\tvar enyoConstructor = function () {\r\n\t\tif (!(this instanceof enyoConstructor)) {\r\n\t\t\tthrow 'enyo.kind: constructor called directly, not using \"new\"';\r\n\t\t}\r\n\r\n\t\t// two-pass instantiation\r\n\t\tvar result;\r\n\t\tif (this._constructor) {\r\n\t\t\t// pure construction\r\n\t\t\tresult = this._constructor.apply(this, arguments);\r\n\t\t}\r\n\t\t// defer initialization until entire constructor chain has finished\r\n\t\tif (this.constructed) {\r\n\t\t\t// post-constructor initialization\r\n\t\t\tthis.constructed.apply(this, arguments);\r\n\t\t}\r\n\r\n\t\tif (result) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t};\r\n\treturn enyoConstructor;\r\n};\r\n\r\n/**\r\n* Feature hooks for the oop system\r\n*\r\n* @name module:enyo/kind.features\r\n* @private\r\n*/\r\nkind.features = [];\r\n\r\n/**\r\n* Used internally by several mechanisms to allow safe and normalized handling for extending a\r\n* [kind's]{@glossary kind} super-methods. It can take a\r\n* [constructor]{@glossary constructor}, a [prototype]{@glossary Object.prototype}, or an\r\n* instance.\r\n*\r\n* @name module:enyo/kind.extendMethods\r\n* @method\r\n* @private\r\n*/\r\nkind.extendMethods = function (ctor, props, add) {\r\n\tvar proto = ctor.prototype || ctor,\r\n\t\tb = proto.base;\r\n\tif (!proto.inherited && b) {\r\n\t\tproto.inherited = kind.inherited;\r\n\t}\r\n\t// rename constructor to _constructor to work around IE8/Prototype problems\r\n\tif (props.hasOwnProperty('constructor')) {\r\n\t\tprops._constructor = props.constructor;\r\n\t\tdelete props.constructor;\r\n\t}\r\n\t// decorate function properties to support inherited (do this ex post facto so that\r\n\t// ctor.prototype is known, relies on elements in props being copied by reference)\r\n\tfor (var n in props) {\r\n\t\tvar p = props[n];\r\n\t\tif (isInherited(p)) {\r\n\t\t\t// ensure that if there isn't actually a super method to call, it won't\r\n\t\t\t// fail miserably - while this shouldn't happen often, it is a sanity\r\n\t\t\t// check for mixin-extensions for kinds\r\n\t\t\tif (add) {\r\n\t\t\t\tp = proto[n] = p.fn(proto[n] || utils.nop);\r\n\t\t\t} else {\r\n\t\t\t\tp = proto[n] = p.fn(b? (b.prototype[n] || utils.nop): utils.nop);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (utils.isFunction(p)) {\r\n\t\t\tif (add) {\r\n\t\t\t\tproto[n] = p;\r\n\t\t\t\tp.displayName = n + '()';\r\n\t\t\t} else {\r\n\t\t\t\tp._inherited = b? b.prototype[n]: null;\r\n\t\t\t\t// FIXME: we used to need some extra values for inherited, then inherited got cleaner\r\n\t\t\t\t// but in the meantime we used these values to support logging in Object.\r\n\t\t\t\t// For now we support this legacy situation, by suppling logging information here.\r\n\t\t\t\tp.displayName = proto.kindName + '.' + n + '()';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nkind.features.push(kind.extendMethods);\r\n\r\n/**\r\n* Called by {@link module:enyo/CoreObject~Object} instances attempting to access super-methods\r\n* of a parent class ([kind]{@glossary kind}) by calling\r\n* `this.inherited(arguments)` from within a kind method. This can only be done\r\n* safely when there is known to be a super class with the same method.\r\n*\r\n* @name module:enyo/kind.inherited\r\n* @method\r\n* @private\r\n*/\r\nkind.inherited = function (originals, replacements) {\r\n\t// one-off methods are the fast track\r\n\tvar target = originals.callee;\r\n\tvar fn = target._inherited;\r\n\r\n    // regardless of how we got here, just ensure we actually\r\n    // have a function to call or else we throw a console\r\n    // warning to notify developers they are calling a\r\n    // super method that doesn't exist\r\n    if ('function' === typeof fn) {\r\n        var args = originals;\r\n        if (replacements) {\r\n            // combine the two arrays, with the replacements taking the first\r\n            // set of arguments, and originals filling up the rest.\r\n            args = [];\r\n            var i = 0,\r\n                l = replacements.length;\r\n            for (; i < l; ++i) {\r\n                args[i] = replacements[i];\r\n            }\r\n            l = originals.length;\r\n            for (; i < l; ++i) {\r\n                args[i] = originals[i];\r\n            }\r\n        }\r\n        return fn.apply(this, args);\r\n    } else {\r\n        logger.warn('enyo.kind.inherited: unable to find requested ' +\r\n            'super-method from -> ' + originals.callee.displayName + ' in ' + this.kindName);\r\n    }\r\n};\r\n\r\n// dcl inspired super-inheritance\r\n\r\nvar Inherited = function (fn) {\r\n\tthis.fn = fn;\r\n};\r\n\r\n/**\r\n* When defining a method that overrides an existing method in a [kind]{@glossary kind}, you\r\n* can wrap the definition in this function and it will decorate it appropriately for inheritance\r\n* to work.\r\n*\r\n* The older `this.inherited(arguments)` method still works, but this version results in much\r\n* faster code and is the only one supported for kind [mixins]{@glossary mixin}.\r\n*\r\n* @param {Function} fn - A [function]{@glossary Function} that takes a single\r\n*   argument (usually named `sup`) and returns a function where\r\n*   `sup.apply(this, arguments)` is used as a mechanism to make the\r\n*   super-call.\r\n* @public\r\n*/\r\nexports.inherit = function (fn) {\r\n\treturn new Inherited(fn);\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nvar isInherited = exports.isInherited = function (fn) {\r\n\treturn fn && (fn instanceof Inherited);\r\n};\r\n\r\n\r\n//\r\n// 'statics' feature\r\n//\r\nkind.features.push(function(ctor, props) {\r\n\t// install common statics\r\n\tif (!ctor.subclass) {\r\n\t\tctor.subclass = kind.statics.subclass;\r\n\t}\r\n\tif (!ctor.extend) {\r\n\t\tctor.extend = kind.statics.extend;\r\n\t}\r\n\tif (!ctor.kind) {\r\n\t\tctor.kind = kind.statics.kind;\r\n\t}\r\n\t// move props statics to constructor\r\n\tif (props.statics) {\r\n\t\tutils.mixin(ctor, props.statics);\r\n\t\tdelete ctor.prototype.statics;\r\n\t}\r\n\t// also support protectedStatics which won't interfere with defer\r\n\tif (props.protectedStatics) {\r\n\t\tutils.mixin(ctor, props.protectedStatics);\r\n\t\tdelete ctor.prototype.protectedStatics;\r\n\t}\r\n\t// allow superclass customization\r\n\tvar base = ctor.prototype.base;\r\n\twhile (base) {\r\n\t\tbase.subclass(ctor, props);\r\n\t\tbase = base.prototype.base;\r\n\t}\r\n});\r\n\r\n/**\r\n* @private\r\n*/\r\nkind.statics = {\r\n\r\n\t/**\r\n\t* A [kind]{@glossary kind} may set its own `subclass()` method as a\r\n\t* static method for its [constructor]{@glossary constructor}. Whenever\r\n\t* it is subclassed, the constructor and properties will be passed through\r\n\t* this method for special handling of important features.\r\n\t*\r\n\t* @name module:enyo/kind.subclass\r\n\t* @method\r\n\t* @param {Function} ctor - The [constructor]{@glossary constructor} of the\r\n\t*\t[kind]{@glossary kind} being subclassed.\r\n\t* @param {Object} props - The properties of the kind being subclassed.\r\n\t* @public\r\n\t*/\r\n\tsubclass: function (ctor, props) {},\r\n\r\n    /**\r\n     * Allows for extension of the current [kind]{@glossary kind} without\r\n     * creating a new kind. This method is available on all\r\n     * [constructors]{@glossary constructor}, although calling it on a\r\n     * [deferred]{@glossary deferred} constructor will force it to be\r\n     * resolved at that time. This method does not re-run the\r\n     * {@link module:enyo/kind.features} against the constructor or instance.\r\n     *\r\n     * @name module:enyo/kind.extend\r\n     * @method\r\n     * @param {Object|Object[]} props A [hash]{@glossary Object} or [array]{@glossary Array}\r\n     *  of [hashes]{@glossary Object}. Properties will override\r\n     *  [prototype]{@glossary Object.prototype} properties. If a\r\n     *  method that is being added already exists, the new method will\r\n     *  supersede the existing one. The method may call\r\n     *  `this.inherited()` or be wrapped with `kind.inherit()` to call\r\n     *  the original method (this chains multiple methods tied to a\r\n     *  single [kind]{@glossary kind}).\r\n     * @param {Object} [target] - The instance to be extended. If this is not specified, then the\r\n     *  [constructor]{@glossary constructor} of the\r\n     *  [object]{@glossary Object} this method is being called on will\r\n     *  be extended.\r\n     * @returns {Object} The constructor of the class, or specific\r\n     *  instance, that has been extended.\r\n     * @public\r\n     */\r\n    extend: function(props, target) {\r\n        var ctor = this,\r\n            exts = utils.isArray(props) ? props : [props],\r\n            proto, fn;\r\n\r\n\t\tfn = function (key, value) {\r\n\t\t\treturn !(typeof value == 'function' || isInherited(value)) && concatenated.indexOf(key) === -1;\r\n\t\t};\r\n\r\n        proto = target || ctor.prototype;\r\n        for (var i = 0, ext;\r\n            (ext = exts[i]); ++i) {\r\n            kind.concatHandler(proto, ext, true);\r\n            kind.extendMethods(proto, ext, true);\r\n            utils.mixin(proto, ext, { filter: fn });\r\n        }\r\n\r\n\t\treturn target || ctor;\r\n\t},\r\n\r\n\t/**\r\n\t* Creates a new sub-[kind]{@glossary kind} of the current kind.\r\n\t*\r\n\t* @name module:enyo/kind.kind\r\n\t* @method\r\n\t* @param  {Object} props A [hash]{@glossary Object} of properties used to define and create\r\n\t*\tthe [kind]{@glossary kind}\r\n\t* @return {Function} Constructor of the new kind\r\n\t* @public\r\n\t*/\r\n\tkind: function (props) {\r\n\t\tif (props.kind && props.kind !== this) {\r\n\t\t\tlogger.warn('Creating a different kind from a constructor\\'s kind() method is not ' +\r\n\t\t\t\t'supported and will be replaced with the constructor.');\r\n\t\t}\r\n\t\tprops.kind = this;\r\n\t\treturn kind(props);\r\n\t}\r\n};\r\n\r\n/**\r\n * @method\r\n * @private\r\n */\r\nexports.concatHandler = function(ctor, props, instance) {\r\n\r\n    var proto = ctor.prototype || ctor,\r\n        base = proto.ctor;\r\n\r\n    while (base) {\r\n        if (base.concat) base.concat(ctor, props, instance);\r\n        base = base.prototype.base;\r\n    }\r\n};\r\n\r\nvar kindCtors =\r\n/**\r\n* Factory for [kinds]{@glossary kind} identified by [strings]{@glossary String}.\r\n*\r\n* @type Object\r\n* @deprecated Since 2.6.0\r\n* @private\r\n*/\r\n\texports._kindCtors = {};\r\n\r\n/**\r\n * @method\r\n * @private\r\n */\r\nvar constructorForKind = exports.constructorForKind = function(kind) {\r\n    if (kind === null) {\r\n        return kind;\r\n    } else if (kind === undefined) {\r\n        return getDefaultCtor();\r\n    } else if (utils.isFunction(kind)) {\r\n        return kind;\r\n    }\r\n    logger.warn('Creating instances by name is deprecated. Name used:', kind);\r\n    // use memoized constructor if available...\r\n    var ctor = kindCtors[kind];\r\n    if (ctor) {\r\n        return ctor;\r\n    }\r\n    // otherwise look it up and memoize what we find\r\n    //\r\n    // if kind is an object in enyo, say \"Control\", then ctor = enyo[\"Control\"]\r\n    // if kind is a path under enyo, say \"Heritage.Button\", then ctor = enyo[\"Heritage.Button\"] || enyo.Heritage.Button\r\n    // if kind is a fully qualified path, say \"enyo.Heritage.Button\", then ctor = enyo[\"enyo.Heritage.Button\"] || enyo.enyo.Heritage.Button || enyo.Heritage.Button\r\n    //\r\n    // Note that kind \"Foo\" will resolve to enyo.Foo before resolving to global \"Foo\".\r\n    // This is important so \"Image\" will map to built-in Image object, instead of enyo.Image control.\r\n    ctor = Theme[kind] || (global.enyo && global.enyo[kind]) || utils.getPath.call(global, 'enyo.' + kind) || global[kind] || utils.getPath.call(global, kind);\r\n\r\n\t// If what we found at this namespace isn't a function, it's definitely not a kind constructor\r\n\tif (!utils.isFunction(ctor)) {\r\n\t\tthrow '[' + kind + '] is not the name of a valid kind.';\r\n\t}\r\n\tkindCtors[kind] = ctor;\r\n\treturn ctor;\r\n};\r\n\r\n/**\r\n* Namespace for current theme (`enyo.Theme.Button` references the Button specialization for the\r\n* current theme).\r\n*\r\n* @deprecated Since 2.6.0\r\n* @private\r\n*/\r\nvar Theme = exports.Theme = {};\r\n\r\n/**\r\n* @method\r\n* @deprecated Since 2.6.0\r\n* @private\r\n*/\r\nexports.registerTheme = function (ns) {\r\n\tutils.mixin(Theme, ns);\r\n};\r\n\r\n/**\r\n* @method\r\n* @private\r\n*/\r\nexports.createFromKind = function (nom, param) {\r\n\tvar Ctor = nom && constructorForKind(nom);\r\n\tif (Ctor) {\r\n\t\treturn new Ctor(param);\r\n\t}\r\n};\r\n","var\r\n    kind = require('./kind'),\r\n    utils = require('./utils'),\r\n    scene = require('./scene');\r\n\r\nvar SceneSupport = {\r\n\r\n    create: kind.inherit(function(sup) {\r\n        var sctor;\r\n        return function() {\r\n            sup.apply(this, arguments);\r\n            sctor = this.scene;\r\n            if (sctor) {\r\n                sctor = scene(this, sctor);\r\n                utils.mixin(sctor, this.sceneOptions);\r\n                this.scene = sctor;\r\n            }\r\n        };\r\n    })\r\n};\r\n\r\nmodule.exports = SceneSupport;\r\n","var\r\n    kind = require('./kind'),\r\n    utils = require('./utils'),\r\n    scene = require('./scene');\r\n\r\nvar SceneSupport = {\r\n\r\n    create: kind.inherit(function(sup) {\r\n        var sctor;\r\n        return function() {\r\n            sup.apply(this, arguments);\r\n            sctor = this.scene;\r\n            if (sctor) {\r\n                sctor = scene(this, sctor);\r\n                utils.mixin(sctor, this.sceneOptions);\r\n                this.scene = sctor;\r\n            }\r\n        };\r\n    })\r\n};\r\n\r\nmodule.exports = SceneSupport;\r\n","/**\r\n* Exports the {@link module:enyo/Control/floatingLayer~FloatingLayer} singleton instance.\r\n* @module enyo/Control/floatingLayer\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind'),\r\n\tplatform = require('../platform');\r\n\r\nmodule.exports = function (Control) {\r\n\t/**\r\n\t* {@link module:enyo/Control/floatingLayer~FloatingLayer} is a\r\n\t* [control]{@link module:enyo/Control~Control} that provides a layer for controls that should be\r\n\t* displayed above an [application]{@link module:enyo/Application~Application}. The `floatingLayer`\r\n\t* singleton can be set as a control's parent to have the control float above the application, e.g.:\r\n\t*\r\n\t* ```\r\n\t* var floatingLayer = require('enyo/floatingLayer');\r\n\t* ...\r\n\t* create: kind.inherit(function (sup) {\r\n\t*\treturn function() {\r\n\t*\t\tsup.apply(this, arguments);\r\n\t*\t\tthis.setParent(floatingLayer);\r\n\t*\t}\r\n\t* });\r\n\t* ```\r\n\t*\r\n\t* Note: `FloatingLayer` is not meant to be instantiated by users.\r\n\t*\r\n\t* @class FloatingLayer\r\n\t* @extends module:enyo/Control~Control\r\n\t* @ui\r\n\t* @protected\r\n\t*/\r\n\tvar FloatingLayer = kind(\r\n\t\t/** @lends module:enyo/Control/floatingLayer~FloatingLayer.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\tkind: Control,\r\n\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\tclasses: 'enyo-fit enyo-clip enyo-untouchable',\r\n\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\taccessibilityPreventScroll: true,\r\n\r\n\t\t/**\r\n\t\t* @method\r\n\t\t* @private\r\n\t\t*/\r\n\t\tcreate: kind.inherit(function (sup) {\r\n\t\t\treturn function() {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t\tthis.setParent(null);\r\n\r\n\t\t\t\tif (platform.ie < 11) {\r\n\t\t\t\t\tthis.removeClass('enyo-fit');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t/**\r\n\t\t* Detects when [node]{@glossary Node} is detatched due to `document.body` being stomped.\r\n\t\t*\r\n\t\t* @method\r\n\t\t* @private\r\n\t\t*/\r\n\t\thasNode: kind.inherit(function (sup) {\r\n\t\t\treturn function() {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t\tif (this.node && !this.node.parentNode) {\r\n\t\t\t\t\tthis.teardownRender();\r\n\t\t\t\t}\r\n\t\t\t\treturn this.node;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t/**\r\n\t\t* @method\r\n\t\t* @private\r\n\t\t*/\r\n\t\trender: kind.inherit(function (sup) {\r\n\t\t\treturn function() {\r\n\t\t\t\tthis.parentNode = document.body;\r\n\t\t\t\treturn sup.apply(this, arguments);\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\tgenerateInnerHtml: function () {\r\n\t\t\treturn '';\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\tbeforeChildRender: function () {\r\n\t\t\tif (!this.hasNode()) {\r\n\t\t\t\tthis.render();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\tteardownChildren: function () {\r\n\t\t}\r\n\t});\r\n\r\n\treturn FloatingLayer;\r\n};","/**\r\n* Exports the {@link module:enyo/EventEmitter~EventEmitter} mixin.\r\n* @module enyo/EventEmitter\r\n*/\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\teventTable = {};\r\n\r\n/**\r\n* @private\r\n*/\r\nfunction addListener(obj, e, fn, ctx) {\r\n\r\n\tobj.listeners().push({\r\n\t\tevent: e,\r\n\t\tmethod: fn,\r\n\t\tctx: ctx || obj\r\n\t});\r\n\r\n\treturn obj;\r\n}\r\n\r\n/**\r\n* @private\r\n*/\r\nfunction removeListener(obj, e, fn, ctx) {\r\n\tvar listeners = obj.listeners()\r\n\t\t, idx;\r\n\r\n\tif (listeners.length) {\r\n\t\tidx = listeners.findIndex(function (ln) {\r\n\t\t\treturn ln.event == e && ln.method === fn && (ctx? ln.ctx === ctx: true);\r\n\t\t});\r\n\t\tidx >= 0 && listeners.splice(idx, 1);\r\n\t}\r\n\r\n\treturn obj;\r\n}\r\n\r\n/**\r\n* @private\r\n*/\r\nfunction emit(obj, args) {\r\n\tvar len = args.length\r\n\t\t, e = args[0]\r\n\t\t, listeners = obj.listeners(e);\r\n\r\n\tif (listeners.length) {\r\n\t\tif (len > 1) {\r\n\t\t\targs = utils.toArray(args);\r\n\t\t\targs.unshift(obj);\r\n\t\t} else {\r\n\t\t\targs = [obj, e];\r\n\t\t}\r\n\r\n\t\tfor (var i=0, ln; (ln=listeners[i]); ++i) ln.method.apply(ln.ctx, args);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n/**\r\n* {@link module:enyo/EventEmitter~EventEmitter} is a {@glossary mixin} that adds support for\r\n* registered {@glossary event} listeners. These events are different from\r\n* bubbled events (e.g., DOM events and [handlers]{@link module:enyo/Component~Component#handlers}).\r\n* When [emitted]{@link module:enyo/EventEmitter~EventEmitter.emit}, these events **do not bubble**\r\n* and will only be handled by [registered listeners]{@link module:enyo/EventEmitter~EventEmitter.on}.\r\n*\r\n* @mixin\r\n* @public\r\n*/\r\nvar EventEmitter = {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'EventEmitter',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_silenced: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_silenceCount: 0,\r\n\r\n\t/**\r\n\t* Disables propagation of [events]{@glossary event}. This is a counting\r\n\t* semaphor and [unsilence()]{@link module:enyo/EventEmitter~EventEmitter.unsilence} will need to\r\n\t* be called the same number of times that this method is called.\r\n\t*\r\n\t* @see module:enyo/EventEmitter~EventEmitter.unsilence\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tsilence: function () {\r\n\t\tthis._silenced = true;\r\n\t\tthis._silenceCount++;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Enables propagation of [events]{@glossary event}. This is a counting\r\n\t* semaphor and this method will need to be called the same number of times\r\n\t* that [silence()]{@link module:enyo/EventEmitter~EventEmitter.silence} was called.\r\n\t*\r\n\t* @see module:enyo/EventEmitter~EventEmitter.silence\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tunsilence: function (force) {\r\n\t\tif (force) {\r\n\t\t\tthis._silenceCount = 0;\r\n\t\t\tthis._silenced = false;\r\n\t\t} else {\r\n\t\t\tthis._silenceCount && this._silenceCount--;\r\n\t\t\tthis._silenceCount === 0 && (this._silenced = false);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether the callee is currently [silenced]{@link module:enyo/EventEmitter~EventEmitter.silence}.\r\n\t*\r\n\t* @returns {Boolean} Whether or not the callee is\r\n\t*\t[silenced]{@link module:enyo/EventEmitter~EventEmitter.silence}.\r\n\t* @public\r\n\t*/\r\n\tisSilenced: function () {\r\n\t\treturn this._silenced;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated Replaced by {@link module:enyo/EventEmitter~EventEmitter.on}\r\n\t* @public\r\n\t*/\r\n\taddListener: function (e, fn, ctx) {\r\n\t\treturn addListener(this, e, fn, ctx);\r\n\t},\r\n\r\n\t/**\r\n\t* Adds an {@glossary event} listener. Until [removed]{@link module:enyo/EventEmitter~EventEmitter.off},\r\n\t* this listener will fire every time the event is\r\n\t* [emitted]{@link module:enyo/EventEmitter~EventEmitter.emit}.\r\n\t*\r\n\t* @param {String} e - The {@glossary event} name to register for.\r\n\t* @param {Function} fn - The listener.\r\n\t* @param {Object} [ctx] - The optional context under which to execute the listener.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\ton: function (e, fn, ctx) {\r\n\t\treturn addListener(this, e, fn, ctx);\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated Replaced by {@link module:enyo/EventEmitter~EventEmitter.off}\r\n\t* @public\r\n\t*/\r\n\tremoveListener: function (e, fn, ctx) {\r\n\t\treturn removeListener(this, e, fn, ctx);\r\n\t},\r\n\r\n\t/**\r\n\t* Removes an {@glossary event} listener.\r\n\t*\r\n\t* @param {String} e - The {@glossary event} name.\r\n\t* @param {Function} fn - The listener to unregister.\r\n\t* @param {Object} [ctx] - If the listener was registered with a context, it\r\n\t* should be provided when unregistering as well.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\toff: function (e, fn, ctx) {\r\n\t\treturn removeListener(this, e, fn, ctx);\r\n\t},\r\n\r\n\t/**\r\n\t* Removes all listeners, or all listeners for a given {@glossary event}.\r\n\t*\r\n\t* @param {String} [e] - The optional target {@glossary event}.\r\n\t* @returns {this} The callee for chaining.\r\n\t*/\r\n\tremoveAllListeners: function (e) {\r\n\t\tvar euid = this.euid\r\n\t\t\t, loc = euid && eventTable[euid];\r\n\r\n\t\tif (loc) {\r\n\t\t\tif (e) {\r\n\t\t\t\teventTable[euid] = loc.filter(function (ln) {\r\n\t\t\t\t\treturn ln.event != e;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdelete eventTable[euid];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Primarily intended for internal use, this method returns an immutable copy\r\n\t* of all listeners, or all listeners for a particular {@glossary event} (if any).\r\n\t*\r\n\t* @param {String} [e] - The targeted {@glossary event}.\r\n\t* @returns {Object[]} Event listeners are stored in [hashes]{@glossary Object}.\r\n\t*\tThe return value will be an [array]{@glossary Array} of these hashes\r\n\t* if any listeners exist.\r\n\t* @public\r\n\t*/\r\n\tlisteners: function (e) {\r\n\t\tvar euid = this.euid || (this.euid = utils.uid('e'))\r\n\t\t\t, loc = eventTable[euid] || (eventTable[euid] = []);\r\n\r\n\t\treturn !e? loc: loc.filter(function (ln) {\r\n\t\t\treturn ln.event == e || ln.event == '*';\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated Replaced by {@link module:enyo/EventEmitter~EventEmitter.emit}\r\n\t* @public\r\n\t*/\r\n\ttriggerEvent: function () {\r\n\t\treturn !this._silenced? emit(this, arguments): false;\r\n\t},\r\n\r\n\t/**\r\n\t* Emits the named {@glossary event}. All subsequent arguments will be passed\r\n\t* to the event listeners.\r\n\t*\r\n\t* @param {String} e - The {@glossary event} to emit.\r\n\t* @param {...*} args All subsequent arguments will be passed to the event listeners.\r\n\t* @returns {Boolean} Whether or not any listeners were notified.\r\n\t* @public\r\n\t*/\r\n\temit: function () {\r\n\t\treturn !this._silenced? emit(this, arguments): false;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.removeAllListeners();\r\n\t\t};\r\n\t})\r\n};\r\n\r\nmodule.exports = EventEmitter;\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Source~Source} kind.\r\n* @module enyo/Source\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils'),\r\n\tlogger = require('./logger');\r\n\r\nvar sources = {};\r\n\r\n/**\r\n* This is an abstract base class. A [source]{@link module:enyo/Source~Source} is a communication\r\n* layer used by data layer [kinds]{@glossary kind} to retrieve and persist data and\r\n* application state via its abstract API methods.\r\n*\r\n* @class Source\r\n* @public\r\n*/\r\nvar Source = module.exports = kind(\r\n\t/** @lends module:enyo/Source~Source.prototype */ {\r\n\r\n\tname: 'enyo.Source',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: null,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\r\n\r\n\t/**\r\n\t* When initialized, the source should be passed properties to set on itself.\r\n\t* These properties should include the name by which it will be referenced in\r\n\t* the application.\r\n\t*\r\n\t* @param {Object} [props] - The properties to set on itself.\r\n\t* @public\r\n\t*/\r\n\tconstructor: function (props) {\r\n\t\tif (props) this.importProps(props);\r\n\t\t// automatic coersion of name removing prefix\r\n\t\tthis.name || (this.name = this.kindName.replace(/^(.*)\\./, ''));\r\n\t\t// now add to the global registry of sources\r\n\t\tsources[this.name] = this;\r\n\t},\r\n\r\n\t/**\r\n\t* Overload this method to handle retrieval of data. This method should accept an options\r\n\t* [hash]{@glossary Object} with additional configuration properties, including `success`\r\n\t* and `error` callbacks to handle the result.\r\n\t*\r\n\t* @virtual\r\n\t* @param {(module:enyo/Model~Model|module:enyo/Collection~Collection)} model The [model]{@link module:enyo/Model~Model} or\r\n\t*\t[collection]{@link module:enyo/Collection~Collection} to be retrieved.\r\n\t* @param {Object} opts - The configuration options [hash]{@glossary Object}, including\r\n\t*\t`success` and `error` callbacks.\r\n\t*/\r\n\tfetch: function (model, opts) {\r\n\t\t//\r\n\t},\r\n\r\n\t/**\r\n\t* Overload this method to handle persisting of data. This method should accept an options\r\n\t* [hash]{@glossary Object} with additional configuration properties, including `success`\r\n\t* and `error` callbacks to handle the result.\r\n\t*\r\n\t* @virtual\r\n\t* @param {(module:enyo/Model~Model|module:enyo/Collection~Collection)} model The [model]{@link module:enyo/Model~Model} or\r\n\t*\t[collection]{@link module:enyo/Collection~Collection} to be persisted.\r\n\t* @param {Object} opts - The configuration options [hash]{@glossary Object}, including\r\n\t*\t`success` and `error` callback.\r\n\t*/\r\n\tcommit: function (model, opts) {\r\n\t\t//\r\n\t},\r\n\r\n\t/**\r\n\t* Overload this method to handle deletion of data. This method should accept an options\r\n\t* [hash]{@glossary Object} with additional configuration properties, including `success`\r\n\t* and `error` callbacks to handle the result. If called without parameters, it will\r\n\t* instead destroy itself and be removed from [sources]{@link module:enyo/Source~Source.sources}, rendering\r\n\t* itself unavailable for further operations.\r\n\t*\r\n\t* @param {(module:enyo/Model~Model|module:enyo/Collection~Collection)} model The [model]{@link module:enyo/Model~Model} or\r\n\t*\t[collection]{@link module:enyo/Collection~Collection} to be deleted.\r\n\t* @param {Object} opts - The configuration options [hash]{@glossary Object}, including\r\n\t*\t`success` and `error` callbacks.\r\n\t*/\r\n\tdestroy: function (model, opts) {\r\n\r\n\t\t// if called with no parameters we actually just breakdown the source and remove\r\n\t\t// it as being available\r\n\t\tif (!arguments.length) {\r\n\t\t\tsources[this.name] = null;\r\n\t\t\tthis.name = null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Overload this method to handle querying of data based on the passed-in constructor. This\r\n\t* method should accept an options [hash]{@glossary Object} with additional configuration\r\n\t* properties, including `success` and `error` callbacks to handle the result.\r\n\t*\r\n\t* @virtual\r\n\t* @param {Function} ctor - The constructor for the [kind]{@glossary kind} of\r\n\t*\t{@link module:enyo/Model~Model} or {@link module:enyo/Collection~Collection} to be queried.\r\n\t* @param {Object} opts - The configuration options [hash]{@glossary Object}, including\r\n\t*\t`success` and `error` callbacks.\r\n\t*/\r\n\tfind: function (ctor, opts) {\r\n\t\t//\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\timportProps: function (props) {\r\n\t\tprops && utils.mixin(this, props);\r\n\t},\r\n\r\n\t/**\r\n\t* @see module:enyo/utils#getPath\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tget: utils.getPath,\r\n\r\n\t/**\r\n\t* @see module:enyo/utils#setPath\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tset: utils.setPath\r\n});\r\n\r\n/**\r\n* Creates an instance of {@link module:enyo/Source~Source} with the given properties. These\r\n* properties should include a `kind` property with the name of the\r\n* [kind]{@glossary kind} of source and a `name` for the instance. This static\r\n* method is also available on all [subkinds]{@glossary subkind} of\r\n* `enyo/Source`. The instance will automatically be added to the\r\n* [sources]{@link module:enyo/Source~Source.sources} [object]{@glossary Object} and may be\r\n* referenced by its `name`.\r\n*\r\n* @name module:enyo/Source~Source.create\r\n* @static\r\n* @method\r\n* @param {Object} props - The properties to pass to the constructor for the requested\r\n*\t[kind]{@glossary kind} of [source]{@link module:enyo/Source~Source}.\r\n* @returns {module:enyo/Source~Source} An instance of the requested kind of source.\r\n* @public\r\n*/\r\nSource.create = function (props) {\r\n\tvar Ctor = (props && props.kind) || this;\r\n\r\n\tif (typeof Ctor == 'string') Ctor = kind.constructorForKind(Ctor);\r\n\r\n\treturn new Ctor(props);\r\n};\r\n\r\n/**\r\n* @name module:enyo/Source~Source.concat\r\n* @static\r\n* @method\r\n* @private\r\n*/\r\nSource.concat = function (ctor, props) {\r\n\r\n\t// force noDefer so that we can actually set this method on the constructor\r\n\tif (props) props.noDefer = true;\r\n\r\n\tctor.create = Source.create;\r\n};\r\n\r\n/**\r\n* @name module:enyo/Source~Source.execute\r\n* @static\r\n* @method\r\n* @private\r\n*/\r\nSource.execute = function (action, model, opts) {\r\n\tvar source = opts.source || model.source,\r\n\r\n\t\t// we need to be able to bind the success and error callbacks for each of the\r\n\t\t// sources we'll be using\r\n\t\toptions = utils.clone(opts, true),\r\n\t\tnom = source,\r\n\t\tmsg,\r\n\t\tret;\r\n\r\n\tif (source) {\r\n\r\n\t\t// if explicitly set to true then we need to use all available sources in the\r\n\t\t// application\r\n\t\tif (source === true) {\r\n\r\n\t\t\tfor (nom in sources) {\r\n\t\t\t\tsource = sources[nom];\r\n\t\t\t\tif (source[action]) {\r\n\r\n\t\t\t\t\t// bind the source name to the success and error callbacks\r\n\t\t\t\t\toptions.success = opts.success.bind(null, nom);\r\n\t\t\t\t\toptions.error = opts.error.bind(null, nom);\r\n\r\n\t\t\t\t\tret = source[action](model, options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if it is an array of specific sources to use we, well, will only use those!\r\n\t\telse if (source instanceof Array) {\r\n\t\t\tvar i,\r\n\t\t\t\tsrc;\r\n\r\n\t\t\tret = [];\r\n\r\n\t\t\tfor (i = 0; i < source.length; i++) {\r\n\t\t\t\tnom = source[i];\r\n\t\t\t\tsrc = typeof nom == 'string' ? sources[nom] : nom;\r\n\r\n\t\t\t\tif (src && src[action]) {\r\n\t\t\t\t\t// bind the source name to the success and error callbacks\r\n\t\t\t\t\toptions.success = opts.success.bind(null, src.name);\r\n\t\t\t\t\toptions.error = opts.error.bind(null, src.name);\r\n\r\n\t\t\t\t\tret.push(src[action](model, options));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if it is an instance of a source\r\n\t\telse if (source instanceof Source && source[action]) {\r\n\r\n\t\t\t// bind the source name to the success and error callbacks\r\n\t\t\toptions.success = opts.success.bind(null, source.name);\r\n\t\t\toptions.error = opts.error.bind(null, source.name);\r\n\r\n\t\t\tret = source[action](model, options);\r\n\t\t}\r\n\r\n\t\t// otherwise only one was specified and we attempt to use that\r\n\t\telse if ((source = sources[nom]) && source[action]) {\r\n\r\n\t\t\t// bind the source name to the success and error callbacks\r\n\t\t\toptions.success = opts.success.bind(null, nom);\r\n\t\t\toptions.error = opts.error.bind(null, nom);\r\n\r\n\t\t\tret = source[action](model, options);\r\n\t\t}\r\n\r\n\t\t// we could not resolve the requested source\r\n\t\telse {\r\n\t\t\tmsg = 'enyo.Source.execute(): requested source(s) could not be found for ' +\r\n\t\t\t\tmodel.kindName + '.' + action + '()';\r\n\r\n\t\t\tlogger.warn(msg);\r\n\r\n\t\t\t// we need to fail the attempt and let it be handled\r\n\t\t\topts.error(nom ? typeof nom == 'string' ? nom : nom.name : 'UNKNOWN', msg);\r\n\t\t}\r\n\t} else {\r\n\t\tmsg = 'enyo.Source.execute(): no source(s) provided for ' + model.kindName + '.' +\r\n\t\t\taction + '()';\r\n\r\n\t\tlogger.warn(msg);\r\n\r\n\t\t// we need to fail the attempt and let it be handled\r\n\t\topts.error(nom ? typeof nom == 'string' ? nom : nom.name : 'UNKNOWN', msg);\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n* All of the known, instanced [sources]{@link module:enyo/Source~Source}, by name.\r\n* @name module:enyo/Source~Source.sources\r\n* @type {Object}\r\n* @public\r\n* @readonly\r\n*/\r\nSource.sources = sources;\r\n\r\n","require('enyo');\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\nvar\r\n\tVerticalDelegate = require('./VerticalDelegate');\r\n\r\n/**\r\n* This is a {@glossary delegate} (strategy) used by {@link module:enyo/DataGridList~DataGridList}\r\n* for vertically-oriented lists. This is used by all lists for this strategy; it does\r\n* not get copied, but is called directly from the list. It is only available to\r\n* `enyo.DataGridList`.\r\n*\r\n* @module enyo/VerticalGridDelegate\r\n* @private\r\n*/\r\nvar p = utils.clone(VerticalDelegate);\r\nkind.extendMethods(p, {\r\n\t/** @lends enyo/VerticalGridDelegate */\r\n\r\n\t/**\r\n\t* Once the list is initially rendered, it will generate its [scroller]{@link module:enyo/Scroller~Scroller}\r\n\t* (so we know that is available). Now we need to cache our initial size values and apply\r\n\t* them to our pages individually.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: function (list) {\r\n\t\t// get our initial sizing cached now since we should actually have\r\n\t\t// bounds at this point\r\n\t\tthis.updateMetrics(list);\r\n\t\t// calc offset of pages to scroller client\r\n\t\tthis.calcScrollOffset(list);\r\n\t\t// now if we already have a length then that implies we have a controller\r\n\t\t// and that we have data to render at this point, otherwise we don't\r\n\t\t// want to do any more initialization\r\n\t\tif (list.collection && list.collection.length) { this.reset(list); }\r\n\t},\r\n\r\n\t/**\r\n\t* Resets the page, setting `canAddResetClass` flag if appropriate.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\treset: kind.inherit(function (sup) {\r\n\t\treturn function (list) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tif (list.hasReset && !list.hasClass('reset')) {\r\n\t\t\t\tlist.canAddResetClass = true;\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Unlike in {@link module:enyo/DataList~DataList}, we can calculate the page height since we know\r\n\t* the structure and layout of the page precisely.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tpageHeight: function (list, page) {\r\n\t\tvar n  = page.node || page.hasNode(),\r\n\t\t\ta  = n.children.length,\r\n\t\t\tmx = list.metrics.pages[page.index], s;\r\n\t\ts = (Math.floor(a/list.columns)+(a%list.columns? 1: 0))*(list.tileHeight+list.spacing);\r\n\t\tn.style.height = s + 'px';\r\n\t\tmx.height = s;\r\n\t\treturn s;\r\n\t},\r\n\r\n\t/**\r\n\t* Generates the markup for the page content.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tgeneratePage: kind.inherit(function (sup) {\r\n\t\treturn function (list, page) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.layout(list, page);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Returns the calculated width for the given page.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tpageWidth: function (list, page) {\r\n\t\tvar s  = this.width(list),\r\n\t\t\tn  = page.node || page.hasNode(),\r\n\t\t\tmx = list.metrics.pages[page.index];\r\n\t\tn.style.width = s + 'px';\r\n\t\tmx.width = s;\r\n\t\treturn s;\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the default page size.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdefaultPageSize: function (list) {\r\n\t\treturn (Math.ceil(this.controlsPerPage(list)/list.columns) * (list.tileHeight+list.spacing));\r\n\t},\r\n\r\n\t/**\r\n\t* Calculates metric values required for the absolute positioning and scaling of the\r\n\t* children in the list.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tupdateMetrics: function (list) {\r\n\t\tthis.updateBounds(list);\r\n\t\tthis.calculateMetrics(list);\r\n\t},\r\n\r\n\tcalculateMetrics: function (list, width) {\r\n\t\tvar w  = (width === undefined) ? this.width(list) : width,\r\n\t\t\ts  = list.spacing,\r\n\t\t\tm  = list.minWidth,\r\n\t\t\th  = list.minHeight;\r\n\t\t// the number of columns is the ratio of the available width minus the spacing\r\n\t\t// by the minimum tile width plus the spacing\r\n\t\tlist.columns    = Math.max(Math.floor((w-s) / (m+s)), 1);\r\n\t\t// the actual tile width is a ratio of the remaining width after all columns\r\n\t\t// and spacing are accounted for and the number of columns that we know we should have\r\n\t\tlist.tileWidth  = ((w-(s*(list.columns+1)))/list.columns);\r\n\t\t// the actual tile height is related to the tile width\r\n\t\tlist.tileHeight = (h*(list.tileWidth/m));\r\n\t\t// unfortunately this forces us to recalculate the number of controls that can\r\n\t\t// be used for each page\r\n\t\tthis.controlsPerPage(list, true);\r\n\t\t// Compute first and last row index bounds\r\n\t\tthis.updateIndexBound(list);\r\n\t},\r\n\r\n\t/**\r\n\t* Calculates index bound that is required for adjusting page position. Can be called\r\n\t* after the [DataGridList]{@link module:enyo/DataGridList~DataGridList} is rendered.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tupdateIndexBound: function(list) {\r\n\t\tif (!list.collection) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// If user calls this method before DataGridList is rendered\r\n\t\tif (list.boundsCache === undefined) {\r\n\t\t\tthis.updateMetrics(list);\r\n\t\t}\r\n\r\n\t\tlist.indexBoundFirstRow = list.columns;\r\n\t\tlist.indexBoundLastRow = (Math.ceil(list.collection.length / list.columns) - 1) * list.columns - 1;\r\n\t},\r\n\r\n\t/**\r\n\t* Ensures that index bound is maintained and up-to-date as\r\n\t* [models]{@link module:enyo/Model~Model} are added.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tmodelsAdded: kind.inherit(function (sup) {\r\n\t\treturn function (list, props) {\r\n\t\t\tthis.calculateMetrics(list);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Ensures that index bound is maintained and up-to-date as\r\n\t* [models]{@link module:enyo/Model~Model} are removed.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tmodelsRemoved: kind.inherit(function (sup) {\r\n\t\treturn function (list, props) {\r\n\t\t\tthis.calculateMetrics(list);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\r\n\t/**\r\n\t* This method calculates the number of [controls]{@link module:enyo/Control~Control} necessary\r\n\t* to fill a page. It inherits from the same method in the\r\n\t* [enyo/VerticalDelegate]{@link module:enyo/VerticalDelegate} module, extending\r\n\t* it to reflect the number of columns in the grid list.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcalculateControlsPerPage: kind.inherit(function (sup) {\r\n\t\treturn function(list) {\r\n\t\t\treturn sup.apply(this, arguments) * list.columns;\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tchildSize: function (list) {\r\n\t\t// currently DataGridList is only vertical\r\n\t\t/*jshint -W093 */\r\n\t\treturn (list.childSize = (list.tileHeight + list.spacing));\r\n\t},\r\n\r\n\t/**\r\n\t* Takes a given page and arbitrarily positions its children according to the pre-computed\r\n\t* metrics of the list.\r\n\r\n\t* TODO: This could be optimized to use requestAnimationFrame as well as render not by child\r\n\t* index but by row, thus cutting down some of the over-calculation when iterating over every\r\n\t* child.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tlayout: function (list, page) {\r\n\t\tif (list.canAddResetClass) {\r\n\t\t\tlist.addClass('reset');\r\n\t\t\tdelete list.canAddResetClass;\r\n\t\t}\r\n\t\tvar cc = list.columns,\r\n\t\t\ts  = list.spacing,\r\n\t\t\tw  = list.tileWidth,\r\n\t\t\th  = list.tileHeight,\r\n\t\t\tr  = 0,\r\n\t\t\tn  = page,\r\n\t\t\tcn = n.children, co;\r\n\t\tif (cn.length) {\r\n\t\t\tfor (var i=0, c; (c=cn[i]); ++i) {\r\n\t\t\t\t// the column\r\n\t\t\t\tco = i % cc;\r\n\t\t\t\tc.addStyles(\r\n\t\t\t\t\t'top: '    + Math.round(s  + (r  * (h+s))) + 'px; ' +\r\n\t\t\t\t\t(list.rtl ? 'right: ' : 'left: ') + Math.round(s  + (co * (w+s))) + 'px; ' +\r\n\t\t\t\t\t'width: '  + Math.round(w) +                 'px; ' +\r\n\t\t\t\t\t'height: ' + Math.round(h) +                 'px;'\r\n\t\t\t\t);\r\n\t\t\t\t// check if we need to increment the row\r\n\t\t\t\tif ((i+1) % cc === 0) { ++r; }\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Recalculates the buffer size based on the current metrics for the given list. This\r\n\t* may not be completely accurate until the final page is scrolled into view.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tadjustBuffer: function (list) {\r\n\t\tvar cs = this.childSize(list),\r\n\t\t\tcount = list.collection ? list.collection.length : 0,\r\n\t\t\tbs = 0, sp = list.psizeProp, ss = list.ssizeProp,\r\n\t\t\tn = list.$.buffer.node || list.$.buffer.hasNode();\r\n\t\tif (n) {\r\n\t\t\tbs = Math.ceil(count / list.columns) * cs;\r\n\t\t\tlist.bufferSize = bs;\r\n\t\t\tn.style[sp] = bs + 'px';\r\n\t\t\tn.style[ss] = this[ss](list) + 'px';\r\n\t\t\tlist.$.scroller.remeasure();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* The delegate's `resize` {@glossary event} handler.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdidResize: function (list) {\r\n\t\t// store the previous stats for comparative purposes\r\n\t\tvar prev = list.boundsCache;\r\n\r\n\t\t// flag the list to have its bounds updated\r\n\t\tlist._updateBounds = true;\r\n\t\tthis.updateMetrics(list);\r\n\r\n\t\t// if no change it the viewport then we didn't update anything size-wise\r\n\t\t// and do not need to refresh at all\r\n\t\tif (\r\n\t\t\tprev.left   === list.boundsCache.left  &&\r\n\t\t\tprev.top    === list.boundsCache.top   &&\r\n\t\t\tprev.width  === list.boundsCache.width &&\r\n\t\t\tprev.height === list.boundsCache.height\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// it is necessary to update the content of the list according to our\r\n\t\t// new sizing\r\n\t\tthis.refresh(list);\r\n\t},\r\n\r\n\t/**\r\n\t* @see {@link module:enyo/VerticalDelegate#adjustIndex}\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tadjustIndex: kind.inherit(function (sup) {\r\n\t\treturn function (list, index, page, pageBounds, scrollBoundary, start) {\r\n\t\t\tvar idx = sup.apply(this, arguments),\r\n\t\t\t\tdelta = idx%list.columns;\r\n\r\n\t\t\treturn idx - delta + (start? 0 : list.columns - 1);\r\n\t\t};\r\n\t})\r\n}, true);\r\n\r\nmodule.exports = p;\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Layout~Layout} kind.\r\n* @module enyo/Layout\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind');\r\n\r\n/**\r\n* {@link module:enyo/Layout~Layout} is the base [kind]{@glossary kind} for layout\r\n* kinds. Layout kinds are used by {@link module:enyo/UiComponent~UiComponent}-based\r\n* [controls]{@link module:enyo/Control~Control} to allow for arranging of child controls by\r\n* setting the [layoutKind]{@link module:enyo/UiComponent~UiComponent#layoutKind} property.\r\n* \r\n* Derived kinds will usually provide their own\r\n* [layoutClass]{@link module:enyo/Layout~Layout#layoutClass} property to affect the CSS\r\n* rules used, and may also implement the [flow()]{@link module:enyo/Layout~Layout#flow}\r\n* and [reflow()]{@link module:enyo/Layout~Layout#reflow} methods. `flow()` is called\r\n* during control rendering, while `reflow()` is called when the associated\r\n* control is resized.\r\n*\r\n* @class Layout\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Layout~Layout.prototype */ {\r\n\r\n\tname: 'enyo.Layout',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: null,\r\n\r\n\t/** \r\n\t* CSS class that's added to the [control]{@link module:enyo/Control~Control} using this \r\n\t* [layout]{@link module:enyo/Layout~Layout} [kind]{@glossary kind}.\r\n\t*\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\tlayoutClass: '',\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: function (container) {\r\n\t\tthis.container = container;\r\n\t\tif (container) {\r\n\t\t\tcontainer.addClass(this.layoutClass);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdestroy: function () {\r\n\t\tif (this.container) {\r\n\t\t\tthis.container.removeClass(this.layoutClass);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* Called during static property layout (i.e., during rendering).\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tflow: function () {\r\n\t},\r\n\r\n\t/** \r\n\t* Called during dynamic measuring layout (i.e., during a resize).\r\n\t*\r\n\t* May short-circuit and return `true` if the layout needs to be\r\n\t* redone when the associated Control is next shown. This is useful\r\n\t* for cases where the Control itself has `showing` set to `true`\r\n\t* but an ancestor is hidden, and the layout is therefore unable to\r\n\t* get accurate measurements of the Control or its children.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\treflow: function () {\r\n\t}\r\n});\r\n","/**\r\n* Exports the {@link module:enyo/ApplicationSupport~ApplicationSupport} mixin.\r\n* @module enyo/ApplicationSupport\r\n*/\r\n\r\nrequire('enyo');\r\n\r\nvar kind = require('./kind');\r\n\r\n/**\r\n* An internally-used support {@glossary mixin} that is applied to all\r\n* [components]{@link module:enyo/Component~Component} of an {@link module:enyo/Application~Application} instance\r\n* (and to their components, recursively). This mixin adds an `app` property to\r\n* each component -- a local reference to the `Application` instance that\r\n* the component belongs to.\r\n* \r\n* @mixin\r\n* @protected\r\n*/\r\nvar ApplicationSupport = {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'ApplicationSupport',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tadjustComponentProps: kind.inherit(function (sup) {\r\n\t\treturn function (props) {\r\n\t\t\tprops.app = props.app || this.app;\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\t// release the reference to the application\r\n\t\t\tthis.app = null;\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t})\r\n\r\n};\r\n\r\nmodule.exports = ApplicationSupport;\r\n","/**\r\n* Exports the {@link module:enyo/ComponentBindingSupport~ComponentBindingSupport} mixin.\r\n* @module enyo/ComponentBindingSupport\r\n*/\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tkind = require('./kind');\r\n\r\n/**\r\n* An internally-used {@glossary mixin} applied to {@link module:enyo/Component~Component}\r\n* instances to better support [bindings]{@link module:enyo/Binding~Binding}.\r\n*\r\n* @mixin\r\n* @protected\r\n*/\r\nvar ComponentBindingSupport = {\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'ComponentBindingSupport',\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tadjustComponentProps: kind.inherit(function (sup) {\r\n\t\treturn function (props) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tprops.bindingTransformOwner || (props.bindingTransformOwner = this.getInstanceOwner());\r\n\t\t};\r\n\t})\r\n};\r\n\r\nmodule.exports = ComponentBindingSupport;\r\n","/**\r\n* Exports the {@link module:enyo/ComputedSupport~ComputedSupport} mixin.\r\n* @module enyo/ComputedSupport\r\n*/\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar extend = kind.statics.extend;\r\n\t\r\nkind.concatenated.push('computed');\r\n\r\nfunction getComputedValue (obj, path) {\r\n\tvar cache = obj._getComputedCache(path)\r\n\t\t, isCached = obj._isComputedCached(path);\r\n\t\r\n\t// in the end, for efficiency and completeness in other situations\r\n\t// it is better to know the returned value of all computed properties\r\n\t// but in cases where they are set as cached we will sometimes use\r\n\t// that value\r\n\tif (cache.dirty || cache.dirty === undefined) {\r\n\t\tisCached && (cache.dirty = false);\r\n\t\tcache.previous = cache.value;\r\n\t\tcache.value = obj[path]();\r\n\t}\r\n\t\r\n\treturn cache.value;\r\n}\r\n\r\nfunction queueComputed (obj, path) {\r\n\tvar queue = obj._computedQueue || (obj._computedQueue = [])\r\n\t\t, deps = obj._computedDependencies[path];\r\n\t\t\r\n\tif (deps) {\r\n\t\tfor (var i=0, dep; (dep=deps[i]); ++i) {\r\n\t\t\tif (!queue.length || -1 == queue.indexOf(dep)) queue.push(dep);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction flushComputed (obj) {\r\n\tvar queue = obj._computedQueue;\r\n\tobj._computedQueue = null;\r\n\tif (queue && obj.isObserving()) {\r\n\t\tfor (var i=0, ln; (ln=queue[i]); ++i) {\r\n\t\t\tobj.notify(ln, obj._getComputedCache(ln).value, getComputedValue(obj, ln));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n* A {@glossary mixin} that adds API methods to support\r\n* [computed properties]{@glossary computed_property}. Unlike other support mixins,\r\n* this mixin does not need to be explicitly included by a [kind]{@glossary kind}. If the\r\n* `computed` [array]{@glossary Array} is found in a kind definition, this mixin will\r\n* automatically be included.\r\n*\r\n* @mixin\r\n* @public\r\n*/\r\nvar ComputedSupport = {\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'ComputedSuport',\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_computedRecursion: 0,\r\n\t\r\n\t/**\r\n\t* Primarily intended for internal use, this method determines whether the\r\n\t* given path is a known [computed property]{@glossary computed_property}.\r\n\t*\r\n\t* @param {String} path - The property or path to test.\r\n\t* @returns {Boolean} Whether or not the `path` is a\r\n\t*\t[computed property]{@glossary computed_property}.\r\n\t* @public\r\n\t*/\r\n\tisComputed: function (path) {\r\n\t\t// if it exists it will be explicitly one of these cases and it is cheaper than hasOwnProperty\r\n\t\treturn this._computed && (this._computed[path] === true || this._computed[path] === false);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Primarily intended for internal use, this method determines whether the\r\n\t* given path is a known dependency of a\r\n\t* [computed property]{@glossary computed_property}.\r\n\t*\r\n\t* @param {String} path - The property or path to test.\r\n\t* @returns {Boolean} Whether or not the `path` is a dependency of a\r\n\t*\t[computed property]{@glossary computed_property}.\r\n\t* @public\r\n\t*/\r\n\tisComputedDependency: function (path) {\r\n\t\treturn !! (this._computedDependencies? this._computedDependencies[path]: false);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tget: kind.inherit(function (sup) {\r\n\t\treturn function (path) {\r\n\t\t\treturn this.isComputed(path)? getComputedValue(this, path): sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tset: kind.inherit(function (sup) {\r\n\t\treturn function (path) {\r\n\t\t\t// we do not accept parameters for computed properties\r\n\t\t\treturn this.isComputed(path)? this: sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tnotifyObservers: function () {\r\n\t\treturn this.notify.apply(this, arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tnotify: kind.inherit(function (sup) {\r\n\t\treturn function (path, was, is) {\r\n\t\t\tthis.isComputedDependency(path) && queueComputed(this, path);\r\n\t\t\tthis._computedRecursion++;\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis._computedRecursion--;\r\n\t\t\tthis._computedQueue && this._computedRecursion === 0 && flushComputed(this);\r\n\t\t\treturn this;\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_isComputedCached: function (path) {\r\n\t\treturn this._computed[path];\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_getComputedCache: function (path) {\r\n\t\tvar cache = this._computedCache || (this._computedCache = {});\r\n\t\treturn cache[path] || (cache[path] = {});\r\n\t}\r\n};\r\n\r\nmodule.exports = ComputedSupport;\r\n\r\n/*\r\n* Hijack the original so we can add additional default behavior.\r\n*/\r\nvar sup = kind.concatHandler;\r\n\r\n// @NOTE: It seems like a lot of work but it really won't happen that much and the more\r\n// we push to kind-time the better for initialization time\r\n\r\n/**\r\n* @private\r\n*/\r\nkind.concatHandler = function (ctor, props, instance) {\r\n\r\n\tsup.call(this, ctor, props, instance);\r\n\r\n\t// only matters if there are computed properties to manage\r\n\tif (props.computed) {\r\n\t\t\r\n\t\tvar proto = ctor.prototype || ctor\r\n\t\t\t, computed = proto._computed? Object.create(proto._computed): {}\r\n\t\t\t, dependencies = proto._computedDependencies? Object.create(proto._computedDependencies): {};\r\n\t\t\r\n\t\t// if it hasn't already been applied we need to ensure that the prototype will\r\n\t\t// actually have the computed support mixin present, it will not apply it more\r\n\t\t// than once to the prototype\r\n\t\textend(ComputedSupport, proto);\r\n\t\r\n\t\t// @NOTE: This is the handling of the original syntax provided for computed properties in 2.3.ish...\r\n\t\t// All we do here is convert it to a structure that can be used for the other scenario and preferred\r\n\t\t// computed declarations format\r\n\t\tif (!props.computed || !(props.computed instanceof Array)) {\r\n\t\t\t(function () {\r\n\t\t\t\tvar tmp = [], deps, name, conf;\r\n\t\t\t\t// here is the slow iteration over the properties...\r\n\t\t\t\tfor (name in props.computed) {\r\n\t\t\t\t\t// points to the dependencies of the computed method\r\n\t\t\t\t\tdeps = props.computed[name];\r\n\t\t\t\t\t/*jshint -W083 */\r\n\t\t\t\t\tconf = deps && deps.find(function (ln) {\r\n\t\t\t\t\t\t// we deliberately remove the entry here and forcibly return true to break\r\n\t\t\t\t\t\treturn typeof ln == 'object'? (utils.remove(deps, ln) || true): false;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t/*jshint +W083 */\r\n\t\t\t\t\t// create a single entry now for the method/computed with all dependencies\r\n\t\t\t\t\ttmp.push({method: name, path: deps, cached: conf? conf.cached: null});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// note that we only do this one so even for a mixin that is evaluated several\r\n\t\t\t\t// times this would only happen once\r\n\t\t\t\tprops.computed = tmp;\r\n\t\t\t}());\r\n\t\t}\r\n\t\t\r\n\t\tvar addDependency = function (path, dep) {\r\n\t\t\t// its really an inverse look at the original\r\n\t\t\tvar deps;\r\n\t\t\t\r\n\t\t\tif (dependencies[path] && !dependencies.hasOwnProperty(path)) dependencies[path] = dependencies[path].slice();\r\n\t\t\tdeps = dependencies[path] || (dependencies[path] = []);\r\n\t\t\tdeps.push(dep);\r\n\t\t};\r\n\t\t\r\n\t\t// now we handle the new computed properties the way we intended to\r\n\t\tfor (var i=0, ln; (ln=props.computed[i]); ++i) {\r\n\t\t\t// if the entry already exists we are merely updating whether or not it is\r\n\t\t\t// now cached\r\n\t\t\tcomputed[ln.method] = !! ln.cached;\r\n\t\t\t// we must now look to add an entry for any given dependencies and map them\r\n\t\t\t// back to the computed property they will trigger\r\n\t\t\t/*jshint -W083 */\r\n\t\t\tif (ln.path && ln.path instanceof Array) ln.path.forEach(function (dep) { addDependency(dep, ln.method); });\r\n\t\t\t/*jshint +W083 */\r\n\t\t\telse if (ln.path) addDependency(ln.path, ln.method);\r\n\t\t}\r\n\t\t\r\n\t\t// arg, free the key from the properties so it won't be applied later...\r\n\t\t// delete props.computed;\r\n\t\t// make sure to reassign the correct items to the prototype\r\n\t\tproto._computed = computed;\r\n\t\tproto._computedDependencies = dependencies;\r\n\t}\r\n};\r\n","require('enyo');\r\n\r\nvar\r\n\tutils = require('./utils'),\r\n\tkind = require('./kind');\r\nvar\r\n\tVerticalDelegate = require('./VerticalDelegate');\r\n\r\n/**\r\n* This is a [delegate]{@glossary delegate} (strategy) used by {@link module:enyo/DataList~DataList}\r\n* for horizontally-oriented lists. This is used by all lists for this strategy;\r\n* it does not get copied, but is called directly from the list.\r\n*\r\n* Note that this is based on the [vertical delegate]{@link module:enyo/VerticalDelegate}\r\n* and shares most of that delegate's logic. Overloads are implemented only where necessary.\r\n*\r\n* @module enyo/HorizontalDelegate\r\n* @private\r\n*/\r\nvar p = utils.clone(VerticalDelegate);\r\nkind.extendMethods(p, {\r\n\t/** @lends module:enyo/HorizontalDelegate */\r\n\r\n\t/**\r\n\t* Initializes the list, adding a class to modify the CSS properly and setting its\r\n\t* priority properties.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tinitList: kind.inherit(function (sup) {\r\n\t\treturn function (list) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t// add the class\r\n\t\t\tlist.addClass('horizontal');\r\n\t\t\t// set the priority properties\r\n\t\t\tlist.posProp   = list.rtl ? 'right' : 'left';\r\n\t\t\tlist.upperProp = 'left';\r\n\t\t\tlist.lowerProp = 'right';\r\n\t\t\tlist.psizeProp = 'width';\r\n\t\t\tlist.ssizeProp = 'height';\r\n\t\t\t// set the scroller options\r\n\t\t\tvar so         = list.scrollerOptions? (list.scrollerOptions = utils.clone(list.scrollerOptions)): (list.scrollerOptions = {});\r\n\t\t\t// this is a horizontal list it cannot scroll vertically\r\n\t\t\tso.vertical    = 'hidden';\r\n\t\t\t// it has to scroll vertically one way or another\r\n\t\t\tso.horizontal  = so.horizontal == 'scroll'? 'scroll': 'auto';\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\tdestroyList: function (list) {\r\n\t\tif (list) {\r\n\t\t\tlist.removeClass('horizontal');\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t* Overload to retrieve the correct scroll position.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tgetScrollPosition: function (list) {\r\n\t\treturn list.$.scroller.getScrollLeft();\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the scroll position on the [scroller]{@link module:enyo/Scroller~Scroller}\r\n\t* owned by the given list.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tsetScrollPosition: function (list, pos) {\r\n\t\tlist.$.scroller.setScrollLeft(pos);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Overload to ensure we arbitrarily resize the active container to the width of the buffer.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tadjustBuffer: kind.inherit(function (sup) {\r\n\t\treturn function (list) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tvar an = list.$.active.node || list.$.active.hasNode(),\r\n\t\t\t\tbs = list.bufferSize;\r\n\t\t\tif (an) {\r\n\t\t\t\tan.style.width = bs + 'px';\r\n\t\t\t}\r\n\t\t};\r\n\t})\r\n}, true);\r\n\r\nmodule.exports = p;\r\n","/**\r\n* Exports the {@link module:enyo/MixinSupport~MixinSupport} mixin.\r\n* @module enyo/MixinSupport\r\n*/\r\n\r\nrequire('enyo');\r\n\r\n\r\nvar\r\n\tutils = require('./utils'),\r\n\tkind = require('./kind'),\r\n\tlogger = require('./logger');\r\n\r\nkind.concatenated.push('mixins');\r\n\r\nvar sup = kind.statics.extend;\r\n\r\nvar extend = kind.statics.extend = function extend (args, target) {\r\n\tif (utils.isArray(args)) return utils.forEach(args, function (ln) { extend.call(this, ln, target); }, this);\r\n\tif (typeof args == 'string') apply(target || this.prototype, args);\r\n\telse {\r\n\t\tif (args.mixins) feature(target || this, args);\r\n\t\r\n\t\t// this allows for mixins to apply mixins which...is less than ideal but possible\r\n\t\tif (args.name) apply(target || this.prototype, args);\r\n\t\telse sup.apply(this, arguments);\r\n\t}\r\n};\r\n\r\n/*\r\n* Applies, with safeguards, a given mixin to an object.\r\n*/\r\nfunction apply (proto, props) {\r\n\tvar applied = proto._mixins? (proto._mixins = proto._mixins.slice()): (proto._mixins = [])\r\n\t\t, name = utils.isString(props)? props: props.name\r\n\t\t, idx = utils.indexOf(name, applied);\r\n\tif (idx < 0) {\r\n\t\tname == props && (props = utils.getPath(name));\r\n\t\t// if we could not resolve the requested mixin (should never happen)\r\n\t\t// we throw a simple little error\r\n\t\t// @TODO: Normalize error format\r\n\t\t!props && logger.error('Could not find the mixin ' + name);\r\n\t\t\r\n\t\t// it should be noted that this ensures it won't recursively re-add the same mixin but\r\n\t\t// since it is possible for mixins to apply mixins the names will be out of order\r\n\t\t// this name is pushed on but the nested mixins are applied before this one\r\n\t\tname && applied.push(name);\r\n\t\t\r\n\t\tprops = utils.clone(props);\r\n\t\t\r\n\t\t// we need to temporarily move the constructor if it has one so it\r\n\t\t// will override the correct method - this is a one-time permanent\r\n\t\t// runtime operation so subsequent additions of the mixin don't require\r\n\t\t// it again\r\n\t\tif (props.hasOwnProperty('constructor')) {\r\n\t\t\tprops._constructor = props.constructor;\r\n\t\t\tdelete props.constructor;\r\n\t\t}\r\n\t\t\r\n\t\tdelete props.name;\r\n\t\textend(props, proto);\r\n\t\t\r\n\t\t// now put it all back the way it was\r\n\t\tprops.name = name;\r\n\t}\r\n}\r\n\r\nfunction feature (ctor, props) {\r\n\tif (props.mixins) {\r\n\t\tvar proto = ctor.prototype || ctor\r\n\t\t\t, mixins = props.mixins;\r\n\t\t\r\n\t\t// delete props.mixins;\r\n\t\t// delete proto.mixins;\r\n\t\t\r\n\t\tproto._mixins && (proto._mixins = proto._mixins.slice());\r\n\t\tutils.forEach(mixins, function (ln) { apply(proto, ln); });\r\n\t}\r\n}\r\n\r\nkind.features.push(feature);\r\n\r\n/**\r\n* An internally-used support {@glossary mixin} that adds API methods to aid in\r\n* using and applying mixins to [kinds]{@glossary kind}.\r\n*\r\n* @mixin\r\n* @protected\r\n*/\r\nvar MixinSupport = {\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'MixinSupport',\r\n\t\r\n\t/**\r\n\t* Extends the instance with the given properties.\r\n\t*\r\n\t* @param {Object} props - The property [hash]{@glossary Object} from which to extend\r\n\t*\tthe callee.\r\n\t*/\r\n\textend: function (props) {\r\n\t\tprops && apply(this, props);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\timportProps: kind.inherit(function (sup) {\r\n\t\treturn function (props) {\r\n\t\t\tprops && props.mixins && feature(this, props);\r\n\t\t\t\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t})\r\n};\r\n\r\nmodule.exports = MixinSupport;\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Binding~Binding} kind.\r\n* @module enyo/Binding\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar bindings = [];\r\n\r\nvar DIRTY_FROM = 0x01\r\n\t, DIRTY_TO = 0x02;\r\n\r\n/**\r\n* Used to determine if an {@link module:enyo/Binding~Binding} is actually ready.\r\n*\r\n* @private\r\n*/\r\nfunction ready (binding) {\r\n\tvar rdy = binding.ready;\r\n\t\r\n\tif (!rdy) {\r\n\t\t\r\n\t\tvar from = binding.from || '',\r\n\t\t\tto = binding.to || '',\r\n\t\t\tsource = binding.source,\r\n\t\t\ttarget = binding.target,\r\n\t\t\towner = binding.owner,\r\n\t\t\ttwoWay = !binding.oneWay,\r\n\t\t\ttoTarget;\r\n\t\t\r\n\t\tif (typeof from != 'string') from = '';\r\n\t\tif (typeof to != 'string') to = '';\r\n\t\t\r\n\t\tif (!source) {\r\n\t\t\t\r\n\t\t\t// the worst case scenario here is for backward compatibility purposes\r\n\t\t\t// we have to at least be able to derive the source via the from string\r\n\t\t\tif (from[0] == '^') {\r\n\t\t\t\t\r\n\t\t\t\t// this means we're reaching for a global\r\n\t\t\t\tvar fromParts = from.split('.');\r\n\t\t\t\tfrom = fromParts.pop();\r\n\t\t\t\tsource = utils.getPath.call(global, fromParts.join('.').slice(1));\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tsource = owner;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!target) {\r\n\t\t\t\r\n\t\t\t// same worst case as above, for backwards compatibility purposes\r\n\t\t\t// we have to at least be able to derive the target via the to string\r\n\t\t\tif (to[0] == '^') {\r\n\t\t\t\t\r\n\t\t\t\t// this means we're reaching for a global\r\n\t\t\t\tvar toParts = to.split('.');\r\n\t\t\t\tto = toParts.pop();\r\n\t\t\t\ttarget = utils.getPath.call(global, toParts.join('.').slice(1));\r\n\t\t\t} else {\r\n\t\t\t\ttarget = owner;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// we do this so we don't overwrite the originals in case we need to reset later\r\n\t\tbinding._target = target;\r\n\t\tbinding._source = source;\r\n\t\tbinding._from = from[0] == '.'? from.slice(1): from;\r\n\t\tbinding._to = to[0] == '.'? to.slice(1): to;\r\n\t\t\r\n\t\tif (!twoWay) {\r\n\t\t\ttoTarget = binding._to.split('.');\r\n\t\t\tif (toTarget.length > 2) {\r\n\t\t\t\ttoTarget.pop();\r\n\t\t\t\tbinding._toTarget = toTarget.join('.');\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// now our sanitization\r\n\t\trdy = !! (\r\n\t\t\t(source && (typeof source == 'object')) &&\r\n\t\t\t(target && (typeof target == 'object')) &&\r\n\t\t\t(from) &&\r\n\t\t\t(to)\r\n\t\t);\r\n\t}\r\n\t\r\n\t/*jshint -W093 */\r\n\treturn (binding.ready = rdy);\r\n\t/*jshint +W093 */\r\n}\r\n\r\n\r\n/**\r\n* @class PassiveBinding\r\n* @public\r\n*/\r\nvar PassiveBinding = kind(\r\n\t/** @lends module:enyo/Binding~PassiveBinding.prototype */ {\r\n\t\r\n\tname: 'enyo.PassiveBinding',\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: null,\r\n\t\r\n\t/**\r\n\t* This property is used extensively for various purposes within a\r\n\t* [binding]{@link module:enyo/Binding~Binding}. One primary purpose is to serve as a root\r\n\t* [object]{@glossary Object} from which to\tsearch for the binding's ends (the\r\n\t* [source]{@link module:enyo/Binding~Binding#source} and/or [target]{@link module:enyo/Binding~Binding#target}).\r\n\t* If the owner created the binding, it will also be responsible for destroying \r\n\t* it (automatically).\r\n\t*\r\n\t* @type {module:enyo/CoreObject~Object}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\towner: null,\r\n\t\r\n\t/**\r\n\t* Set this only to a reference for an [object]{@glossary Object} to use\r\n\t* as the source for the [binding]{@link module:enyo/Binding~Binding}. If this is not a\r\n\t* [bindable]{@link module:enyo/BindingSupport~BindingSupport} object, the source will be derived\r\n\t* from the [from]{@link module:enyo/Binding~Binding#from} property during initialization.\r\n\t* \r\n\t* @type {Object}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tsource: null,\r\n\t\r\n\t/**\r\n\t* Set this only to a reference for an [object]{@glossary Object} to use\r\n\t* as the target for the [binding]{@link module:enyo/Binding~Binding}. If this is not a\r\n\t* [bindable]{@link module:enyo/BindingSupport~BindingSupport} object, the target will will be\r\n\t* derived from the [to]{@link module:enyo/Binding~Binding#to} property during initialization.\r\n\t* \r\n\t* @type {Object}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\ttarget: null,\r\n\t\r\n\t/**\r\n\t* A path in which the property of the [source]{@link module:enyo/Binding~Binding#source} to\r\n\t* bind from may be found. If the source is explicitly provided and the path\r\n\t* is relative (i.e., it begins with a `\".\"`), it is relative to the source;\r\n\t* otherwise, it is relative to the [owner]{@link module:enyo/Binding~Binding#owner} of the\r\n\t* [binding]{@link module:enyo/Binding~Binding}. To have a binding be evaluated from the\r\n\t* global scope, prefix the path with a `\"^\"`. If the source and the `\"^\"`\r\n\t* are used in tandem, the `\"^\"` will be ignored and the path will be assumed\r\n\t* to be relative to the provided source.\r\n\t* \r\n\t* @type {String}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tfrom: null,\r\n\t\r\n\t/**\r\n\t* A path in which the property of the [target]{@link module:enyo/Binding~Binding#target} to\r\n\t* bind from may be found. If the target is explicitly provided and the path\r\n\t* is relative (i.e., it begins with a `\".\"`), it is relative to the target;\r\n\t* otherwise, it is relative to the owner of the [binding]{@link module:enyo/Binding~Binding}.\r\n\t* To have a binding be evaluated from the global scope, prefix the path with\r\n\t* a `\"^\"`. If the target and the `\"^\"` are used in tandem, the `\"^\"` will be\r\n\t* ignored and the path will be assumed to be relative to the provided target.\r\n\t* \r\n\t* @type {String}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tto: null,\r\n\r\n\t/**\r\n\t* Set this to a [function]{@glossary Function} or the name of a method on\r\n\t* the [owner]{@link module:enyo/Binding~Binding#owner} of this [binding]{@link module:enyo/Binding~Binding}.\r\n\t* The transform is used to programmatically modify the value being synchronized.\r\n\t* See {@link module:enyo/Binding~Binding~Transform} for detailed information on the parameters\r\n\t* that are available to `transform`.\r\n\t* \r\n\t* @type {module:enyo/Binding~Binding~Transform}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\ttransform: null,\r\n\t\r\n\t/**\r\n\t* Indicates whether the [binding]{@link module:enyo/Binding~Binding} is actually ready.\r\n\t* \r\n\t* @returns {Boolean} `true` if ready; otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\tisReady: function () {\r\n\t\treturn this.ready || ready(this);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Causes a single propagation attempt to fail. Typically not called outside\r\n\t* the scope of a [transform]{@link module:enyo/Binding~Binding#transform}.\r\n\t* \r\n\t* @public\r\n\t*/\r\n\tstop: function () {\r\n\t\tthis._stop = true;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Resets all properties to their original state.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\treset: function () {\r\n\t\tthis.ready = null;\r\n\t\tthis._source = this._target = this._to = this._from = this._toTarget = null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Rebuilds the entire [binding]{@link module:enyo/Binding~Binding} and synchronizes\r\n\t* the value from the [source]{@link module:enyo/Binding~Binding#source} to the\r\n\t* [target]{@link module:enyo/Binding~Binding#target}.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\trebuild: function () {\r\n\t\treturn this.reset().sync();\r\n\t},\r\n\t\r\n\t/**\r\n\t* Synchronizes values from the [source]{@link module:enyo/Binding~Binding#source} to the\r\n\t* [target]{@link module:enyo/Binding~Binding#target}. This usually will not need to be called manually.\r\n\t* [Two-way bindings]{@link module:enyo/Binding~Binding#oneWay} will automatically synchronize from the\r\n\t* target end once they are connected.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tsync: function () {\r\n\t\tvar source, target, from, to, xform, val;\r\n\r\n\t\tif (this.isReady()) {\r\n\t\t\tsource = this._source;\r\n\t\t\ttarget = this._target;\r\n\t\t\tfrom = this._from;\r\n\t\t\tto = this._to;\r\n\t\t\txform = this.getTransform();\r\n\t\t\tval = utils.getPath.apply(source, [from]);\r\n\r\n\t\t\tif (xform) val = xform.call(this.owner || this, val, DIRTY_FROM, this);\r\n\t\t\tif (!this._stop) utils.setPath.apply(target, [to, val, {create: false}]);\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Releases all of the [binding's]{@link module:enyo/Binding~Binding} parts. Typically, this method will\r\n\t* not need to be called directly unless the binding was created without an\r\n\t* [owner]{@link module:enyo/Binding~Binding#owner}.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tdestroy: function () {\r\n\t\tvar owner = this.owner,\r\n\t\t\tidx;\r\n\t\t\r\n\t\tthis.owner = null;\r\n\t\tthis.source = this._source = null;\r\n\t\tthis.target = this._target = null;\r\n\t\tthis.ready = null;\r\n\t\tthis.destroyed = true;\r\n\t\t\r\n\t\t// @todo: remove me or postpone operation?\r\n\t\tidx = bindings.indexOf(this);\r\n\t\tif (idx > -1) bindings.splice(idx, 1);\r\n\t\t\r\n\t\tif (owner && !owner.destroyed) owner.removeBinding(this);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetTransform: function () {\r\n\t\treturn this._didInitTransform ? this.transform : (function (bnd) {\r\n\t\t\tbnd._didInitTransform = true;\r\n\t\t\t\r\n\t\t\tvar xform = bnd.transform,\r\n\t\t\t\towner = bnd.owner,\r\n\t\t\t\txformOwner = owner && owner.bindingTransformOwner;\r\n\t\t\t\r\n\t\t\tif (xform) {\r\n\t\t\t\tif (typeof xform == 'string') {\r\n\t\t\t\t\tif (xformOwner && xformOwner[xform]) {\r\n\t\t\t\t\t\txform = xformOwner[xform];\r\n\t\t\t\t\t} else if (owner && owner[xform]) {\r\n\t\t\t\t\t\txform = owner[xform];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txform = utils.getPath.call(global, xform);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t/*jshint -W093 */\r\n\t\t\t\treturn (bnd.transform = (typeof xform == 'function' ? xform : null));\r\n\t\t\t\t/*jshint +W093 */\r\n\t\t\t}\r\n\t\t})(this);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: function (props) {\r\n\t\tbindings.push(this);\r\n\t\t\r\n\t\tif (props) utils.mixin(this, props);\r\n\t\t\r\n\t\tif (!this.euid) this.euid = utils.uid('b');\r\n\r\n\t\tthis.sync();\r\n\t}\r\n});\r\n\r\n/**\r\n* The details for an {@link module:enyo/Binding~Binding#transform} [function]{@glossary Function},\r\n* including the available parameters and how they can be used.\r\n* \r\n* @callback module:enyo/Binding~Binding~Transform\r\n* @param {*} value - The value being synchronized.\r\n* @param {Number} direction - The direction of synchronization; will be either\r\n* \t1 (source value has changed and will be written to target) or 2 (target\r\n* \tvalue has changed and will be written to source).\r\n* @param {Object} binding - A reference to the associated [binding]{@link module:enyo/Binding~Binding}. In cases \r\n* \twhere the binding should be interrupted and not propagate the synchronization at all, call\r\n* \tthe [stop()]{@link module:enyo/Binding~Binding#stop} method on the passed-in binding reference.\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/Binding~Binding} is a mechanism used to keep properties synchronized. A \r\n* binding may be used to link two properties on different\r\n* [objects]{@glossary Object}, or even two properties on the same object.\r\n* Once a binding has been established, it will wait for change notifications;\r\n* when a notification arrives, the binding will synchronize the value between\r\n* the two ends. Note that bindings may be either\r\n* [one-way]{@link module:enyo/Binding~Binding#oneWay} (the default) or\r\n* [two-way]{@link module:enyo/Binding~Binding#oneWay}.\r\n* \r\n* Usually, you will not need to create Binding objects arbitrarily, but will\r\n* instead rely on the public [BindingSupport API]{@link module:enyo/BindingSupport~BindingSupport},\r\n* which is applied to [Object]{@link module:enyo/CoreObject~Object} and so is available on\r\n* all of its [subkinds]{@glossary subkind}.\r\n* \r\n* @class Binding\r\n* @public\r\n*/\r\nexports = module.exports = kind(\r\n\t/** @lends module:enyo/Binding~Binding.prototype */ {\r\n\t\r\n\tname: 'enyo.Binding',\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: PassiveBinding,\r\n\t\r\n\t/**\r\n\t* If a [binding]{@link module:enyo/Binding~Binding} is one-way, this flag should be `true` (the default). \r\n\t* If this flag is set to `false`, the binding will be two-way.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\toneWay: true,\r\n\t\r\n\t/**\r\n\t* If the [binding]{@link module:enyo/Binding~Binding} was able to resolve both ends (i.e., its \r\n\t* [source]{@link module:enyo/Binding~Binding#source} and [target]{@link module:enyo/Binding~Binding#target} \r\n\t* [objects]{@glossary Object}), this value will be `true`. Setting this manually will\r\n\t* have undesirable effects.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tconnected: false,\r\n\t\r\n\t/**\r\n\t* By default, a [binding]{@link module:enyo/Binding~Binding} will attempt to connect to both ends \r\n\t* ([source]{@link module:enyo/Binding~Binding#source} and [target]{@link module:enyo/Binding~Binding#target}). If this \r\n\t* process should be deferred, set this flag to `false`.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tautoConnect: true,\r\n\t\r\n\t/**\r\n\t* By default, a [binding]{@link module:enyo/Binding~Binding} will attempt to synchronize its values from \r\n\t* its [source]{@link module:enyo/Binding~Binding#source} to its [target]{@link module:enyo/Binding~Binding#target}. If \r\n\t* this process should be deferred, set this flag to `false`.\r\n\t* \r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tautoSync: true,\r\n\t\r\n\t/**\r\n\t* The `dirty` property represents the changed value state of both the property designated by\r\n\t* the [from]{@link module:enyo/Binding~Binding#from} path and the property designated by the \r\n\t* [to]{@link module:enyo/Binding~Binding#to} path.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default module:enyo/Binding#DIRTY_FROM\r\n\t* @public\r\n\t*/\r\n\tdirty: DIRTY_FROM,\r\n\t\r\n\t/**\r\n\t* Indicates whether the [binding]{@link module:enyo/Binding~Binding} is currently connected.\r\n\t*\r\n\t* @returns {Boolean} `true` if connected; otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\tisConnected: function () {\r\n\t\tvar from = this._from,\r\n\t\t\tto = this.oneWay ? (this._toTarget || this._to) : this._to,\r\n\t\t\tsource = this._source,\r\n\t\t\ttarget = this._target,\r\n\t\t\ttoChain,\r\n\t\t\tfromChain;\r\n\t\t\t\r\n\t\tif (from && to && source && target) {\r\n\t\t\tif (!this.oneWay || this._toTarget) toChain = target.getChains()[to];\r\n\t\t\tfromChain = source.getChains()[from];\r\n\t\t\t\r\n\t\t\treturn this.connected\r\n\t\t\t\t&& (fromChain ? fromChain.isConnected() : true)\r\n\t\t\t\t&& (toChain ? toChain.isConnected() : true);\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Resets all properties to their original state.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\treset: function () {\r\n\t\tthis.disconnect();\r\n\t\treturn PassiveBinding.prototype.reset.apply(this, arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Rebuilds the entire [binding]{@link module:enyo/Binding~Binding}. Will synchronize if it is able to \r\n\t* connect and the [autoSync]{@link module:enyo/Binding~Binding#autoSync} flag is `true`.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\trebuild: function () {\r\n\t\treturn this.reset().connect();\r\n\t},\r\n\t\r\n\t/**\r\n\t* Connects the ends (i.e., the [source]{@link module:enyo/Binding~Binding#source} and\r\n\t* [target]{@link module:enyo/Binding~Binding#target}) of the [binding]{@link module:enyo/Binding~Binding}. While you\r\n\t* typically won't need to call this method, it is safe to call even when the ends are\r\n\t* already established. Note that if one or both of the ends does become connected and the\r\n\t* [autoSync]{@link module:enyo/Binding~Binding#autoSync} flag is `true`, the ends will automatically be\r\n\t* synchronized.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tconnect: function () {\r\n\t\tif (!this.isConnected()) {\r\n\t\t\tif (this.isReady()) {\r\n\t\t\t\tthis._source.observe(this._from, this._sourceChanged, this, {priority: true});\r\n\t\t\t\t\r\n\t\t\t\t// for two-way bindings we register to observe changes\r\n\t\t\t\t// from the target\r\n\t\t\t\tif (!this.oneWay) this._target.observe(this._to, this._targetChanged, this);\r\n\t\t\t\telse if (this._toTarget) {\r\n\t\t\t\t\tthis._target.observe(this._toTarget, this._toTargetChanged, this, {priority: true});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// we flag it as having been connected\r\n\t\t\t\tthis.connected = true;\r\n\t\t\t\tif (this.isConnected() && this.autoSync) this.sync(true);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Disconnects from the ends (i.e., the [source]{@link module:enyo/Binding~Binding#source} and \r\n\t* [target]{@link module:enyo/Binding~Binding#target}) if a connection exists at either end. This method \r\n\t* will most likely not need to be called directly.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tdisconnect: function () {\r\n\t\tif (this.isConnected()) {\r\n\t\t\tthis._source.unobserve(this._from, this._sourceChanged, this);\r\n\t\t\t\r\n\t\t\t// for two-way bindings we unregister the observer from\r\n\t\t\t// the target as well\r\n\t\t\tif (!this.oneWay) this._target.unobserve(this._to, this._targetChanged, this);\r\n\t\t\telse if (this._toTarget) {\r\n\t\t\t\tthis._target.unobserve(this._toTarget, this._toTargetChanged, this);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.connected = false;\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Synchronizes values from the [source]{@link module:enyo/Binding~Binding#source} to the\r\n\t* [target]{@link module:enyo/Binding~Binding#target}. This usually will not need to be called manually.\r\n\t* [Two-way bindings]{@link module:enyo/Binding~Binding#oneWay} will automatically synchronize from the\r\n\t* target end once they are connected.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tsync: function (force) {\r\n\t\tvar source = this._source,\r\n\t\t\ttarget = this._target,\r\n\t\t\tfrom = this._from,\r\n\t\t\tto = this._to,\r\n\t\t\txform = this.getTransform(),\r\n\t\t\tval;\r\n\t\t\r\n\t\tif (this.isReady() && this.isConnected()) {\r\n\t\t\t\t\r\n\t\t\tswitch (this.dirty || (force && DIRTY_FROM)) {\r\n\t\t\tcase DIRTY_TO:\r\n\t\t\t\tval = target.get(to);\r\n\t\t\t\tif (xform) val = xform.call(this.owner || this, val, DIRTY_TO, this);\r\n\t\t\t\tif (!this._stop) source.set(from, val, {create: false});\r\n\t\t\t\tbreak;\r\n\t\t\tcase DIRTY_FROM:\r\n\t\t\t\t\r\n\t\t\t// @TODO: This should never need to happen but is here just in case\r\n\t\t\t// it is ever arbitrarily called not having been dirty?\r\n\t\t\t// default:\r\n\t\t\t\tval = source.get(from);\r\n\t\t\t\tif (xform) val = xform.call(this.owner || this, val, DIRTY_FROM, this);\r\n\t\t\t\tif (!this._stop) target.set(to, val, {create: false});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.dirty = null;\r\n\t\t\tthis._stop = null;\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Releases all of the [binding's]{@link module:enyo/Binding~Binding} parts and unregisters its \r\n\t* [observers]{@link module:enyo/ObserverSupport~ObserverSupport}. Typically, this method will not need to be called \r\n\t* directly unless the binding was created without an [owner]{@link module:enyo/Binding~Binding#owner}.\r\n\t* \r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tdestroy: function () {\r\n\t\tthis.disconnect();\r\n\r\n\t\treturn PassiveBinding.prototype.destroy.apply(this, arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: function (props) {\r\n\t\tbindings.push(this);\r\n\t\t\r\n\t\tif (props) utils.mixin(this, props);\r\n\t\t\r\n\t\tif (!this.euid) this.euid = utils.uid('b');\r\n\t\tif (this.autoConnect) this.connect();\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_sourceChanged: function (was, is, path) {\r\n\t\t// @TODO: Should it...would it benefit from using these passed in values?\r\n\t\tthis.dirty = this.dirty == DIRTY_TO ? null : DIRTY_FROM;\r\n\t\treturn this.dirty == DIRTY_FROM && this.sync();\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_targetChanged: function (was, is, path) {\r\n\t\t// @TODO: Same question as above, it seems useful but would it affect computed\r\n\t\t// properties or stale values?\r\n\t\tthis.dirty = this.dirty == DIRTY_FROM ? null : DIRTY_TO;\r\n\t\treturn this.dirty == DIRTY_TO && this.sync();\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_toTargetChanged: function (was, is, path) {\r\n\t\tthis.dirty = DIRTY_FROM;\r\n\t\tthis.reset().connect();\r\n\t}\r\n});\r\n\r\n/**\r\n* Retrieves a [binding]{@link module:enyo/Binding~Binding} by its global id.\r\n*\r\n* @param {String} euid - The [Enyo global id]{@glossary EUID} by which to retrieve a \r\n*\t[binding]{@link module:enyo/Binding~Binding}.\r\n* @returns {module:enyo/Binding~Binding|undefined} A reference to the binding if the id\r\n*\tis found; otherwise, it will return [undefined]{@glossary undefined}.\r\n* \r\n* @static\r\n* @public\r\n*/\r\nexports.find = function (euid) {\r\n\treturn bindings.find(function (ln) {\r\n\t\treturn ln.euid == euid;\r\n\t});\r\n};\r\n\r\n/**\r\n* All {@link module:enyo/Binding~Binding} instances are stored in this list and may be retrieved via the\r\n* {@link module:enyo/Binding.find} method using an {@link module:enyo/Binding~Binding#id} identifier.\r\n*\r\n* @type {module:enyo/Binding~Binding[]}\r\n* @default []\r\n* @public\r\n*/\r\nexports.bindings = bindings;\r\n\r\n/**\r\n* Possible value of the [dirty]{@link module:enyo/Binding~Binding#dirty} property, indicating that the value \r\n* of the [binding source]{@link module:enyo/Binding~Binding#source} has changed.\r\n* \r\n* @static\r\n* @public\r\n*/\r\nexports.DIRTY_FROM = DIRTY_FROM;\r\n\r\n/**\r\n* Possible value of the [dirty]{@link module:enyo/Binding~Binding#dirty} property, indicating that the value\r\n* of the [binding target]{@link module:enyo/Binding~Binding#target} has changed.\r\n* \r\n* @static\r\n* @public\r\n*/\r\nexports.DIRTY_TO = DIRTY_TO;\r\n\r\n/**\r\n* The default [kind]{@glossary kind} that provides [binding]{@link module:enyo/Binding~Binding} \r\n* functionality.\r\n* \r\n* @static\r\n* @public\r\n*/\r\nexports.defaultBindingKind = exports;\r\n\r\n/**\r\n* The kind declaration for the [PassiveBinding]{@link module:enyo/Binding~PassiveBinding} kind\r\n* @public\r\n*/\r\nexports.PassiveBinding = PassiveBinding;\r\n","/**\r\n* Exports the {@link module:enyo/MultipleDispatchSupport~MultipleDispatchSupport} mixin.\r\n* @module enyo/MultipleDispatchSupport\r\n*/\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\n/**\r\n* A collection of methods to allow a single {@link module:enyo/Component~Component} to\r\n* [dispatch]{@link module:enyo/Component~Component#dispatchEvent} a single {@glossary event} to\r\n* multiple targets. The events are synchronously propagated in the order in\r\n* which the targets are encountered. Note that this {@glossary mixin} is\r\n* already applied to a base [kind]{@glossary kind},\r\n* {@link module:enyo/MultipleDispatchComponent~MultipleDispatchComponent}.\r\n*\r\n* @mixin\r\n* @public\r\n*/\r\nvar MultipleDispatchSupport = {\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'MultipleDispatchSupport',\r\n\t\r\n\t/**\r\n\t* Adds a target for dispatching.\r\n\t*\r\n\t* @param {module:enyo/Component~Component} component - The {@link module:enyo/Component~Component} to add as a dispatch target.\r\n\t* @public\r\n\t*/\r\n\taddDispatchTarget: function (component) {\r\n\t\tvar dt = this._dispatchTargets;\r\n\t\tif (component && !~utils.indexOf(component, dt)) {\r\n\t\t\tdt.push(component);\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t* Removes a target from dispatching.\r\n\t*\r\n\t* @param {module:enyo/Component~Component} component - The {@link module:enyo/Component~Component} to remove as a dispatch\r\n\t*\ttarget.\r\n\t* @public\r\n\t*/\r\n\tremoveDispatchTarget: function (component) {\r\n\t\tvar dt = this._dispatchTargets, i;\r\n\t\ti = utils.indexOf(component, dt);\r\n\t\tif (i > -1) {\r\n\t\t\tdt.splice(i, 1);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tbubbleUp: kind.inherit(function (sup) {\r\n\t\treturn function (name, event, sender) {\r\n\t\t\tif (this._dispatchDefaultPath) {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t\tvar dt = this._dispatchTargets;\r\n\t\t\tfor (var i=0, t; (t=dt[i]); ++i) {\r\n\t\t\t\tif (t && !t.destroyed) {\r\n\t\t\t\t\tt.dispatchBubble(name, event, sender);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\townerChanged: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tvar o = this.owner;\r\n\t\t\tthis._dispatchDefaultPath = !! o;\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tthis._dispatchTargets = [];\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tthis._dispatchTargets = null;\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_dispatchDefaultPath: false\r\n};\r\n\r\nmodule.exports = MultipleDispatchSupport;\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/LinkedListNode~LinkedListNode} kind.\r\n* @module enyo/LinkedListNode\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\n/**\r\n* An abstract linked-list node.\r\n*\r\n* @class LinkedListNode\r\n* @private\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/LinkedListNode~LinkedListNode.prototype */ {\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: null,\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tprev: null,\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tnext: null,\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcopy: function () {\r\n\t\tvar cpy = new this.ctor();\r\n\t\tcpy.prev = this.prev;\r\n\t\tcpy.next = this.next;\r\n\t\treturn cpy;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: function (props) {\r\n\t\tprops && utils.mixin(this, props);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdestroy: function () {\r\n\t\t// clear reference to previous node\r\n\t\tthis.prev = null;\r\n\t\t\r\n\t\t// if we have a reference to our next node\r\n\t\t// we continue down the chain\r\n\t\tthis.next && this.next.destroy();\r\n\t\t\r\n\t\t// clear our reference to the next node\r\n\t\tthis.next = null;\r\n\t}\r\n});\r\n","/**\r\n* Exports the {@link module:enyo/BindingSupport~BindingSupport} mixin\r\n* @module enyo/BindingSupport\r\n*/\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tBinding = require('./Binding');\r\n\r\nkind.concatenated.push('bindings');\r\n\r\n/**\r\n* An internally-used {@glossary mixin} that is added to {@link module:enyo/CoreObject~Object}\r\n* and its [subkinds]{@glossary subkind}. It includes public and protected API\r\n* methods for working with [bindings]{@link module:enyo/Binding~Binding}.\r\n*\r\n* @mixin\r\n* @protected\r\n*/\r\nvar BindingSupport = {\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'BindingSupport',\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_bindingSupportInitialized: false,\r\n\t\r\n\t/**\r\n\t* Imperatively creates a [binding]{@link module:enyo/Binding~Binding}. Merges a variable\r\n\t* number of [hashes]{@glossary Object} and instantiates a binding that\r\n\t* will have its [owner]{@link module:enyo/Binding~Binding#owner} property set to the callee\r\n\t* (the current {@link module:enyo/CoreObject~Object}). Bindings created in this way will be\r\n\t* [destroyed]{@link module:enyo/Binding~Binding#destroy} when their `owner` is\r\n\t* [destroyed]{@link module:enyo/CoreObject~Object#destroy}.\r\n\t*\r\n\t* @param {...Object} props A variable number of [hashes]{@glossary Object} that will\r\n\t*\tbe merged into the properties applied to the {@link module:enyo/Binding~Binding} instance.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tbinding: function () {\r\n\t\tvar args = utils.toArray(arguments)\r\n\t\t\t, props = utils.mixin(args)\r\n\t\t\t, bindings = this.bindings || (this.bindings = [])\r\n\t\t\t, passiveBindings = this.passiveBindings || (this.passiveBindings = [])\r\n\t\t\t, PBCtor = Binding.PassiveBinding\r\n\t\t\t, Ctor, bnd;\r\n\t\t\t\r\n\t\tprops.owner = props.owner || this;\r\n\t\tCtor = props.kind = props.kind || this.defaultBindingKind || Binding.defaultBindingKind;\r\n\t\t\r\n\t\tif (this._bindingSupportInitialized) {\r\n\t\t\tutils.isString(Ctor) && (Ctor = props.kind = kind.constructorForKind(Ctor));\r\n\t\t\tbnd = new Ctor(props);\r\n\t\t\tbindings.push(bnd);\r\n\t\t\tif (Ctor === PBCtor) {\r\n\t\t\t\tpassiveBindings.push(bnd);\r\n\t\t\t}\r\n\t\t\treturn bnd;\r\n\t\t} else bindings.push(props);\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Removes and [destroys]{@link module:enyo/Binding~Binding#destroy} all of, or a subset of,\r\n\t* the [bindings]{@link module:enyo/Binding~Binding} belonging to the callee.\r\n\t*\r\n\t* @param {module:enyo/Binding~Binding[]} [subset] - The optional [array]{@glossary Array} of\r\n\t*\t[bindings]{@link module:enyo/Binding~Binding} to remove.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tclearBindings: function (subset) {\r\n\t\tvar bindings = subset || (this.bindings && this.bindings.slice());\r\n\t\tbindings.forEach(function (bnd) {\r\n\t\t\tbnd.destroy();\r\n\t\t});\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsyncBindings: function (opts) {\r\n\t\tvar all = opts && opts.all,\r\n\t\t\tforce = opts && opts.force,\r\n\t\t\tbindings = all ? this.bindings : this.passiveBindings;\r\n\r\n\t\tbindings.forEach(function (b) {\r\n\t\t\tb.sync(force);\r\n\t\t});\r\n\t},\r\n\t\r\n\t/**\r\n\t* Removes a single {@link module:enyo/Binding~Binding} from the callee. (This does not\r\n\t* [destroy]{@link module:enyo/Binding~Binding#destroy} the binding.) Also removes the\r\n\t* [owner]{@link module:enyo/Binding~Binding#owner} reference if it is the callee.\r\n\t*\r\n\t* It should be noted that when a binding is destroyed, it is automatically\r\n\t* removed from its owner.\r\n\t*\r\n\t* @param {module:enyo/Binding~Binding} binding - The {@link module:enyo/Binding~Binding} instance to remove.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tremoveBinding: function (binding) {\r\n\t\tutils.remove(binding, this.bindings);\r\n\t\tif (binding.ctor === Binding.PassiveBinding) {\r\n\t\t\tutils.remove(binding, this.passiveBindings);\r\n\t\t}\r\n\t\t\r\n\t\tif (binding.owner === this) binding.owner = null;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructed: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tvar bindings = this.bindings;\r\n\t\t\tthis._bindingSupportInitialized = true;\r\n\t\t\tif (bindings) {\r\n\t\t\t\tthis.bindings = [];\r\n\t\t\t\tthis.passiveBindings = [];\r\n\t\t\t\tbindings.forEach(function (def) {\r\n\t\t\t\t\tthis.binding(def);\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.bindings && this.bindings.length && this.clearBindings();\r\n\t\t\tthis.bindings = null;\r\n\t\t\tthis.passiveBindings = null;\r\n\t\t};\r\n\t})\r\n};\r\n\r\nmodule.exports = BindingSupport;\r\n\r\n/**\r\n\tHijack the original so we can add additional default behavior.\r\n*/\r\nvar sup = kind.concatHandler\r\n\t, flags = {ignore: true};\r\n\r\n/**\r\n* @private\r\n*/\r\nkind.concatHandler = function (ctor, props, instance) {\r\n\tvar proto = ctor.prototype || ctor\r\n\t\t, kind = props && (props.defaultBindingKind || Binding.defaultBindingKind)\r\n\t\t, defaults = props && props.bindingDefaults;\r\n\t\r\n\tsup.call(this, ctor, props, instance);\r\n\tif (props.bindings) {\r\n\t\tprops.bindings.forEach(function (bnd) {\r\n\t\t\tdefaults && utils.mixin(bnd, defaults, flags);\r\n\t\t\tbnd.kind || (bnd.kind = kind); \r\n\t\t});\r\n\t\t\r\n\t\tproto.bindings = proto.bindings? proto.bindings.concat(props.bindings): props.bindings;\r\n\t\tdelete props.bindings;\r\n\t}\r\n};\r\n","/**\r\n* Exports the {@link module:enyo/RepeaterChildSupport~RepeaterChildSupport} mixin\r\n* @module enyo/RepeaterChildSupport\r\n*/\r\n\r\nrequire('enyo');\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tBinding = require('./Binding');\r\n\r\n/**\r\n* The {@link module:enyo/RepeaterChildSupport~RepeaterChildSupport} [mixin]{@glossary mixin} contains methods and\r\n* properties that are automatically applied to all children of {@link module:enyo/DataRepeater~DataRepeater}\r\n* to assist in selection support. (See {@link module:enyo/DataRepeater~DataRepeater} for details on how to\r\n* use selection support.) This mixin also [adds]{@link module:enyo/Repeater~Repeater#decorateEvent} the\r\n* `model`, `child` ([control]{@link module:enyo/Control~Control} instance), and `index` properties to\r\n* all [events]{@glossary event} emitted from the repeater's children.\r\n*\r\n* @mixin\r\n* @public\r\n*/\r\nvar RepeaterChildSupport = {\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\tname: 'RepeaterChildSupport',\r\n\r\n\t/**\r\n\t* Indicates whether the current child is selected in the [repeater]{@link module:enyo/DataRepeater~DataRepeater}.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tselected: false,\r\n\r\n\t/**\r\n\t* The CSS class applied to the child when selected\r\n\t*\r\n\t* @name module:enyo/RepeaterChildSupport~RepeaterChildSupport#selectedClass\r\n\t* @type {String}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\r\n\t/**\r\n\t* Setting cachePoint: true ensures that events from the repeater child's subtree will\r\n\t* always bubble up through the child, allowing the events to be decorated with repeater-\r\n\t* related metadata and references.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @private\r\n\t*/\r\n\tcachePoint: true,\r\n\r\n\t/*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tselectedChanged: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tif (this.repeater.selection) {\r\n\t\t\t\tthis.addRemoveClass(this.selectedClass || 'selected', this.selected);\r\n\t\t\t\t// for efficiency purposes, we now directly call this method as opposed to\r\n\t\t\t\t// forcing a synchronous event dispatch\r\n\t\t\t\tvar idx = this.repeater.collection.indexOf(this.model);\r\n\t\t\t\tif (this.selected && !this.repeater.isSelected(this.model)) {\r\n\t\t\t\t\tthis.repeater.select(idx);\r\n\t\t\t\t} else if (!this.selected && this.repeater.isSelected(this.model)) {\r\n\t\t\t\t\tthis.repeater.deselect(idx);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tmodelChanged: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tthis.syncBindings();\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdecorateEvent: kind.inherit(function (sup) {\r\n\t\treturn function (sender, event) {\r\n\t\t\tvar c = this.repeater.collection;\r\n\t\t\tif (c) {\r\n\t\t\t\tevent.model = this.model;\r\n\t\t\t\tevent.child = this;\r\n\t\t\t\tevent.index = this.repeater.collection.indexOf(this.model);\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_selectionHandler: function () {\r\n\t\tif (this.repeater.selection && !this.get('disabled')) {\r\n\t\t\tif (this.repeater.selectionType != 'group' || !this.selected) {\r\n\t\t\t\tthis.set('selected', !this.selected);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t* Deliberately used to supersede the default method and set\r\n\t* [owner]{@link module:enyo/Component~Component#owner} to this [control]{@link module:enyo/Control~Control} so that there\r\n\t* are no name collisions in the instance [owner]{@link module:enyo/Component~Component#owner}, and also so\r\n\t* that [bindings]{@link module:enyo/Binding~Binding} will correctly map to names.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreateClientComponents: kind.inherit(function () {\r\n\t\treturn function (components) {\r\n\t\t\tthis.createComponents(components, {owner: this});\r\n\t\t};\r\n\t}),\r\n\t/**\r\n\t* Used so that we don't stomp on any built-in handlers for the `ontap`\r\n\t* {@glossary event}.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdispatchEvent: kind.inherit(function (sup) {\r\n\t\treturn function (name, event, sender) {\r\n\t\t\tvar owner;\r\n\r\n\t\t\t// if the event is coming from a child of the repeater-child (this...) and has a\r\n\t\t\t// delegate assigned to it there is a distinct possibility it is supposed to be\r\n\t\t\t// targeting the instanceOwner of repeater-child not the repeater-child itself\r\n\t\t\t// so we have to check this case and treat it as expected - if there is a handler\r\n\t\t\t// and it returns true then we must skip the normal flow\r\n\t\t\tif (event.originator !== this && event.delegate && event.delegate.owner === this) {\r\n\t\t\t\tif (typeof this[name] != 'function') {\r\n\t\t\t\t\t// ok we don't have the handler here let's see if our owner does\r\n\t\t\t\t\towner = this.getInstanceOwner();\r\n\t\t\t\t\tif (owner && owner !== this) {\r\n\t\t\t\t\t\tif (typeof owner[name] == 'function') {\r\n\t\t\t\t\t\t\t// alright it appears that we're supposed to forward this to the\r\n\t\t\t\t\t\t\t// next owner instead\r\n\t\t\t\t\t\t\treturn owner.dispatch(name, event, sender);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!event._fromRepeaterChild) {\r\n\t\t\t\tif (!!~utils.indexOf(name, this.repeater.selectionEvents)) {\r\n\t\t\t\t\tthis._selectionHandler();\r\n\t\t\t\t\tevent._fromRepeaterChild = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructed: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tvar r = this.repeater,\r\n\t\t\t\ts = r.selectionProperty;\r\n\t\t\t// this property will only be set if the instance of the repeater needs\r\n\t\t\t// to track the selected state from the view and model and keep them in sync\r\n\t\t\tif (s) {\r\n\t\t\t\tvar bnd = this.binding({\r\n\t\t\t\t\tfrom: 'model.' + s,\r\n\t\t\t\t\tto: 'selected',\r\n\t\t\t\t\toneWay: false\r\n\t\t\t\t});\r\n\t\t\t\tthis._selectionBindingId = bnd.euid;\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tif (this._selectionBindingId) {\r\n\t\t\t\tvar b$ = Binding.find(this._selectionBindingId);\r\n\t\t\t\tif (b$) {\r\n\t\t\t\t\tb$.destroy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_selectionBindingId: null\r\n};\r\n\r\nmodule.exports = RepeaterChildSupport;\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/LinkedList~LinkedList} kind.\r\n* @module enyo/LinkedList\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind');\r\n\r\nvar\r\n\tLinkedListNode = require('./LinkedListNode');\r\n\r\n/**\r\n* An abstract linked-list.\r\n*\r\n* @class LinkedList\r\n* @private\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/LinkedList~LinkedList.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: null,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tnodeKind: LinkedListNode,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thead: null,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttail: null,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tlength: 0,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclear: function () {\r\n\t\tif (this.head) {\r\n\t\t\t// this will trigger a chain event down the list\r\n\t\t\tthis.head.destroy();\r\n\t\t}\r\n\t\tthis.head = null;\r\n\t\tthis.tail = null;\r\n\t\tthis.length = 0;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tslice: function (fromNode, toNode) {\r\n\t\tvar node = fromNode || this.head\r\n\t\t\t, list = new this.ctor()\r\n\t\t\t, cpy;\r\n\r\n\t\t// ensure we have a final node or our tail\r\n\t\ttoNode = toNode || this.tail;\r\n\r\n\t\tif (node && node !== toNode) {\r\n\t\t\tdo {\r\n\t\t\t\tcpy = node.copy();\r\n\t\t\t\tlist.appendNode(cpy);\r\n\t\t\t} while ((node = node.next) && node !== toNode);\r\n\t\t}\r\n\r\n\t\treturn list;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdestroy: function () {\r\n\t\tthis.clear();\r\n\t\tthis.destroyed = true;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcreateNode: function (props) {\r\n\t\treturn new this.nodeKind(props);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdeleteNode: function (node) {\r\n\t\tthis.removeNode(node);\r\n\r\n\t\t// can't chain destruct because we removed its chain references\r\n\t\tnode.destroy();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tremoveNode: function (node) {\r\n\t\tvar prev = node.prev\r\n\t\t\t, next = node.next;\r\n\r\n\t\tprev && (prev.next = next);\r\n\t\tnext && (next.prev = prev);\r\n\t\tthis.length--;\r\n\t\tnode.next = node.prev = null;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tappendNode: function (node, targetNode) {\r\n\t\ttargetNode = targetNode || this.tail;\r\n\r\n\t\tif (targetNode) {\r\n\t\t\tif (targetNode.next) {\r\n\t\t\t\tnode.next = targetNode.next;\r\n\t\t\t}\r\n\r\n\t\t\ttargetNode.next = node;\r\n\t\t\tnode.prev = targetNode;\r\n\r\n\t\t\tif (targetNode === this.tail) {\r\n\t\t\t\tthis.tail = node;\r\n\t\t\t}\r\n\r\n\t\t\tthis.length++;\r\n\t\t} else {\r\n\r\n\t\t\tthis.head = this.tail = node;\r\n\t\t\tnode.prev = node.next = null;\r\n\t\t\tthis.length = 1;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfind: function (fn, ctx, targetNode) {\r\n\t\tvar node = targetNode || this.head;\r\n\t\tif (node) {\r\n\t\t\tdo {\r\n\t\t\t\tif (fn.call(ctx || this, node, this)) {\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t}\r\n\t\t\t} while ((node = node.next));\r\n\t\t}\r\n\t\t// if no node qualified it returns false\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tforward: function (fn, ctx, targetNode) {\r\n\t\tvar node = targetNode || this.head;\r\n\t\tif (node) {\r\n\t\t\tdo {\r\n\t\t\t\tif (fn.call(ctx || this, node, this)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} while ((node = node.next));\r\n\t\t}\r\n\t\t// returns the last node (if any) that was processed in the chain\r\n\t\treturn node;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tbackward: function (fn, ctx, targetNode) {\r\n\t\tvar node = targetNode || this.tail;\r\n\t\tif (node) {\r\n\t\t\tdo {\r\n\t\t\t\tif (fn.call(ctx || this, node, this)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} while ((node = node.prev));\r\n\t\t}\r\n\t\t// returns the last node (if any) that was processed in the chain\r\n\t\treturn node;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: function () {\r\n\t\tthis.nodeType = kind.constructorForKind(this.nodeType);\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/ObserverChainNode~ObserverChainNode} kind.\r\n* @module enyo/ObserverChainNode\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind');\r\n\r\nvar\r\n\tLinkedListNode = require('./LinkedListNode');\r\n\r\nfunction get (base, prop) {\r\n\treturn base && /*isObject(base)*/ (typeof base == 'object')? (\r\n\t\tbase.get? base.get(prop): base[prop]\r\n\t): undefined;\r\n}\r\n\r\n/**\r\n* An internally used {@glossary kind}.\r\n*\r\n* @class ObserverChainNode\r\n* @extends module:enyo/LinkedListNode~LinkedListNode\r\n* @private\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/ObserverChainNode~ObserverChainNode.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: LinkedListNode,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\r\n\t\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.connect();\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tthis.disconnect();\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.observer = null;\r\n\t\t\tthis.list = null;\r\n\t\t\tthis.object = null;\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconnect: function () {\r\n\t\tvar obj = this.object\r\n\t\t\t, obs = this._changed\r\n\t\t\t, prop = this.property;\r\n\t\tif (obj) {\r\n\t\t\tif (obj.observe) obj.observe(prop, obs, this, {noChain: true, priority: true});\r\n\t\t\tthis.connected = true;\r\n\t\t\tthis.list.connected++;\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdisconnect: function () {\r\n\t\tvar obj = this.object\r\n\t\t\t, obs = this._changed\r\n\t\t\t, prop = this.property\r\n\t\t\t, was = this.connected;\r\n\t\tobj && obj.unobserve && obj.unobserve(prop, obs, this);\r\n\t\tthis.connected = null;\r\n\t\tif (was) this.list.connected--;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsetObject: function (object) {\r\n\t\tvar cur = this.object\r\n\t\t\t, prop = this.property\r\n\t\t\t, was, is;\r\n\t\t\r\n\t\tif (cur !== object) {\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.object = object;\r\n\t\t\tthis.connect();\r\n\t\t\t\r\n\t\t\tif (this.list.tail === this) {\r\n\t\t\t\twas = get(cur, prop);\r\n\t\t\t\tis = get(object, prop);\r\n\t\t\t\t// @TODO: It would be better to somehow cache values\r\n\t\t\t\t// such that it could intelligently derive the difference\r\n\t\t\t\t// without needing to continuously look it up with get\r\n\t\t\t\twas !== is && this.list.observed(this, was, is);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_changed: function (was, is) {\r\n\t\tthis.list.observed(this, was, is);\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/ObserverChain~ObserverChain} kind.\r\n* @module enyo/ObserverChain\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind');\r\n\r\nvar\r\n\tLinkedList = require('./LinkedList'),\r\n\tObserverChainNode = require('./ObserverChainNode');\r\n\r\nfunction get (base, prop) {\r\n\treturn base && /*isObject(base)*/ (typeof base == 'object')? (\r\n\t\tbase.get? base.get(prop): base[prop]\r\n\t): undefined;\r\n}\r\n\r\n/**\r\n* An internally used {@glossary kind}.\r\n*\r\n* @class ObserverChain\r\n* @extends module:enyo/LinkedList~LinkedList\r\n* @private\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/ObserverChain~ObserverChain.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: LinkedList,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tnodeKind: ObserverChainNode,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconnected: 0,\r\n\t\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructor: function (path, object) {\r\n\t\tthis.object = object;\r\n\t\tthis.path = path;\r\n\t\tthis.parts = path.split('.');\r\n\t\tthis.createChain();\r\n\t},\r\n\t\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.object = null;\r\n\t\t\tthis.parts = null;\r\n\t\t\tthis.path = null;\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trebuild: function (target) {\r\n\t\tif (!this.rebuilding) {\r\n\t\t\tthis.rebuilding = true;\r\n\t\t\tthis.forward(function (node) {\r\n\t\t\t\tif (node !== this.head) {\r\n\t\t\t\t\tvar src = node.prev.object\r\n\t\t\t\t\t\t, prop = node.prev.property;\r\n\t\t\t\t\tnode.setObject(get(src, prop));\r\n\t\t\t\t}\r\n\t\t\t}, this, target);\r\n\t\t\tthis.rebuilding = false;\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tisConnected: function () {\r\n\t\treturn !! (this.connected === this.length && this.length);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tbuildPath: function (target) {\r\n\t\tvar str = '';\r\n\t\t\r\n\t\tthis.backward(function (node) {\r\n\t\t\tstr = node.property + (str? ('.' + str): str);\r\n\t\t}, this, target);\r\n\t\t\r\n\t\treturn str;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcreateChain: function () {\r\n\t\tvar parts = this.parts\r\n\t\t\t, next = this.object\r\n\t\t\t, $ = false\r\n\t\t\t, node, prop;\r\n\t\t\t\r\n\t\tfor (var i=0; (prop=parts[i]); ++i) {\r\n\t\t\t\r\n\t\t// forEach(parts, function (prop, idx) {\r\n\t\t\t// we create a special case for the $ hash property\r\n\t\t\tif (prop == '$') {\r\n\t\t\t\t$ = true;\r\n\t\t\t} else {\r\n\t\t\t\t// in cases where the chain has the $ property we arbitrarily\r\n\t\t\t\t// force it onto our current nodes property and let the special handling\r\n\t\t\t\t// in ObserverChainNode and ObserverSupport handle the rest\r\n\t\t\t\t$ && (prop = '$.' + prop);\r\n\t\t\t\tnode = this.createNode({property: prop, object: next, list: this});\r\n\t\t\t\tthis.appendNode(node);\r\n\t\t\t\tnext = get(next, prop);\r\n\t\t\t\t$ = false;\r\n\t\t\t}\r\n\t\t// }, this);\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tobserved: function (node, was, is) {\r\n\t\tthis.object.stopNotifications();\r\n\t\t// @NOTE: About the following two cases, they are mutually exclusive and this seems perfect\r\n\t\t// that we don't see double notifications\r\n\t\t// @TODO: Only notify if it was the full property path? This is far more efficient after\r\n\t\t// testing but not as flexible...\r\n\t\tnode === this.tail /*&& was !== is*/ && this.object.notify(this.buildPath(node), was, is);\r\n\t\t// @TODO: It seems the same case across the board that the rebuild only needs to take place\r\n\t\t// from the beginning to the second-to-last elem\r\n\t\tnode !== this.tail && was !== is && this.rebuild(node);\r\n\t\tthis.object.startNotifications();\r\n\t}\r\n});\r\n","/**\r\n* Exports the {@link module:enyo/ObserverSupport~ObserverSupport} mixin\r\n* @module enyo/ObserverSupport\r\n*/\r\nrequire('enyo');\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tObserverChain = require('./ObserverChain');\r\n\r\nvar observerTable = {};\r\n\t\r\nkind.concatenated.push(\"observers\");\r\n\r\n/**\r\n* Responds to changes in one or more properties.\r\n* [Observers]{@link module:enyo/ObserverSupport~ObserverSupport#observers} may be registered in\r\n* several different ways. See the {@link module:enyo/ObserverSupport} documentation\r\n* for more details. Also note that, while observers should not be called\r\n* directly, if defined on a [kind]{@glossary kind}, they may be\r\n* overloaded for special behavior.\r\n*\r\n* @see {@link module:enyo/ObserverSupport}\r\n* @see {@link module:enyo/ObserverSupport~ObserverSupport#observe}\r\n* @callback module:enyo/ObserverSupport~ObserverSupport~Observer\r\n* @param {*} was - The previous value of the property that has changed.\r\n* @param {*} is - The current value of the property that has changed.\r\n* @param {String} prop - The name of the property that has changed.\r\n* @public\r\n*/\r\n\r\nfunction addObserver (path, fn, ctx, opts) {\r\n\t\r\n\tvar observers = this.getObservers(),\r\n\t\tchains = this.getChains(),\r\n\t\tparts = path.split('.'),\r\n\t\tprio = opts && opts.priority,\r\n\t\tentries,\r\n\t\tnoChain;\r\n\t\t\r\n\tnoChain = (opts && opts.noChain) ||\r\n\t\t\tchains[path] ||\r\n\t\t\tparts.length < 2 ||\r\n\t\t\t(parts.length === 2 && path[0] == '$');\r\n\t\r\n\tif (observers[path] && !observers.hasOwnProperty(path)) {\r\n\t\tobservers[path] = observers[path].slice();\r\n\t}\r\n\t\r\n\tentries = observers[path] || (observers[path] = []);\r\n\tentries[prio ? 'unshift' : 'push']({method: fn, ctx: ctx || this});\r\n\t\r\n\tif (!noChain) {\r\n\t\tthis.getChains()[path] = new ObserverChain(path, this);\r\n\t}\r\n\t\r\n\treturn this;\r\n}\r\n\r\nfunction removeObserver (obj, path, fn, ctx) {\r\n\tvar observers = obj.getObservers(path)\r\n\t\t, chains = obj.getChains()\r\n\t\t, idx, chain;\r\n\t\t\r\n\tif (observers && observers.length) {\r\n\t\tidx = observers.findIndex(function (ln) {\r\n\t\t\treturn ln.method === fn && (ctx? ln.ctx === ctx: true);\r\n\t\t});\r\n\t\tidx > -1 && observers.splice(idx, 1);\r\n\t}\r\n\t\r\n\tif ((chain = chains[path]) && !observers.length) {\r\n\t\tchain.destroy();\r\n\t}\r\n\t\r\n\treturn obj;\r\n}\r\n\r\nfunction notifyObservers (obj, path, was, is, opts) {\r\n\tif (obj.isObserving()) {\r\n\t\tvar observers = obj.getObservers(path);\r\n\t\t\r\n\t\tif (observers && observers.length) {\r\n\t\t\tfor (var i=0, ln; (ln=observers[i]); ++i) {\r\n\t\t\t\tif (typeof ln.method == \"string\") obj[ln.method](was, is, path, opts);\r\n\t\t\t\telse ln.method.call(ln.ctx || obj, was, is, path, opts);\r\n\t\t\t}\r\n\t\t}\r\n\t} else enqueue(obj, path, was, is, opts);\r\n\t\r\n\treturn obj;\r\n}\r\n\r\nfunction enqueue (obj, path, was, is, opts) {\r\n\tif (obj._notificationQueueEnabled) {\r\n\t\tvar queue = obj._notificationQueue || (obj._notificationQueue = {})\r\n\t\t\t, ln = queue[path] || (queue[path] = {});\r\n\t\r\n\t\tln.was = was;\r\n\t\tln.is = is;\r\n\t\tln.opts = opts;\r\n\t}\r\n}\r\n\r\nfunction flushQueue (obj) {\r\n\tvar queue = obj._notificationQueue\r\n\t\t, path, ln;\r\n\t\r\n\tif (queue) {\r\n\t\tobj._notificationQueue = null;\r\n\t\t\r\n\t\tfor (path in queue) {\r\n\t\t\tln = queue[path];\r\n\t\t\tobj.notify(path, ln.was, ln.is, ln.opts);\r\n\t\t}\r\n\t}\r\n}\r\n\t\r\n/**\r\n* Adds support for notifications on property changes. Most\r\n* [kinds]{@glossary kind} (including all kinds that inherit from\r\n* {@link module:enyo/CoreObject~Object}) already have this {@glossary mixin} applied.\r\n* This allows for\r\n* [observers]{@link module:enyo/ObserverSupport~ObserverSupport~Observer} to be\r\n* [declared]{@link module:enyo/ObserverSupport~ObserverSupport#observers} or \"implied\" (see below).\r\n*\r\n* Implied observers are not declared, but derived from their `name`. They take\r\n* the form `<property>Changed`, where `<property>` is the property to\r\n* [observe]{@link module:enyo/ObserverSupport~ObserverSupport#observe}. For example:\r\n*\r\n* ```javascript\r\n* var\r\n* \tkind = require('enyo/kind');\r\n*\r\n* module.exports = kind({\r\n* \tname: 'MyKind',\r\n*\r\n* \t// some local property\r\n* \tvalue: true,\r\n*\r\n* \t// and the implied observer of that property\r\n* \tvalueChanged: function (was, is) {\r\n* \t\t// do something now that it has changed\r\n* \t\tenyo.log('value was \"' + was + '\" but now it is \"' + is + '\"');\r\n* \t}\r\n* });\r\n*\r\n* var mine = new MyKind();\r\n* mine.set('value', false); // -> value was \"true\" but now it is \"false\"\r\n* ```\r\n*\r\n* Using the `observers` property for its declarative syntax, an observer may\r\n* observe any property (or properties), regardless of its `name`. For example:\r\n*\r\n* ```javascript\r\n* var\r\n* \tkind = require('enyo/kind');\r\n*\r\n* module.exports = kind({\r\n* \tname: 'MyKind',\r\n*\r\n* \t// some local property\r\n* \tvalue: true,\r\n*\r\n* \t// another local property\r\n* \tcount: 1,\r\n*\r\n* \t// declaring the observer\r\n* \tobservers: [\r\n* \t\t// the path can be a single string or an array of strings\r\n* \t\t{method: 'myObserver', path: ['value', 'count']}\r\n* \t],\r\n*\r\n* \t// now this observer will be notified of changes to both properties\r\n* \tmyObserver: function (was, is, prop) {\r\n* \t\t// do something now that it changed\r\n* \t\tenyo.log(prop + ' was \"' + was + '\" but now it is \"' + is + '\"');\r\n* \t}\r\n* });\r\n*\r\n* var mine = new MyKind();\r\n* mine.set('value', false); // -> value was \"true\" but now it is \"false\"\r\n* mine.set('count', 2); // -> count was \"1\" but now it is \"2\"\r\n* ```\r\n*\r\n* While observers may be [notified]{@link module:enyo/ObserverSupport~ObserverSupport#notify} of\r\n* changes to multiple properties, this is not a typical use case for implied\r\n* observers, since, by convention, they are only registered for the named\r\n* property.\r\n*\r\n* There is one additional way to use observers, if necessary. You may use the\r\n* API methods [observe()]{@link module:enyo/ObserverSupport~ObserverSupport#observe} and\r\n* [unobserve()]{@link module:enyo/ObserverSupport~ObserverSupport#unobserve} to dynamically\r\n* register and unregister observers as needed. For example:\r\n*\r\n* ```javascript\r\n* var\r\n* \tObject = require('enyo/CoreObject').Object;\r\n*\r\n* var object = new Object({value: true});\r\n* var observer = function (was, is) {\r\n* \tenyo.log('value was \"' + was + '\" but now it is \"' + is + '\"');\r\n* };\r\n*\r\n* object.observe('value', observer);\r\n* object.set('value', false); // -> value was \"true\" but now it is \"false\"\r\n* object.unobserve('value', observer);\r\n* object.set('value', true); // no output because there is no observer\r\n* ```\r\n*\r\n* Be sure to read the documentation for these API methods; proper usage of\r\n* these methods is important for avoiding common pitfalls and memory leaks.\r\n*\r\n* @mixin\r\n* @public\r\n*/\r\nvar ObserverSupport = {\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: \"ObserverSupport\",\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_observing: true,\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_observeCount: 0,\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_notificationQueue: null,\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_notificationQueueEnabled: true,\r\n\t\r\n\t/**\r\n\t* Determines whether `_observing` is enabled. If\r\n\t* [stopNotifications()]{@link module:enyo/ObserverSupport~ObserverSupport#stopNotifications} has\r\n\t* been called, then this will return `false`.\r\n\t*\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#stopNotifications}\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#startNotifications}\r\n\t* @returns {Boolean} Whether or not the callee is observing.\r\n\t*/\r\n\tisObserving: function () {\r\n\t\treturn this._observing;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Returns an immutable list of [observers]{@link module:enyo/ObserverSupport~ObserverSupport~Observer}\r\n\t* for the given `path`, or all observers for the callee.\r\n\t*\r\n\t* @param {String} [path] - Path or property path for which\r\n\t* [observers]{@link module:enyo/ObserverSupport~ObserverSupport~Observer} will be returned. If not\r\n\t* specified, all observers for the callee will be returned.\r\n\t*\r\n\t* @returns {module:enyo/ObserverSupport~ObserverSupport~Observer[]} The immutable\r\n\t* [array]{@glossary Array} of observers.\r\n\t* @public\r\n\t*/\r\n\tgetObservers: function (path) {\r\n\t\tvar euid = this.euid || (this.euid = utils.uid('o')),\r\n\t\t\tret,\r\n\t\t\tloc;\r\n\t\t\t\r\n\t\tloc = observerTable[euid] || (observerTable[euid] = (\r\n\t\t\tthis._observers? Object.create(this._observers): {}\r\n\t\t));\r\n\t\t\r\n\t\tif (!path) return loc;\r\n\t\t\r\n\t\tret = loc[path];\r\n\t\t\r\n\t\t// if the special property exists...\r\n\t\tif (loc['*']) ret = ret ? ret.concat(loc['*']) : loc['*'].slice();\r\n\t\treturn ret;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetChains: function () {\r\n\t\treturn this._observerChains || (this._observerChains = {});\r\n\t},\r\n\t\r\n\t/**\r\n\t* @deprecated\r\n\t* @alias {@link module:enyo/ObserverSupport~ObserverSupport#observe}\r\n\t* @public\r\n\t*/\r\n\taddObserver: function () {\r\n\t\t// @NOTE: In this case we use apply because of internal variable use of parameters\r\n\t\treturn addObserver.apply(this, arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Registers an [observer]{@link module:enyo/ObserverSupport~ObserverSupport~Observer} to be\r\n\t* [notified]{@link module:enyo/ObserverSupport~ObserverSupport#notify} when the given property has\r\n\t* been changed. It is important to note that it is possible to register the\r\n\t* same observer multiple times (although this is never the intention), so\r\n\t* care should be taken to avoid that scenario. It is also important to\r\n\t* understand how observers are stored and unregistered\r\n\t* ([unobserved]{@link module:enyo/ObserverSupport~ObserverSupport#unobserve}). The `ctx` (context)\r\n\t* parameter is stored with the observer reference. **If used when\r\n\t* registering, it should also be used when unregistering.**\r\n\t*\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#unobserve}\r\n\t* @param {String} path - The property or property path to observe.\r\n\t* @param {module:enyo/ObserverSupport~ObserverSupport~Observer} fn - The\r\n\t*\t[observer]{@link module:enyo/ObserverSupport~ObserverSupport~Observer} method that responds to changes.\r\n\t* @param {*} [ctx] - The `this` (context) under which to execute the observer.\r\n\t*\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tobserve: function () {\r\n\t\t// @NOTE: In this case we use apply because of internal variable use of parameters\r\n\t\treturn addObserver.apply(this, arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @deprecated\r\n\t* @alias {@link module:enyo/ObserverSupport~ObserverSupport#unobserve}\r\n\t* @public\r\n\t*/\r\n\tremoveObserver: function (path, fn, ctx) {\r\n\t\treturn removeObserver(this, path, fn);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Unregisters an [observer]{@link module:enyo/ObserverSupport~ObserverSupport~Observer}. If a `ctx`\r\n\t* (context) was supplied to [observe()]{@link module:enyo/ObserverSupport~ObserverSupport#observe},\r\n\t* then it should also be supplied to this method.\r\n\t*\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#observe}\r\n\t* @param {String} path - The property or property path to unobserve.\r\n\t* @param {module:enyo/ObserverSupport~ObserverSupport~Observer} fn - The\r\n\t*\t[observer]{@link module:enyo/ObserverSupport~ObserverSupport~Observer} method that responds to changes.\r\n\t* @param {*} [ctx] - The `this` (context) under which to execute the observer.\r\n\t*\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tunobserve: function (path, fn, ctx) {\r\n\t\treturn removeObserver(this, path, fn, ctx);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Removes all [observers]{@link module:enyo/ObserverSupport~ObserverSupport~Observer} from the\r\n\t* callee. If a `path` parameter is provided, observers will only be removed\r\n\t* from that path (or property).\r\n\t*\r\n\t* @param {String} [path] - A property or property path from which to remove all\r\n\t*\t[observers]{@link module:enyo/ObserverSupport~ObserverSupport~Observer}.\r\n\t* @returns {this} The callee for chaining.\r\n\t*/\r\n\tremoveAllObservers: function (path) {\r\n\t\tvar euid = this.euid\r\n\t\t\t, loc = euid && observerTable[euid];\r\n\t\t\r\n\t\tif (loc) {\r\n\t\t\tif (path) {\r\n\t\t\t\tloc[path] = null;\r\n\t\t\t} else {\r\n\t\t\t\tdelete observerTable[euid];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @deprecated\r\n\t* @alias module:enyo/ObserverSupport~ObserverSupport#notify\r\n\t* @public\r\n\t*/\r\n\tnotifyObservers: function (path, was, is, opts) {\r\n\t\treturn notifyObservers(this, path, was, is, opts);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Triggers any [observers]{@link module:enyo/ObserverSupport~ObserverSupport~Observer} for the\r\n\t* given `path`. The previous and current values must be supplied. This\r\n\t* method is typically called automatically, but it may also be called\r\n\t* forcibly by [setting]{@link module:enyo/CoreObject~Object#set} a value with the\r\n\t* `force` option.\r\n\t*\r\n\t* @param {String} path - The property or property path to notify.\r\n\t* @param {*} was - The previous value.\r\n\t* @param {*} is - The current value.\r\n\t* @returns {this} The callee for chaining.\r\n\t*/\r\n\tnotify: function (path, was, is, opts) {\r\n\t\treturn notifyObservers(this, path, was, is, opts);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Stops all [notifications]{@link module:enyo/ObserverSupport~ObserverSupport#notify} from\r\n\t* propagating. By default, all notifications will be queued and flushed once\r\n\t* [startNotifications()]{@link module:enyo/ObserverSupport~ObserverSupport#startNotifications}\r\n\t* has been called. Setting the optional `noQueue` flag will also disable the\r\n\t* queue, or you can use the\r\n\t* [disableNotificationQueue()]{@link module:enyo/ObserverSupport~ObserverSupport#disableNotificationQueue} and\r\n\t* [enableNotificationQueue()]{@link module:enyo/ObserverSupport~ObserverSupport#enableNotificationQueue}\r\n\t* API methods. `startNotifications()` will need to be called the same number\r\n\t* of times that this method has been called.\r\n\t*\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#startNotifications}\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#disableNotificationQueue}\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#enableNotificationQueue}\r\n\t* @param {Boolean} [noQueue] - If `true`, this will also disable the notification queue.\r\n\t* @returns {this} The callee for chaining.\r\n\t*/\r\n\tstopNotifications: function (noQueue) {\r\n\t\tthis._observing = false;\r\n\t\tthis._observeCount++;\r\n\t\tnoQueue && this.disableNotificationQueue();\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Starts [notifications]{@link module:enyo/ObserverSupport~ObserverSupport#notify} if they have\r\n\t* been [disabled]{@link module:enyo/ObserverSupport~ObserverSupport#stopNotifications}. If the\r\n\t* notification queue was not disabled, this will automatically flush the\r\n\t* queue of all notifications that were encountered while stopped. This\r\n\t* method must be called the same number of times that\r\n\t* [stopNotifications()]{@link module:enyo/ObserverSupport~ObserverSupport#stopNotifications} was\r\n\t* called.\r\n\t*\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#stopNotifications}\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#disableNotificationQueue}\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#enableNotificationQueue}\r\n\t* @param {Boolean} [queue] - If `true` and the notification queue is disabled,\r\n\t* the queue will be re-enabled.\r\n\t* @returns {this} The callee for chaining.\r\n\t*/\r\n\tstartNotifications: function (queue) {\r\n\t\tthis._observeCount && this._observeCount--;\r\n\t\tthis._observeCount === 0 && (this._observing = true);\r\n\t\tqueue && this.enableNotificationQueue();\r\n\t\tthis.isObserving() && flushQueue(this);\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Re-enables the notification queue, if it was disabled.\r\n\t*\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#disableNotificationQueue}\r\n\t* @returns {this} The callee for chaining.\r\n\t*/\r\n\tenableNotificationQueue: function () {\r\n\t\tthis._notificationQueueEnabled = true;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* If the notification queue is enabled (the default), it will be disabled\r\n\t* and any notifications in the queue will be removed.\r\n\t*\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport#enableNotificationQueue}\r\n\t* @returns {this} The callee for chaining.\r\n\t*/\r\n\tdisableNotificationQueue: function () {\r\n\t\tthis._notificationQueueEnabled = false;\r\n\t\tthis._notificationQueue = null;\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tvar chains, chain, path, entries, i;\r\n\t\t\t\r\n\t\t\t// if there are any observers that need to create dynamic chains\r\n\t\t\t// we look for and instance those now\r\n\t\t\tif (this._observerChains) {\r\n\t\t\t\tchains = this._observerChains;\r\n\t\t\t\tthis._observerChains = {};\r\n\t\t\t\tfor (path in chains) {\r\n\t\t\t\t\tentries = chains[path];\r\n\t\t\t\t\tfor (i = 0; (chain = entries[i]); ++i) this.observe(path, chain.method);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tvar chains = this._observerChains,\r\n\t\t\t\tpath,\r\n\t\t\t\tchain;\r\n\t\t\t\r\n\t\t\tsup.apply(this, arguments);\r\n\r\n\t\t\tthis.removeAllObservers();\r\n\t\t\tif (chains) {\r\n\t\t\t\tfor (path in chains) {\r\n\t\t\t\t\tchain = chains[path];\r\n\t\t\t\t\tchain.destroy();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis._observerChains = null;\r\n\t\t\t}\r\n\t\t};\r\n\t})\r\n\t\r\n};\r\n\r\nmodule.exports = ObserverSupport;\r\n\r\n/**\r\n* Hijack the original so we can add additional default behavior.\r\n*\r\n* @private\r\n*/\r\nvar sup = kind.concatHandler;\r\n\r\n// @NOTE: It seems like a lot of work but it really won't happen that much and the more\r\n// we push to kind-time the better for initialization time\r\n\r\n/** @private */\r\nkind.concatHandler = function (ctor, props, instance) {\r\n\t\r\n\tsup.call(this, ctor, props, instance);\r\n\t\r\n\tif (props === ObserverSupport) return;\r\n\r\n\tvar proto = ctor.prototype || ctor\r\n\t\t, observers = proto._observers? Object.create(proto._observers): null\r\n\t\t, incoming = props.observers\r\n\t\t, chains = proto._observerChains && Object.create(proto._observerChains);\r\n\t\t\r\n\tif (!observers) {\r\n\t\tif (proto.kindName) observers = {};\r\n\t\telse return;\r\n\t}\r\n\t\t\r\n\tif (incoming && !(incoming instanceof Array)) {\r\n\t\t(function () {\r\n\t\t\tvar tmp = [], deps, name;\r\n\t\t\t// here is the slow iteration over the properties...\r\n\t\t\tfor (name in props.observers) {\r\n\t\t\t\t// points to the dependencies of the computed method\r\n\t\t\t\tdeps = props.observers[name];\r\n\t\t\t\t// create a single entry now for the method/computed with all dependencies\r\n\t\t\t\ttmp.push({method: name, path: deps});\r\n\t\t\t}\r\n\t\t\tincoming = tmp;\r\n\t\t}());\r\n\t\t// we need to ensure we don't modify the fixed array of a mixin or reused object\r\n\t\t// because it could wind up inadvertantly adding the same entry multiple times\r\n\t} else if (incoming) incoming = incoming.slice();\r\n\t\r\n\t// this scan is required to figure out what auto-observers might be present\r\n\tfor (var key in props) {\r\n\t\tif (key.slice(-7) == \"Changed\") {\r\n\t\t\tincoming || (incoming = []);\r\n\t\t\tincoming.push({method: key, path: key.slice(0, -7)});\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar addObserverEntry = function (path, method) {\r\n\t\tvar obs;\r\n\t\t// we have to make sure that the path isn't a chain because if it is we add it\r\n\t\t// to the chains instead\r\n\t\tif (path.indexOf(\".\") > -1) {\r\n\t\t\tif (!chains) chains = {};\r\n\t\t\tobs = chains[path] || (chains[path] = []);\r\n\t\t\tobs.push({method: method});\r\n\t\t} else {\r\n\t\t\tif (observers[path] && !observers.hasOwnProperty(path)) observers[path] = observers[path].slice();\r\n\t\t\tobs = observers[path] || (observers[path] = []);\r\n\t\t\tif (!obs.find(function (ln) { return ln.method == method; })) obs.push({method: method});\r\n\t\t}\r\n\t};\r\n\t\r\n\tif (incoming) {\r\n\t\tincoming.forEach(function (ln) {\r\n\t\t\t// first we determine if the path itself is an array of paths to observe\r\n\t\t\tif (ln.path && ln.path instanceof Array) ln.path.forEach(function (en) { addObserverEntry(en, ln.method); });\r\n\t\t\telse addObserverEntry(ln.path, ln.method);\r\n\t\t});\r\n\t}\r\n\t\r\n\t// we clear the key so it will not be added to the prototype\r\n\t// delete props.observers;\r\n\t// we update the properties to whatever their new values may be\r\n\tproto._observers = observers;\r\n\tproto._observerChains = chains;\r\n};\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/CoreObject~Object} kind.\r\n* @module enyo/CoreObject\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tlogger = require('./logger'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tMixinSupport = require('./MixinSupport'),\r\n\tObserverSupport = require('./ObserverSupport'),\r\n\tBindingSupport = require('./BindingSupport');\r\n\r\n// ComputedSupport is applied to all kinds at creation time but must be require()'d somewhere to be\r\n// included in builds. This is that somewhere.\r\nrequire('./ComputedSupport');\r\n\r\n/**\r\n* Used by all [objects]{@link module:enyo/CoreObject~Object} and [subkinds]{@glossary subkind} when using the\r\n* {@link module:enyo/CoreObject~Object#log}, {@link module:enyo/CoreObject~Object#warn} and {@link module:enyo/CoreObject~Object#error} methods.\r\n*\r\n* @private\r\n*/\r\nfunction log (method, args) {\r\n\tif (logger.shouldLog(method)) {\r\n\t\ttry {\r\n\t\t\tthrow new Error();\r\n\t\t} catch(err) {\r\n\t\t\tlogger._log(method, [args.callee.caller.displayName + ': ']\r\n\t\t\t\t.concat(utils.cloneArray(args)));\r\n\t\t\tlogger.log(err.stack);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n* {@link module:enyo/CoreObject~Object} lies at the heart of the Enyo framework's implementations of property\r\n* publishing, computed properties (via the [ComputedSupport]{@link module:enyo/ComputedSupport}\r\n* {@glossary mixin}), and data binding (via the {@link module:enyo/BindingSupport~BindingSupport} mixin and\r\n* {@link module:enyo/Binding~Binding} object). It also provides several utility [functions]{@glossary Function}\r\n* for its [subkinds]{@glossary subkind}.\r\n*\r\n* @class Object\r\n* @mixes module:enyo/MixinSupport\r\n* @mixes module:enyo/ObserverSupport\r\n* @mixes module:enyo/BindingSupport\r\n* @public\r\n*/\r\nvar CoreObject = module.exports = kind(\r\n\t/** @lends module:enyo/CoreObject~Object.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.Object',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: null,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\r\n\r\n\t/**\r\n\t* Will be `true` if the [destroy()]{@link module:enyo/CoreObject~Object#destroy} method has been called;\r\n\t* otherwise, `false`.\r\n\t*\r\n\t* @readonly\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tdestroyed: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmixins: [MixinSupport, ObserverSupport, BindingSupport],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: function (props) {\r\n\t\tthis.importProps(props);\r\n\t},\r\n\r\n\t/**\r\n\t* Imports the values from the given [object]{@glossary Object}. Automatically called\r\n\t* from the [constructor]{@link module:enyo/CoreObject~Object#constructor}.\r\n\t*\r\n\t* @param {Object} props - If provided, the [object]{@glossary Object} from which to\r\n\t*\tretrieve [keys/values]{@glossary Object.keys} to mix in.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\timportProps: function (props) {\r\n\t\tvar key;\r\n\r\n\t\tif (props) {\r\n\t\t\tkind.concatHandler(this, props, true);\r\n\t\t\t// if props is a default hash this is significantly faster than\r\n\t\t\t// requiring the hasOwnProperty check every time\r\n\t\t\tif (!props.kindName) {\r\n\t\t\t\tfor (key in props) {\r\n\t\t\t\t\tkind.concatenated.indexOf(key) === -1 && (this[key] = props[key]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (key in props) {\r\n\t\t\t\t\tif (kind.concatenated.indexOf(key) === -1 && props.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tthis[key] = props[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Calls the [destroy()]{@link module:enyo/CoreObject~Object#destroy} method for the named {@link module:enyo/CoreObject~Object} \r\n\t* property.\r\n\t*\r\n\t* @param {String} name - The name of the property to destroy, if possible.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tdestroyObject: function (name) {\r\n\t\tif (this[name] && this[name].destroy) {\r\n\t\t\tthis[name].destroy();\r\n\t\t}\r\n\t\tthis[name] = null;\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Sends a log message to the [console]{@glossary console}, prepended with the name\r\n\t* of the {@glossary kind} and method from which `log()` was invoked. Multiple\r\n\t* {@glossary arguments} are coerced to {@glossary String} and\r\n\t* [joined with spaces]{@glossary Array.join}.\r\n\t*\r\n\t* ```javascript\r\n\t* var kind = require('enyo/kind'),\r\n\t*     Object = require('enyo/CoreObject');\r\n\t* kind({\r\n\t*\tname: 'MyObject',\r\n\t*\tkind: Object,\r\n\t*\thello: function() {\r\n\t*\t\tthis.log('says', 'hi');\r\n\t*\t\t// shows in the console: MyObject.hello: says hi\r\n\t*\t}\r\n\t* });\r\n\t* ```\r\n\t* @public\r\n\t*/\r\n\tlog: function () {\r\n\t\tvar acc = arguments.callee.caller,\r\n\t\t\tnom = ((acc ? acc.displayName : '') || '(instance method)') + ':',\r\n\t\t\targs = Array.prototype.slice.call(arguments);\r\n\t\targs.unshift(nom);\r\n\t\tlogger.log('log', args);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Same as [log()]{@link module:enyo/CoreObject~Object#log}, except that it uses the \r\n\t* console's [warn()]{@glossary console.warn} method (if it exists).\r\n\t*\r\n\t* @public\r\n\t*/\r\n\twarn: function () {\r\n\t\tlog('warn', arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Same as [log()]{@link module:enyo/CoreObject~Object#log}, except that it uses the \r\n\t* console's [error()]{@glossary console.error} method (if it exists).\r\n\t*\r\n\t* @public\r\n\t*/\r\n\terror: function () {\r\n\t\tlog('error', arguments);\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the value for the given path. The value may be retrieved as long as the given \r\n\t* path is resolvable relative to the given {@link module:enyo/CoreObject~Object}. See\r\n\t* [getPath()]{@link module:enyo/utils#getPath} for complete details.\r\n\t*\r\n\t* This method is backwards-compatible and will automatically call any existing getter\r\n\t* method that uses the \"getProperty\" naming convention. (Moving forward, however, Enyo code\r\n\t* should use [computed properties]{@link module:enyo/ComputedSupport} instead of relying on the\r\n\t* getter naming convention.)\r\n\t*\r\n\t* @param {String} path - The path from which to retrieve a value.\r\n\t* @returns {*} The value for the given path or [undefined]{@glossary undefined} if \r\n\t*\tthe path could not be completely resolved.\r\n\t* @public\r\n\t*/\r\n\tget: function () {\r\n\t\treturn utils.getPath.apply(this, arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t* Updates the value for the given path. The value may be set as long as the\r\n\t* given path is resolvable relative to the given {@link module:enyo/CoreObject~Object}. See\r\n\t* [setPath()]{@link module:enyo/utils#setPath} for complete details.\r\n\t*\r\n\t* @param {String} path - The path for which to set the given value.\r\n\t* @param {*} value - The value to set.\r\n\t* @param {Object} [opts] - An options hash.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tset: function () {\r\n\t\treturn utils.setPath.apply(this, arguments);\r\n\t},\r\n\r\n\t/**\r\n\t* Binds a [callback]{@glossary callback} to this [object]{@link module:enyo/CoreObject~Object}.\r\n\t* If the object has been destroyed, the bound method will be aborted cleanly,\r\n\t* with no value returned.\r\n\t*\r\n\t* This method should generally be used instead of {@link module:enyo/utils#bind} for running\r\n\t* code in the context of an instance of {@link module:enyo/CoreObject~Object} or one of its\r\n\t* [subkinds]{@glossary subkind}.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tbindSafely: function () {\r\n\t\tvar args = Array.prototype.slice.call(arguments);\r\n\t\targs.unshift(this);\r\n\t\treturn utils.bindSafely.apply(null, args);\r\n\t},\r\n\t\r\n\t/**\r\n\t* An abstract method (primarily) that sets the [destroyed]{@link module:enyo/CoreObject~Object#destroyed} \r\n\t* property to `true`.\r\n\t*\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tdestroy: function () {\r\n\t\t\r\n\t\t// Since JS objects are never truly destroyed (GC'd) until all references are\r\n\t\t// gone, we might have some delayed action on this object that needs access\r\n\t\t// to this flag.\r\n\t\t// Using this.set to make the property observable\r\n\t\treturn this.set('destroyed', true);\r\n\t}\r\n});\r\n\r\n/**\r\n* @private\r\n*/\r\nCoreObject.concat = function (ctor, props) {\r\n\tvar pubs = props.published,\r\n\t\tcpy,\r\n\t\tprop;\r\n\t\t\r\n\tif (pubs) {\r\n\t\tcpy = ctor.prototype || ctor;\r\n\t\tfor (prop in pubs) {\r\n\t\t\t// need to make sure that even though a property is 'published'\r\n\t\t\t// it does not overwrite any computed properties\r\n\t\t\tif (props[prop] && typeof props[prop] == 'function') continue;\r\n\t\t\taddGetterSetter(prop, pubs[prop], cpy);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n* This method creates a getter/setter for a published property of an {@link module:enyo/CoreObject~Object}, but is\r\n* deprecated. It is maintained for purposes of backwards compatibility. The preferred method is \r\n* to mark public and protected (private) methods and properties using documentation or other \r\n* means and rely on the [get]{@link module:enyo/CoreObject~Object#get} and [set]{@link module:enyo/CoreObject~Object#set} methods of\r\n* {@link module:enyo/CoreObject~Object} instances.\r\n*\r\n* @private\r\n*/\r\nfunction addGetterSetter (prop, value, proto) {\r\n\t\r\n\t// so we don't need to re-execute this over and over and over...\r\n\tvar cap = utils.cap(prop),\r\n\t\tgetName = 'get' + cap,\r\n\t\tsetName = 'set' + cap,\r\n\t\tgetters = proto._getters || (proto._getters = {}),\r\n\t\tsetters = proto._setters || (proto._setters = {}),\r\n\t\tfn;\r\n\t\r\n\t// we assign the default value from the published block to the prototype\r\n\t// so it will be initialized properly\r\n\tproto[prop] = value;\r\n\t\r\n\t// check for a supplied getter and if there isn't one we create one otherwise\r\n\t// we mark the supplied getter in the tracking object so the global getPath will\r\n\t// know about it\r\n\tif (!(fn = proto[getName]) || typeof fn != 'function') {\r\n\t\tfn = proto[getName] = function () {\r\n\t\t\treturn utils.getPath.fast.call(this, prop);\r\n\t\t};\r\n\t\t\r\n\t\t// and we mark it as generated\r\n\t\tfn.generated = true;\r\n\t} else if (fn && typeof fn == 'function' && !fn.generated) getters[prop] = getName;\r\n\t\r\n\t// we need to do the same thing for the setters\r\n\tif (!(fn = proto[setName]) || typeof fn != 'function') {\r\n\t\tfn = proto[setName] = function (val) {\r\n\t\t\treturn utils.setPath.fast.call(this, prop, val);\r\n\t\t};\r\n\t\t\r\n\t\t// and we mark it as generated\r\n\t\tfn.generated = true;\r\n\t} else if (fn && typeof fn == 'function' && !fn.generated) setters[prop] = setName;\r\n}\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Store~Store} kind.\r\n* @module enyo/Store\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tModelList = require('./ModelList'),\r\n\tEventEmitter = require('./EventEmitter'),\r\n\tCoreObject = require('./CoreObject');\r\n\r\n/**\r\n* Only necessary because of the order in which mixins are applied.\r\n*\r\n* @class\r\n* @private\r\n*/\r\nvar BaseStore = kind({\r\n\tkind: CoreObject,\r\n\tmixins: [EventEmitter]\r\n});\r\n\r\n/**\r\n* This method should determine whether the given [model]{@link module:enyo/Model~Model}\r\n* should be included in the filtered set for the [find()]{@link module:enyo/Store~Store#find}\r\n* method.\r\n* \r\n* @callback module:enyo/Store~Store~Filter\r\n* @param {module:enyo/Model~Model} model - The [model]{@link module:enyo/Model~Model} to filter.\r\n* @returns {Boolean} `true` if the model meets the filter requirements;\r\n* otherwise, `false`.\r\n*/\r\n\r\n/**\r\n* The configuration options for the [find()]{@link module:enyo/Store~Store#find} method.\r\n* \r\n* @typedef {Object} module:enyo/Store~Store~FindOptions\r\n* @property {Boolean} all=true - Whether or not to include more than one match for the\r\n*\tfilter method. If `true`, an array of matches is returned; otherwise, a single match.\r\n* @property {Object} context - If provided, it will be used as the `this` (context) of\r\n*\tthe filter method.\r\n*/\r\n\r\n/**\r\n* An anonymous kind used internally for the singleton {@link module:enyo/Store~Store}.\r\n* \r\n* @class Store\r\n* @mixes module:enyo/EventEmitter\r\n* @extends module:enyo/CoreObject~Object\r\n* @protected\r\n*/\r\nvar Store = kind(\r\n\t/** @lends module:enyo/Store~Store.prototype */ {\r\n\t\r\n\tname: 'enyo.Store',\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: BaseStore,\r\n\t\r\n\t/**\r\n\t* Finds a [model (or models)]{@link module:enyo/Model~Model} of a certain [kind]{@glossary kind}.\r\n\t* It uses the return value from a filter method to determine whether a particular\r\n\t* model will be included. Set the optional `all` flag to `true` to ensure that\r\n\t* the method looks for all matches; otherwise, it will return the first positive\r\n\t* match.\r\n\t* \r\n\t* @see {@glossary Array.find}\r\n\t* @param {module:enyo/Model~Model} ctor - The constructor for the [kind]{@glossary kind} of\r\n\t*\t[model]{@link module:enyo/Model~Model} to be filtered.\r\n\t* @param {module:enyo/Store~Store~Filter} fn - The filter method.\r\n\t* @param {module:enyo/Store~Store~FindOptions} [opts] - The options parameter.\r\n\t* @returns {(module:enyo/Model~Model|module:enyo/Model~Model[]|undefined)} If the `all` flag is `true`,\r\n\t*\treturns an array of models; otherwise, returns the first model that returned\r\n\t*\tthat returned `true` from the filter method. Returns `undefined` if `all` is\r\n\t* `false` and no match could be found.\r\n\t* @public\r\n\t*/\r\n\tfind: function (ctor, fn, opts) {\r\n\t\tvar kindName = ctor.prototype.kindName,\r\n\t\t\tlist = this.models[kindName],\r\n\t\t\toptions = {all: true, context: this};\r\n\t\t\r\n\t\t// allows the method to be called with a constructor only and will return an\r\n\t\t// immutable copy of the array of all models of that type or an empty array\r\n\t\tif (arguments.length == 1 || typeof fn != 'function') {\r\n\t\t\treturn list ? list.slice() : [];\r\n\t\t}\r\n\t\t\r\n\t\t// ensure we use defaults with any provided options\r\n\t\topts = opts ? utils.mixin({}, [options, opts]) : options;\r\n\t\t\t\r\n\t\tif (list) return opts.all ? list.filter(fn, opts.context) : list.find(fn, opts.context);\r\n\t\t\r\n\t\t// if it happens it could not find a list for the requested kind we fudge the return\r\n\t\t// so it can keep on executing\r\n\t\telse return opts.all ? [] : undefined;\r\n\t},\r\n\t\r\n\t/**\r\n\t* This method is an alias for [find()]{@link module:enyo/Store~Store#find}.\r\n\t*\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tfindLocal: function () {\r\n\t\treturn this.find.apply(this, arguments);\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tadd: function (models, opts) {\r\n\t\tvar ctor = models && (models instanceof Array ? models[0].ctor : models.ctor),\r\n\t\t\tkindName = ctor && ctor.prototype.kindName,\r\n\t\t\tlist = kindName && this.models[kindName],\r\n\t\t\tadded,\r\n\t\t\ti;\r\n\t\t\t\r\n\t\t// if we were able to find the list then we go ahead and attempt to add the models\r\n\t\tif (list) {\r\n\t\t\tadded = list.add(models);\r\n\t\t\t// if we successfully added models and this was a default operation (not being\r\n\t\t\t// batched by a collection or other feature) we emit the event needed primarily\r\n\t\t\t// by relational models but could be useful other places\r\n\t\t\tif (added.length && (!opts || !opts.silent)) {\r\n\t\t\t\tfor (i = 0; i < added.length; ++i) {\r\n\t\t\t\t\tthis.emit(ctor, 'add', {model: added[i]});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tremove: function (models, opts) {\r\n\t\tvar ctor = models && (models instanceof Array ? models[0].ctor : models.ctor),\r\n\t\t\tkindName = ctor && ctor.prototype.kindName,\r\n\t\t\tlist = kindName && this.models[kindName],\r\n\t\t\tremoved,\r\n\t\t\ti;\r\n\t\t\r\n\t\t// if we were able to find the list then we go ahead and attempt to remove the models\r\n\t\tif (list) {\r\n\t\t\tremoved = list.remove(models);\r\n\t\t\t// if we successfully removed models and this was a default operation (not being\r\n\t\t\t// batched by a collection or other feature) we emit the event. Needed primarily\r\n\t\t\t// by relational models but could be useful other places\r\n\t\t\tif (removed.length && (!opts || !opts.silent)) {\r\n\t\t\t\tfor (i = 0; i < removed.length; ++i) {\r\n\t\t\t\t\tthis.emit(ctor, 'remove', {model: removed[i]});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\t/**\r\n\t* Determines, from the given parameters, whether the [store]{@link module:enyo/Store~Store}\r\n\t* has a specific [model]{@link module:enyo/Model~Model}.\r\n\t*\r\n\t* @param {(Function|module:enyo/Model~Model)} ctor Can be the constructor for an {@link module:enyo/Model~Model}\r\n\t*\tor a model instance. Must be a constructor unless a model instance is passed as the\r\n\t* optional `model` parameter.\r\n\t* @param {(String|Number|module:enyo/Model~Model)} [model] If the `ctor` parameter is a\r\n\t*\tconstructor, this may be a [Number]{@glossary Number} or a [String]{@glossary String}\r\n\t* representing a [primaryKey]{@link module:enyo/Model~Model#primaryKey} for the given model, or an\r\n\t*\tinstance of a model.\r\n\t* @returns {Boolean} Whether or not the [store]{@link module:enyo/Store~Store} has the given\r\n\t*\t[model]{@link module:enyo/Model~Model}.\r\n\t* @public\r\n\t*/\r\n\thas: function (ctor, model) {\r\n\t\tvar list;\r\n\t\t\r\n\t\tif (!model) {\r\n\t\t\tmodel = ctor;\r\n\t\t\tctor = model.ctor;\r\n\t\t}\r\n\t\t\r\n\t\tlist = this.models[ctor.prototype.kindName];\r\n\t\treturn list ? list.has(model) : false;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tresolve: function (ctor, model) {\r\n\t\tvar list = this.models[ctor && ctor.prototype.kindName];\r\n\t\treturn list? list.resolve(model): undefined;\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t\r\n\t\t\tthis._scopeListeners = [];\r\n\t\t\t\r\n\t\t\t// all future sub-kinds of enyo.Model that are processed will automatically\r\n\t\t\t// create/add their entries to this object in their concat method\r\n\t\t\tthis.models = {\r\n\t\t\t\t'enyo.Model': new ModelList()\r\n\t\t\t};\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tscopeListeners: function (scope, e) {\r\n\t\treturn !scope ? this._scopeListeners : this._scopeListeners.filter(function (ln) {\r\n\t\t\treturn ln.scope === scope ? !e ? true : ln.event == e : false;\r\n\t\t});\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ton: kind.inherit(function (sup) {\r\n\t\treturn function (ctor, e, fn, ctx) {\r\n\t\t\tif (typeof ctor == 'function') {\r\n\t\t\t\tthis.scopeListeners().push({\r\n\t\t\t\t\tscope: ctor,\r\n\t\t\t\t\tevent: e,\r\n\t\t\t\t\tmethod: fn,\r\n\t\t\t\t\tctx: ctx || this\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\toff: kind.inherit(function (sup) {\r\n\t\treturn function (ctor, e, fn) {\r\n\t\t\tvar listeners,\r\n\t\t\t\tidx;\r\n\t\t\t\r\n\t\t\tif (typeof ctor == 'function') {\r\n\t\t\t\tlisteners = this.scopeListeners(ctor);\r\n\t\t\t\tif (listeners.length) {\r\n\t\t\t\t\tidx = listeners.findIndex(function (ln) {\r\n\t\t\t\t\t\treturn ln.event == e && ln.method === fn;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if it found the entry we remove it\r\n\t\t\t\t\tif (idx >= 0) listeners.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\temit: kind.inherit(function (sup) {\r\n\t\treturn function (ctor, e) {\r\n\t\t\tvar listeners,\r\n\t\t\t\targs;\r\n\t\t\t\r\n\t\t\tif (typeof ctor == 'function') {\r\n\t\t\t\tlisteners = this.scopeListeners(ctor, e);\r\n\t\t\t\t\r\n\t\t\t\tif (listeners.length) {\r\n\t\t\t\t\targs = utils.toArray(arguments).slice(1);\r\n\t\t\t\t\targs.unshift(this);\r\n\t\t\t\t\tlisteners.forEach(function (ln) {\r\n\t\t\t\t\t\tln.method.apply(ln.ctx, args);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t})\r\n});\r\n\r\n/**\r\n* A runtime database for working with [models]{@link module:enyo/Model~Model}. It is primarily used\r\n* internally by data layer [kinds]{@glossary kind} ({@link module:enyo/Model~Model},\r\n* {@link module:enyo/Collection~Collection}, and {@link module:enyo/RelationalModel~RelationalModel}).\r\n* \r\n* @see module:enyo/Model~Model\r\n* @see module:enyo/Collection~Collection\r\n* @see module:enyo/RelationalModel~RelationalModel\r\n* @type module:enyo/Store~Store\r\n* @public\r\n*/\r\nmodule.exports = new Store();\r\n","require('enyo');\r\n\r\nvar\r\n\tutils = require('./utils'),\r\n\tkind = require('./kind');\r\n\t\r\nvar CoreObject = require('./CoreObject');\r\n\r\n/**\r\n* The {@link module:enyo/jobs} singleton provides a mechanism for queueing tasks\r\n* (i.e., functions) for execution in order of priority. The execution of the\r\n* current job stack may be blocked programmatically by setting a priority\r\n* level (run level) below which no jobs are executed.\r\n*\r\n* At the moment, only {@link module:enyo/Animator~Animator} uses this interface, setting a\r\n* priority of 4, which blocks all low priority tasks from executing during\r\n* animations. To maintain backward compatibility, jobs are assigned a priority\r\n* of 5 by default; thus they are not blocked by animations.\r\n*\r\n* Normally, application code will not use `enyo/jobs` directly, but will\r\n* instead use the [job()]{@link module:enyo/Component~Component#job} method of\r\n* {@link module:enyo/Component~Component}.\r\n*\r\n* @module enyo/jobs\r\n* @public\r\n*/\r\nmodule.exports = kind.singleton(\r\n\t/** @lends module:enyo/jobs */ {\r\n\t\r\n\tkind: CoreObject,\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished: /** @lends module:enyo/jobs~jobs */ {\r\n\t\t\r\n\t\t/**\r\n\t\t* The current priority level.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default 0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tpriorityLevel: 0\r\n\t},\r\n\t\r\n\t/**\r\n\t* Prioritized by index.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_jobs: [ [], [], [], [], [], [], [], [], [], [] ],\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_priorities: {},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_namedJobs: {},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_magicWords: {\r\n\t\t'low': 3,\r\n\t\t'normal': 5,\r\n\t\t'high': 7\r\n\t},\r\n\t\r\n\t/**\r\n\t* Adds a [job]{@link module:enyo/job} to the job queue. If the current priority\r\n\t* level is higher than this job's priority, this job gets deferred until the\r\n\t* job level drops; if it is lower, this job is run immediately.\r\n\t*\r\n\t* @param {Function} job - The actual {@glossary Function} to execute as the\r\n\t* [job]{@link module:enyo/job}.\r\n\t* @param {Number} priority - The priority of the job.\r\n\t* @param {String} nom - The name of the job for later reference.\r\n\t* @public\r\n\t*/\r\n\tadd: function (job, priority, nom) {\r\n\t\tpriority = priority || 5;\r\n\r\n\t\t// magic words: low = 3, normal = 5, high = 7\r\n\t\tpriority = utils.isString(priority) ? this._magicWords[priority] : priority;\r\n\r\n\t\t// if a job of the same name exists, remove it first (replace it)\r\n\t\tif(nom){\r\n\t\t\tthis.remove(nom);\r\n\t\t\tthis._namedJobs[nom] = priority;\r\n\t\t}\r\n\r\n\t\t// if the job is of higher priority than the current priority level then\r\n\t\t// there's no point in queueing it\r\n\t\tif(priority >= this.priorityLevel){\r\n\t\t\tjob();\r\n\t\t} else {\r\n\t\t\tthis._jobs[priority - 1].push({fkt: job, name: nom});\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* Will remove the named [job]{@link module:enyo/job} from the queue.\r\n\t*\r\n\t* @param {String} nom - The name of the [job]{@link module:enyo/job} to remove.\r\n\t* @returns {Array} An {@glossary Array} that will contain the removed job if\r\n\t* it was found, or empty if it was not found.\r\n\t* @public\r\n\t*/\r\n\tremove: function (nom) {\r\n\t\tvar jobs = this._jobs[this._namedJobs[nom] - 1];\r\n\t\tif(jobs){\r\n\t\t\tfor(var j = jobs.length-1; j >= 0; j--){\r\n\t\t\t\tif(jobs[j].name === nom){\r\n\t\t\t\t\treturn jobs.splice(j, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* Adds a new priority level at which jobs will be executed. If it is higher than the\r\n\t* highest current priority, the priority level rises. Newly added jobs below that priority\r\n\t* level are deferred until the priority is removed (i.e., unregistered).\r\n\t*\r\n\t* @param {Number} priority - The priority value to register.\r\n\t* @param {String} id - The name of the priority.\r\n\t* @public\r\n\t*/\r\n\tregisterPriority: function(priority, id) {\r\n\t\tthis._priorities[id] = priority;\r\n\t\tthis.setPriorityLevel( Math.max(priority, this.priorityLevel) );\r\n\t},\r\n\t\r\n\t/**\r\n\t* Removes a priority level. If the removed priority was previously the\r\n\t* highest priority, the priority level drops to the next highest priority\r\n\t* and queued jobs with a higher priority are executed.\r\n\t*\r\n\t* @param {String} id - The name of the priority level to remove.\r\n\t* @public\r\n\t*/\r\n\tunregisterPriority: function (id) {\r\n\t\tvar highestPriority = 0;\r\n\r\n\t\t// remove priority\r\n\t\tdelete this._priorities[id];\r\n\r\n\t\t// find new highest current priority\r\n\t\tfor( var i in this._priorities ){\r\n\t\t\thighestPriority = Math.max(highestPriority, this._priorities[i]);\r\n\t\t}\r\n\r\n\t\tthis.setPriorityLevel( highestPriority );\r\n\t},\r\n\t\r\n\t/**\r\n\t* Tries to run next job if priority level has dropped.\r\n\t*\r\n\t* @type {module:enyo/ObserverSupport~ObserverSupport~Observer}\r\n\t* @private\r\n\t*/\r\n\tpriorityLevelChanged: function (was) {\r\n\t\tif(was > this.priorityLevel){\r\n\t\t\tthis._doJob();\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t* Finds and executes the job of highest priority; in this way, all jobs with priority\r\n\t* greater than or equal to the current level are run, in order of their priority (highest\r\n\t* to lowest).\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_doJob: function () {\r\n\t\tvar job;\r\n\t\t// find the job of highest priority above the current priority level\r\n\t\t// and remove from the job list\r\n\t\tfor (var i = 9; i >= this.priorityLevel; i--){\r\n\t\t\tif (this._jobs[i].length) {\r\n\t\t\t\tjob = this._jobs[i].shift();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// allow other events to pass through\r\n\t\tif (job) {\r\n\t\t\tjob.fkt();\r\n\t\t\tdelete this._namedJobs[job.name];\r\n\t\t\tsetTimeout(utils.bind(this, '_doJob'), 10);\r\n\t\t}\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Model~Model} kind.\r\n* @module enyo/Model\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tObserverSupport = require('./ObserverSupport'),\r\n\tComputedSupport = require('./ComputedSupport'),\r\n\tBindingSupport = require('./BindingSupport'),\r\n\tEventEmitter = require('./EventEmitter'),\r\n\tStateSupport = require('./StateSupport'),\r\n\tModelList = require('./ModelList'),\r\n\tSource = require('./Source'),\r\n\tStates = require('./States'),\r\n\tStore = require('./Store');\r\n\r\n/**\r\n* This is only necessary because of the order in which mixins are applied.\r\n*\r\n* @class\r\n* @private\r\n*/\r\nvar BaseModel = kind({\r\n\tkind: null,\r\n\tmixins: [ObserverSupport, ComputedSupport, BindingSupport, EventEmitter, StateSupport]\r\n});\r\n\r\n/**\r\n* The event emitted when [attributes]{@link module:enyo/Model~Model#attributes} have been modified.\r\n* The event [object]{@glossary Object} will consist of key/value pairs of attributes\r\n* that changed and their new values.\r\n*\r\n* @event module:enyo/Model~Model#change\r\n* @type {Object}\r\n* @public\r\n*/\r\n\r\n/**\r\n* The default configurable [options]{@link module:enyo/Model~Model#options} used in certain API methods\r\n* of {@link module:enyo/Model~Model}.\r\n*\r\n* @typedef {Object} module:enyo/Model~Model~Options\r\n* @property {Boolean} silent=false - Keep events and notifications from being emitted.\r\n* @property {Boolean} commit=false - Immediately [commit]{@link module:enyo/Model~Model#commit} changes\r\n*\tafter they have occurred. Also note that, if `true`, when the [model]{@link module:enyo/Model~Model}\r\n* is [destroyed]{@link module:enyo/Model~Model#destroy}, it will also be destroyed via any\r\n* [sources]{@link module:enyo/Model~Model#source} it has.\r\n* @property {Boolean} parse=false - During initialization, [parse]{@link module:enyo/Model~Model#parse}\r\n*\tany given [attributes]{@link module:enyo/Model~Model#attributes}; after\r\n*\t[fetching]{@link module:enyo/Model~Model#fetch}, parse the data before calling\r\n* [set()]{@link module:enyo/Model~Model#set}.\r\n* @property {Boolean} fetch=false - Automatically call [fetch()]{@link module:enyo/Model~Model#fetch}\r\n*\tduring initialization.\r\n*/\r\n\r\n/**\r\n* The configurable options for [fetch()]{@link module:enyo/Model~Model#fetch},\r\n* [commit()]{@link module:enyo/Model~Model#commit}, and [destroy()]{@link module:enyo/Model~Model#destroy}.\r\n*\r\n* @typedef {module:enyo/Model~Model~Options} module:enyo/Model~Model~ActionOptions\r\n* @property {module:enyo/Model~Model~Success} success - The callback executed upon successful\r\n*\tcompletion.\r\n* @property {module:enyo/Model~Model~Error} error - The callback executed upon a failed attempt.\r\n*/\r\n\r\n/**\r\n* @callback module:enyo/Model~Model~Success\r\n* @param {module:enyo/Model~Model} model - The [model]{@link module:enyo/Model~Model} that is returning successfully.\r\n* @param {module:enyo/Model~Model~ActionOptions} opts - The original options passed to the action method\r\n*\tthat is returning successfully.\r\n* @param {*} res - The result, if any, returned by the [source]{@link module:enyo/Source~Source} that\r\n*\texecuted it.\r\n* @param {String} source - The name of the [source]{@link module:enyo/Model~Model#source} that has\r\n* returned successfully.\r\n*/\r\n\r\n/**\r\n* @callback module:enyo/Model~Model~Error\r\n* @param {module:enyo/Model~Model} model - The model that is returning an error.\r\n* @param {String} action - The name of the action that failed, one of `'FETCHING'`,\r\n*\t`'COMMITTING'`, or `'DESTROYING'`.\r\n* @param {module:enyo/Model~Model~Options} opts - The original options passed to the action method\r\n*\tthat is returning an error.\r\n* @param {*} res - The result, if any, returned by the [source]{@link module:enyo/Source~Source} that\r\n*\texecuted it.\r\n* @param {String} source - The name of the [source]{@link module:enyo/Model~Model#source} that has\r\n*\treturned an error.\r\n*/\r\n\r\n/**\r\n* An [object]{@glossary Object} used to represent and maintain state. Usually,\r\n* an {@link module:enyo/Model~Model} is used to expose data to the view layer. It keeps logic\r\n* related to the data (retrieving it, updating it, storing it, etc.) out of the\r\n* view, and the view can automatically update based on changes in the model.\r\n* Models have the ability to work with other data layer [kinds]{@glossary kind}\r\n* to provide more sophisticated implementations.\r\n*\r\n* Models have [bindable]{@link module:enyo/BindingSupport~BindingSupport}\r\n* [attributes]{@link module:enyo/Model~Model#attributes}. Models differs from other\r\n* bindable kinds in that attribute values are proxied from an internal\r\n* [hash]{@glossary Object} instead of being set on the target properties\r\n* directly.\r\n*\r\n* @see module:enyo/Store~Store\r\n* @see module:enyo/Collection~Collection\r\n* @see module:enyo/RelationalModel~RelationalModel\r\n* @see module:enyo/ModelController~ModelController\r\n* @class Model\r\n* @mixes module:enyo/ObserverSupport~ObserverSupport\r\n* @mixes module:enyo/ComputedSupport~ComputedSupport\r\n* @mixes module:enyo/BindingSupport~BindingSupport\r\n* @mixes module:enyo/EventEmitter\r\n* @mixes module:enyo/StateSupport~StateSupport\r\n* @public\r\n*/\r\nvar Model = module.exports = kind(\r\n\t/** @lends module:enyo/Model~Model.prototype */ {\r\n\r\n\tname: 'enyo.Model',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: BaseModel,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\r\n\r\n\t/**\r\n\t* Used by various [sources]{@link module:enyo/Model~Model#source} as part of the\r\n\t* [URI]{@glossary URI} from which they may be [fetched]{@link module:enyo/Model~Model#fetch},\r\n\t* [committed]{@link module:enyo/Model~Model#commit}, or [destroyed]{@link module:enyo/Model~Model#destroy}.\r\n\t* Some sources may use this property in other ways.\r\n\t*\r\n\t* @see module:enyo/Model~Model#getUrl\r\n\t* @see module:enyo/Source~Source\r\n\t* @see module:enyo/AjaxSource~AjaxSource\r\n\t* @see module:enyo/JsonpSource~JsonpSource\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\turl: '',\r\n\r\n\t/**\r\n\t* Implement this method to be used by [sources]{@link module:enyo/Model~Model#source} to\r\n\t* dynamically derive the [URI]{@glossary URI} from which they may be\r\n\t* [fetched]{@link module:enyo/Model~Model#fetch}, [committed]{@link module:enyo/Model~Model#commit},\r\n\t* or [destroyed]{@link module:enyo/Model~Model#destroy}. Some sources may use this\r\n\t* property in other ways. Note that, if this method is implemented, the\r\n\t* [url]{@link module:enyo/Model~Model#url} will not be used.\r\n\t*\r\n\t* @see module:enyo/Model~Model#url\r\n\t* @see module:enyo/Source~Source\r\n\t* @see module:enyo/AjaxSource~AjaxSource\r\n\t* @see module:enyo/JsonpSource~JsonpSource\r\n\t* @type {Function}\r\n\t* @default null\r\n\t* @virtual\r\n\t* @public\r\n\t*/\r\n\tgetUrl: null,\r\n\r\n\t/**\r\n\t* The [hash]{@glossary Object} of properties proxied by this [model]{@link module:enyo/Model~Model}.\r\n\t* If defined on a [subkind]{@glossary subkind}, it may be assigned default values and\r\n\t* all instances will share its default structure. If no attributes are defined, an\r\n\t* empty [hash]{@glossary Object} will be assigned during initialization. It is not\r\n\t* necessary to pre-define the structure of a model; depending on the model's complexity,\r\n\t* pre-defining the structure may possibly hinder performance.\r\n\t*\r\n\t* It should also be noted that calls to [get()]{@link module:enyo/Model~Model#get} or\r\n\t* [set()]{@link module:enyo/Model~Model#set} will access and modify this property. This includes\r\n\t* the values to which (or from which) [bindings]{@link module:enyo/BindingSupport~BindingSupport} are bound.\r\n\t*\r\n\t* @type {Object}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tattributes: null,\r\n\r\n\t/**\r\n\t* The [source(s)]{@link module:enyo/Source~Source} to use when [fetching]{@link module:enyo/Model~Model#fetch},\r\n\t* [committing]{@link module:enyo/Model~Model#commit}, or [destroying]{@link module:enyo/Model~Model#destroy}.\r\n\t* Any method that uses sources may override this default value in its configuration\r\n\t* options. This value may be a [string]{@glossary String}, an\r\n\t* [Array]{@glossary Array} of strings, an instance of {@link module:enyo/Source~Source}, or an\r\n\t* array of `enyo/Source` instances.\r\n\t*\r\n\t* @see module:enyo/Source~Source\r\n\t* @see module:enyo/Model~Model#fetch\r\n\t* @see module:enyo/Model~Model#commit\r\n\t* @see module:enyo/Model~Model#destroy\r\n\t* @type {(String|String[]|module:enyo/Source~Source|module:enyo/Source~Source[])}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tsource: null,\r\n\r\n\t/**\r\n\t* These [keys]{@glossary Object.keys} will be the only\r\n\t* [attributes]{@link module:enyo/Model~Model#attributes} included if the\r\n\t* [model]{@link module:enyo/Model~Model} is [committed]{@link module:enyo/Model~Model#commit}. This\r\n\t* directly modifies the result of calling [raw()]{@link module:enyo/Model~Model#raw}. If\r\n\t* not defined, all keys from the [attributes]{@link module:enyo/Model~Model#attributes}\r\n\t* [hash]{@glossary Object} will be used.\r\n\t*\r\n\t* @see module:enyo/Model~Model#raw\r\n\t* @see module:enyo/Model~Model#toJSON\r\n\t* @type {String[]}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tincludeKeys: null,\r\n\r\n\t/**\r\n\t* The inheritable default configuration options. These specify the behavior of particular\r\n\t* API features of {@link module:enyo/Model~Model}. Any method that uses these options may override\r\n\t* the default values in its own configuration options. Note that setting an\r\n\t* [options hash]{@glossary Object} on a [subkind]{@glossary subkind} will result in\r\n\t* the new values' being merged with--not replacing--the\r\n\t* [superkind's]{@glossary superkind} own `options`.\r\n\t*\r\n\t* @type {module:enyo/Model~Model~Options}\r\n\t* @public\r\n\t*/\r\n\toptions: {\r\n\t\tsilent: false,\r\n\t\tcommit: false,\r\n\t\tparse: false,\r\n\t\tfetch: false\r\n\t},\r\n\r\n\t/**\r\n\t* The current [state(s)]{@link module:enyo/States} possessed by the [model]{@link module:enyo/Model~Model}.\r\n\t* There are limitations as to which state(s) the model may possess at any given time.\r\n\t* By default, a model is [NEW]{@link module:enyo/States#NEW} and [CLEAN]{@link module:enyo/States#CLEAN}.\r\n\t* Note that this is **not** a [bindable]{@link module:enyo/BindingSupport~BindingSupport} property.\r\n\t*\r\n\t* @see module:enyo/States~States\r\n\t* @see {@link module:enyo/StateSupport~StateSupport}\r\n\t* @type {module:enyo/States~States}\r\n\t* @readonly\r\n\t* @public\r\n\t*/\r\n\tstatus: States.NEW | States.CLEAN,\r\n\r\n\t/**\r\n\t* The unique attribute by which the [model]{@link module:enyo/Model~Model} may be indexed. The\r\n\t* attribute's value must be unique across all instances of the specific model\r\n\t* [kind]{@glossary kind}\r\n\t*\r\n\t* @type {String}\r\n\t* @default 'id'\r\n\t* @public\r\n\t*/\r\n\tprimaryKey: 'id',\r\n\r\n\t/**\r\n\t* Inspects and restructures incoming data prior to [setting]{@link module:enyo/Model~Model#set} it on\r\n\t* the [model]{@link module:enyo/Model~Model}. While this method may be called directly, it is most\r\n\t* often used via the [parse]{@link module:enyo/Model~Model~Options#parse} option and executed\r\n\t* automatically, either during initialization or when [fetched]{@link module:enyo/Model~Model#fetch}\r\n\t* (or, in some cases, both). This is a virtual method and must be provided to suit a\r\n\t* given implementation's needs.\r\n\t*\r\n\t* @see module:enyo/Model~Model~Options#parse\r\n\t* @param {*} data - The incoming data that may need to be restructured or reduced prior to\r\n\t*\tbeing [set]{@link module:enyo/Model~Model#set} on the [model]{@link module:enyo/Model~Model}.\r\n\t* @returns {Object} The [hash]{@glossary Object} to apply to the\r\n\t*\tmodel via [set()]{@link module:enyo/Model~Model#set}.\r\n\t* @virtual\r\n\t* @public\r\n\t*/\r\n\tparse: function (data) {\r\n\t\treturn data;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns an [Object]{@glossary Object} that represents the underlying data structure\r\n\t* of the [model]{@link module:enyo/Model~Model}. This is dependent on the current\r\n\t* [attributes]{@link module:enyo/Model~Model#attributes} as well as the\r\n\t* [includeKeys]{@link module:enyo/Model~Model#includeKeys}.\r\n\t* [Computed properties]{@link module:enyo/ComputedSupport} are **never** included.\r\n\t*\r\n\t* @see module:enyo/Model~Model#includeKeys\r\n\t* @see module:enyo/Model~Model#attributes\r\n\t* @returns {Object} The formatted [hash]{@glossary Object} representing the underlying\r\n\t*\tdata structure of the [model]{@link module:enyo/Model~Model}.\r\n\t* @public\r\n\t*/\r\n\traw: function () {\r\n\t\tvar inc = this.includeKeys\r\n\t\t\t, attrs = this.attributes\r\n\t\t\t, keys = inc || Object.keys(attrs)\r\n\t\t\t, cpy = inc? utils.only(inc, attrs): utils.clone(attrs);\r\n\t\tkeys.forEach(function (key) {\r\n\t\t\tvar ent = this.get(key);\r\n\t\t\tif (typeof ent == 'function') cpy[key] = ent.call(this);\r\n\t\t\telse if (ent && ent.raw) cpy[key] = ent.raw();\r\n\t\t\telse cpy[key] = ent;\r\n\t\t}, this);\r\n\t\treturn cpy;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the [JSON]{@glossary JSON} serializable [raw()]{@link module:enyo/Model~Model#raw} output\r\n\t* of the [model]{@link module:enyo/Model~Model}. Will automatically be executed by\r\n\t* [JSON.parse()]{@glossary JSON.parse}.\r\n\t*\r\n\t* @see module:enyo/Model~Model#raw\r\n\t* @returns {Object} The return value of [raw()]{@link module:enyo/Model~Model#raw}.\r\n\t* @public\r\n\t*/\r\n\ttoJSON: function () {\r\n\r\n\t\t// @NOTE: Because this is supposed to return a JSON parse-able object\r\n\t\treturn this.raw();\r\n\t},\r\n\r\n\t/**\r\n\t* Restores an [attribute]{@link module:enyo/Model~Model#attributes} to its previous value. If no\r\n\t* attribute is specified, all previous values will be restored.\r\n\t*\r\n\t* @see module:enyo/Model~Model#set\r\n\t* @see module:enyo/Model~Model#previous\r\n\t* @param {String} [prop] - The [attribute]{@link module:enyo/Model~Model#attributes} to\r\n\t*\t[restore]{@link module:enyo/Model~Model#restore}. If not provided, all attributes will be\r\n\t* restored to their previous values.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\trestore: function (prop) {\r\n\r\n\t\t// we ensure that the property is forcibly notified (when possible) to ensure that\r\n\t\t// bindings or other observers will know it returned to that value\r\n\t\tif (prop) this.set(prop, this.previous[prop], {force: true});\r\n\t\telse this.set(this.previous);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Commits the [model]{@link module:enyo/Model~Model} to a [source or sources]{@link module:enyo/Model~Model#source}.\r\n\t* A model cannot be [committed]{@link module:enyo/Model~Model#commit} if it is in an\r\n\t* [error]{@link module:enyo/States#ERROR} ({@link module:enyo/StateSupport~StateSupport#isError}) or\r\n\t* [busy]{@link module:enyo/States#BUSY} ({@link module:enyo/StateSupport~StateSupport#isBusy})\r\n\t* [state]{@link module:enyo/Model~Model#status}. While executing, it will add the\r\n\t* [COMMITTING]{@link module:enyo/States#COMMITTING} flag to the model's\r\n\t* [status]{@link module:enyo/Model~Model#status}. Once it has completed execution, it will\r\n\t* remove this flag (even if it fails).\r\n\t*\r\n\t* @see module:enyo/Model~Model#committed\r\n\t* @see module:enyo/Model~Model#status\r\n\t* @param {module:enyo/Model~Model~ActionOptions} [opts] - Optional configuration options.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tcommit: function (opts) {\r\n\t\tvar options,\r\n\t\t\tsource,\r\n\t\t\tit = this;\r\n\r\n\t\t// if the current status is not one of the error or busy states we can continue\r\n\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\r\n\r\n\t\t\t// if there were options passed in we copy them quickly so that we can hijack\r\n\t\t\t// the success and error methods while preserving the originals to use later\r\n\t\t\toptions = opts ? utils.clone(opts, true) : {};\r\n\r\n\t\t\t// make sure we keep track of how many sources we're requesting\r\n\t\t\tsource = options.source || this.source;\r\n\t\t\tif (source && ((source instanceof Array) || source === true)) {\r\n\t\t\t\tthis._waiting = source.length ? source.slice() : Object.keys(Source.sources);\r\n\t\t\t}\r\n\r\n\t\t\toptions.success = function (source, res) {\r\n\t\t\t\tit.committed(opts, res, source);\r\n\t\t\t};\r\n\r\n\t\t\toptions.error = function (source, res) {\r\n\t\t\t\tit.errored('COMMITTING', opts, res, source);\r\n\t\t\t};\r\n\r\n\t\t\t// set the state\r\n\t\t\tthis.status = this.status | States.COMMITTING;\r\n\r\n\t\t\t// now pass this on to the source to execute as it sees fit\r\n\t\t\tSource.execute('commit', this, options);\r\n\t\t} else this.errored(this.status, opts);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Fetches the [model]{@link module:enyo/Model~Model} from a\r\n\t* [source or sources]{@link module:enyo/Model~Model#source}. A model cannot be\r\n\t* [fetched]{@link module:enyo/Model~Model#fetch} if it is in an\r\n\t* [error]{@link module:enyo/States#ERROR} ({@link module:enyo/StateSupport~StateSupport#isError}) or\r\n\t* [busy]{@link module:enyo/States#BUSY} ({@link module:enyo/StateSupport~StateSupport#isBusy})\r\n\t* [state]{@link module:enyo/Model~Model#status}. While executing, it will add the\r\n\t* [FETCHING]{@link module:enyo/States#FETCHING} flag to the model's\r\n\t* [status]{@link module:enyo/Model~Model#status}. Once it has completed execution, it will\r\n\t* remove this flag (even if it fails).\r\n\t*\r\n\t* @see module:enyo/Model~Model#fetched\r\n\t* @see module:enyo/Model~Model#status\r\n\t* @param {module:enyo/Model~Model~ActionOptions} [opts] - Optional configuration options.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tfetch: function (opts) {\r\n\t\tvar options,\r\n\t\t\tsource,\r\n\t\t\tit = this;\r\n\r\n\t\t// if the current status is not one of the error or busy states we can continue\r\n\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\r\n\r\n\t\t\t// if there were options passed in we copy them quickly so that we can hijack\r\n\t\t\t// the success and error methods while preserving the originals to use later\r\n\t\t\toptions = opts ? utils.clone(opts, true) : {};\r\n\r\n\t\t\t// make sure we keep track of how many sources we're requesting\r\n\t\t\tsource = options.source || this.source;\r\n\t\t\tif (source && ((source instanceof Array) || source === true)) {\r\n\t\t\t\tthis._waiting = source.length ? source.slice() : Object.keys(Source.sources);\r\n\t\t\t}\r\n\r\n\t\t\toptions.success = function (source, res) {\r\n\t\t\t\tit.fetched(opts, res, source);\r\n\t\t\t};\r\n\r\n\t\t\toptions.error = function (source, res) {\r\n\t\t\t\tit.errored('FETCHING', opts, res, source);\r\n\t\t\t};\r\n\r\n\t\t\t// set the state\r\n\t\t\tthis.status = this.status | States.FETCHING;\r\n\r\n\t\t\t// now pass this on to the source to execute as it sees fit\r\n\t\t\tSource.execute('fetch', this, options);\r\n\t\t} else this.errored(this.status, opts);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Destroys the [model]{@link module:enyo/Model~Model}. By default, the model will only\r\n\t* be [destroyed]{@glossary destroy} in the client. To execute with a\r\n\t* [source or sources]{@link module:enyo/Model~Model#source}, either the\r\n\t* [commit default option]{@link module:enyo/Model~Model#options} must be `true` or a\r\n\t* `source` property must be explicitly provided in the `opts` parameter.\r\n\t* A model cannot be destroyed (using a source) if it is in an\r\n\t* [error]{@link module:enyo/States#ERROR} ({@link module:enyo/StateSupport~StateSupport#isError})\r\n\t* or [busy]{@link module:enyo/States#BUSY} ({@link module:enyo/StateSupport~StateSupport#isBusy})\r\n\t* [state]{@link module:enyo/Model~Model#status}. While executing, it will add the\r\n\t* [DESTROYING]{@link module:enyo/States#DESTROYING} flag to the model's\r\n\t* [status]{@link module:enyo/Model~Model#status}. Once it has completed execution, it\r\n\t* will remove this flag (even if it fails).\r\n\t*\r\n\t* @see module:enyo/Model~Model#status\r\n\t* @param {module:enyo/Model~Model~ActionOptions} [opts] - Optional configuration options.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tdestroy: function (opts) {\r\n\t\tvar options = opts ? utils.mixin({}, [this.options, opts]) : this.options,\r\n\t\t\tit = this,\r\n\t\t\tidx;\r\n\r\n\t\t// this becomes an (potentially) async operation if we are committing this destroy\r\n\t\t// to a source and its kind of tricky to figure out because there are several ways\r\n\t\t// it could be flagged to do this\r\n\r\n\t\tif (options.commit || options.source) {\r\n\r\n\t\t\t// if the current status is not one of the error states we can continue\r\n\t\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\r\n\r\n\t\t\t\t// remap to the originals\r\n\t\t\t\toptions = opts ? utils.clone(opts, true) : {};\r\n\r\n\t\t\t\toptions.success = function (source, res) {\r\n\r\n\t\t\t\t\tif (it._waiting) {\r\n\t\t\t\t\t\tidx = it._waiting.findIndex(function (ln) {\r\n\t\t\t\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (idx > -1) it._waiting.splice(idx, 1);\r\n\t\t\t\t\t\tif (!it._waiting.length) it._waiting = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// continue the operation this time with commit false explicitly\r\n\t\t\t\t\tif (!it._waiting) {\r\n\t\t\t\t\t\toptions.commit = options.source = null;\r\n\t\t\t\t\t\tit.destroy(options);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (opts && opts.success) opts.success(this, opts, res, source);\r\n\t\t\t\t};\r\n\r\n\t\t\t\toptions.error = function (source, res) {\r\n\r\n\t\t\t\t\tif (it._waiting) {\r\n\t\t\t\t\t\tidx = it._waiting.findIndex(function (ln) {\r\n\t\t\t\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (idx > -1) it._waiting.splice(idx, 1);\r\n\t\t\t\t\t\tif (!it._waiting.length) it._waiting = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// continue the operation this time with commit false explicitly\r\n\t\t\t\t\tif (!it._waiting) {\r\n\t\t\t\t\t\toptions.commit = options.source = null;\r\n\t\t\t\t\t\tit.destroy(options);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// we don't bother setting the error state if we aren't waiting because it\r\n\t\t\t\t\t// will be cleared to DESTROYED and it would be pointless\r\n\t\t\t\t\telse this.errored('DESTROYING', opts, res, source);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.status = this.status | States.DESTROYING;\r\n\r\n\t\t\t\tSource.execute('destroy', this, options);\r\n\t\t\t} else if (this.status & States.ERROR) this.errored(this.status, opts);\r\n\r\n\t\t\t// we don't allow the destroy to take place and we don't forcibly break-down\r\n\t\t\t// the collection errantly so there is an opportuniy to resolve the issue\r\n\t\t\t// before we lose access to the collection's content!\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\r\n\t\t// we flag this early so objects that receive an event and process it\r\n\t\t// can optionally check this to support faster cleanup in some cases\r\n\t\t// e.g. Collection/Store don't need to remove listeners because it will\r\n\t\t// be done in a much quicker way already\r\n\t\tthis.destroyed = true;\r\n\t\tthis.status = States.DESTROYED;\r\n\t\tthis.unsilence(true).emit('destroy');\r\n\t\tthis.removeAllListeners();\r\n\t\tthis.removeAllObservers();\r\n\r\n\t\t// if this does not have the the batching flag (that would be set by a collection)\r\n\t\t// then we need to do the default of removing it from the store\r\n\t\tif (!opts || !opts.batching) this.store.remove(this);\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the value for the given property or path. If the property is a\r\n\t* [computed property]{@link module:enyo/ComputedSupport}, then it will return\r\n\t* that value; otherwise, it will attempt to retrieve the value from the\r\n\t* [attributes hash]{@link module:enyo/Model~Model#attributes}.\r\n\t*\r\n\t* @param {String} path - The property to retrieve.\r\n\t* @returns {*} The value for the requested property or path, or `undefined` if\r\n\t* it cannot be found or does not exist.\r\n\t* @public\r\n\t*/\r\n\tget: function (path) {\r\n\t\treturn this.isComputed(path) ? this._getComputed(path) : this.attributes[path];\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the requested `path` or [hash]{@glossary Object} of properties on the\r\n\t* [model]{@link module:enyo/Model~Model}. Properties are applied to the\r\n\t* [attributes hash]{@link module:enyo/Model~Model#attributes} and are retrievable via\r\n\t* [get()]{@link module:enyo/Model~Model#get}. If properties were updated and the `silent`\r\n\t* option is not `true`, this method will emit a `change` event, as well as\r\n\t* individual [notifications]{@link module:enyo/ObserverSupport~ObserverSupport.notify} for the\r\n\t* properties that were modified.\r\n\t*\r\n\t* @fires module:enyo/Model~Model#change\r\n\t* @see {@link module:enyo/ObserverSupport~ObserverSupport}\r\n\t* @see {@link module:enyo/BindingSupport~BindingSupport}\r\n\t* @param {(String|Object)} path - Either the property name or a [hash]{@glossary Object}\r\n\t*\tof properties and values to set.\r\n\t* @param {(*|module:enyo/Model~Options)} is If `path` is a [string]{@glossary String},\r\n\t* this should be the value to set for the given property; otherwise, it should be\r\n\t* an optional hash of available [configuration options]{@link module:enyo/Model~Model~Options}.\r\n\t* @param {module:enyo/Model~Options} [opts] - If `path` is a string, this should be the\r\n\t* optional hash of available configuration options; otherwise, it will not be used.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tset: function (path, is, opts) {\r\n\t\tif (!this.destroyed) {\r\n\r\n\t\t\tvar attrs = this.attributes,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tchanged,\r\n\t\t\t\tincoming,\r\n\t\t\t\tforce,\r\n\t\t\t\tsilent,\r\n\t\t\t\tkey,\r\n\t\t\t\tvalue,\r\n\t\t\t\tcommit,\r\n\t\t\t\tfetched;\r\n\r\n\t\t\t// the default case for this setter is accepting an object of key->value pairs\r\n\t\t\t// to apply to the model in which case the second parameter is the optional\r\n\t\t\t// configuration hash\r\n\t\t\tif (typeof path == 'object') {\r\n\t\t\t\tincoming = path;\r\n\t\t\t\topts = opts || is;\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise in order to have a single path here we flub it so it will keep on\r\n\t\t\t// going as expected\r\n\t\t\telse {\r\n\t\t\t\tincoming = {};\r\n\t\t\t\tincoming[path] = is;\r\n\t\t\t}\r\n\r\n\t\t\t// to maintain backward compatibility with the old setters that allowed the third\r\n\t\t\t// parameter to be a boolean to indicate whether or not to force notification of\r\n\t\t\t// change even if there was any\r\n\t\t\tif (opts === true) {\r\n\t\t\t\tforce = true;\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\topts = opts ? utils.mixin({}, [options, opts]) : options;\r\n\t\t\tsilent = opts.silent;\r\n\t\t\tforce = force || opts.force;\r\n\t\t\tcommit = opts.commit;\r\n\t\t\tfetched = opts.fetched;\r\n\r\n\t\t\tfor (key in incoming) {\r\n\t\t\t\tvalue = incoming[key];\r\n\r\n\t\t\t\tif (value !== attrs[key] || force) {\r\n\t\t\t\t\t// to ensure we have an object to work with\r\n\t\t\t\t\t// note that we check inside this loop so we don't have to examine keys\r\n\t\t\t\t\t// later only the local variable changed\r\n\t\t\t\t\tchanged = this.changed || (this.changed = {});\r\n\t\t\t\t\t//store the previous attr value\r\n\t\t\t\t\tthis.previous[key] = attrs[key];\r\n\t\t\t\t\t//set new value\r\n\t\t\t\t\tchanged[key] = attrs[key] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (changed) {\r\n\r\n\t\t\t\t// we add dirty as a value of the status but clear the CLEAN bit if it\r\n\t\t\t\t// was set - this would allow it to be in the ERROR state and NEW and DIRTY\r\n\t\t\t\tif (!fetched) this.status = (this.status | States.DIRTY) & ~States.CLEAN;\r\n\r\n\t\t\t\tif (!silent) this.emit('change', changed, this);\r\n\r\n\t\t\t\tif (commit && !fetched) this.commit(opts);\r\n\r\n\t\t\t\t// reset value so subsequent changes won't be added to this change-set\r\n\t\t\t\tthis.changed = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* A bit of hackery to facade the normal [getter]{@link module:enyo/ComputedSupport~ComputedSupport#get}. Note that\r\n\t* we pass an arbitrary super-method that automatically returns `undefined`, which is\r\n\t* consistent with this use case and its intended purpose.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_getComputed: ComputedSupport.get.fn(function () { return undefined; }),\r\n\r\n\t/**\r\n\t* Initializes the [model]{@link module:enyo/Model~Model}. Unlike some methods, the parameters are not\r\n\t* interchangeable. If you are not using a particular (optional) parameter, pass in `null`.\r\n\t*\r\n\t* @param {Object} [attrs] - Optionally initialize the [model]{@link module:enyo/Model~Model} with some\r\n\t*\t[attributes]{@link module:enyo/Model~Model#attributes}.\r\n\t* @param {Object} [props] - Properties to apply directly to the [model]{@link module:enyo/Model~Model} and\r\n\t*\tnot the [attributes hash]{@link module:enyo/Model~Model#attributes}. If these properties contain an\r\n\t*\t`options` property (a [hash]{@glossary Object}) it will be merged with existing\r\n\t*\t[options]{@link module:enyo/Model~Model#options}.\r\n\t* @param {module:enyo/Model~Model~Options} [opts] - This is a one-time [options hash]{@link module:enyo/Model~Model~Options} that\r\n\t*\tis only used during initialization and not applied as defaults.\r\n\t* @public\r\n\t*/\r\n\tconstructor: function (attrs, props, opts) {\r\n\r\n\t\t// in cases where there is an options hash provided in the _props_ param\r\n\t\t// we need to integrate it manually...\r\n\t\tif (props && props.options) {\r\n\t\t\tthis.options = utils.mixin({}, [this.options, props.options]);\r\n\t\t\tdelete props.options;\r\n\t\t}\r\n\r\n\t\t// the _opts_ parameter is a one-hit options hash it does not leave\r\n\t\t// behind its values as default options...\r\n\t\topts = opts? utils.mixin({}, [this.options, opts]): this.options;\r\n\r\n\t\t// go ahead and mix all of the properties in\r\n\t\tprops && utils.mixin(this, props);\r\n\r\n\t\tvar noAdd = opts.noAdd\r\n\t\t\t, commit = opts.commit\r\n\t\t\t, parse = opts.parse\r\n\t\t\t, fetch = this.options.fetch\r\n\t\t\t, defaults;\r\n\r\n\t\t// defaults = this.defaults && (typeof this.defaults == 'function'? this.defaults(attrs, opts): this.defaults);\r\n\t\tdefaults = this.defaults && typeof this.defaults == 'function'? this.defaults(attrs, opts): null;\r\n\r\n\t\t// ensure we have a unique identifier that could potentially\r\n\t\t// be used in remote systems\r\n\t\tthis.euid = this.euid || utils.uid('m');\r\n\r\n\t\t// if necessary we need to parse the incoming attributes\r\n\t\tattrs = attrs? parse? this.parse(attrs): attrs: null;\r\n\r\n\t\t// ensure we have the updated attributes\r\n\t\tthis.attributes = this.attributes? defaults? utils.mixin({}, [defaults, this.attributes]): utils.clone(this.attributes, true): defaults? utils.clone(defaults, true): {};\r\n\t\tattrs && utils.mixin(this.attributes, attrs);\r\n\t\tthis.previous = utils.clone(this.attributes);\r\n\r\n\t\t// now we need to ensure we have a store and register with it\r\n\t\tthis.store = this.store || Store;\r\n\r\n\t\t// @TODO: The idea here is that when batch instancing records a collection\r\n\t\t// should be intelligent enough to avoid doing each individually or in some\r\n\t\t// cases it may be useful to have a record that is never added to a store?\r\n\t\tif (!noAdd) this.store.add(this, opts);\r\n\r\n\t\tcommit && this.commit();\r\n\t\tfetch && this.fetch();\r\n\t},\r\n\r\n\t/**\r\n\t* Overloaded. We funnel arbitrary notification updates through here, as this\r\n\t* is faster than using the built-in notification updates for batch operations.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\temit: kind.inherit(function (sup) {\r\n\t\treturn function (e, props) {\r\n\t\t\tif (e == 'change' && props && this.isObserving()) {\r\n\t\t\t\tfor (var key in props) this.notify(key, this.previous[key], props[key]);\r\n\t\t\t}\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Overloaded to alias the (also overloaded) [emit()]{@link module:enyo/Model~Model#emit} method.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\ttriggerEvent: function () {\r\n\t\treturn this.emit.apply(this, arguments);\r\n\t},\r\n\r\n\t/**\r\n\t* When a [fetch]{@link module:enyo/Model~Model#fetch} has completed successfully, it is returned\r\n\t* to this method. This method handles special and important behavior; it should not be\r\n\t* called directly and, when overloading, care must be taken to ensure that you call\r\n\t* the super-method. This correctly sets the [status]{@link module:enyo/Model~Model#status} and, in\r\n\t* cases where multiple [sources]{@link module:enyo/Model~Model#source} were used, it waits until\r\n\t* all have responded before clearing the [FETCHING]{@link module:enyo/States#FETCHING} flag.\r\n\t* If a [success]{@link module:enyo/Model~Model~Success} callback was provided, it will be called\r\n\t* once for each source.\r\n\t*\r\n\t* @param {module:enyo/Model~Model~ActionOptions} opts - The original options passed to\r\n\t*\t[fetch()]{@link module:enyo/Model~Model#fetch}, merged with the defaults.\r\n\t* @param {*} [res] - The result provided from the given [source]{@link module:enyo/Model~Model#source},\r\n\t* if any. This will vary depending on the source.\r\n\t* @param {String} source - The name of the source that has completed successfully.\r\n\t* @public\r\n\t*/\r\n\tfetched: function (opts, res, source) {\r\n\t\tvar idx,\r\n\t\t\toptions = this.options;\r\n\r\n\t\tif (this._waiting) {\r\n\t\t\tidx = this._waiting.findIndex(function (ln) {\r\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\r\n\t\t\t});\r\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\r\n\t\t\tif (!this._waiting.length) this._waiting = null;\r\n\t\t}\r\n\r\n\t\t// normalize options so we have values and ensure it knows it was just fetched\r\n\t\topts = opts ? utils.mixin({}, [options, opts]) : options;\r\n\t\topts.fetched = true;\r\n\r\n\t\t// for a special case purge to only use the result sub-tree of the fetched data for\r\n\t\t// the model attributes\r\n\t\tif (opts.parse) res = this.parse(res);\r\n\r\n\t\t// note this will not add the DIRTY state because it was fetched but also note that it\r\n\t\t// will not clear the DIRTY flag if it was already DIRTY\r\n\t\tif (res) this.set(res, opts);\r\n\r\n\t\t// clear the FETCHING and NEW state (if it was NEW) we do not set it as dirty as this\r\n\t\t// action alone doesn't warrant a dirty flag that would need to be set in the set method\r\n\t\tif (!this._waiting) this.status = this.status & ~(States.FETCHING | States.NEW);\r\n\r\n\t\t// now look for an additional success callback\r\n\t\tif (opts.success) opts.success(this, opts, res, source);\r\n\t},\r\n\r\n\t/**\r\n\t* When a [commit]{@link module:enyo/Model~Model#commit} has completed successfully, it is returned\r\n\t* to this method. This method handles special and important behavior; it should not be\r\n\t* called directly and, when overloading, care must be taken to ensure that you call the\r\n\t* super-method. This correctly sets the [status]{@link module:enyo/Model~Model#status} and, in cases\r\n\t* where multiple [sources]{@link module:enyo/Model~Model#source} were used, it waits until all have\r\n\t* responded before clearing the [COMMITTING]{@link module:enyo/States#COMMITTING} flag. If a\r\n\t* [success]{@link module:enyo/Model~Model~Success} callback was provided, it will be called once for\r\n\t* each source.\r\n\t*\r\n\t* @param {module:enyo/Model~Model~ActionOptions} opts - The original options passed to\r\n\t*\t[commit()]{@link module:enyo/Model~Model#commit}, merged with the defaults.\r\n\t* @param {*} [res] - The result provided from the given [source]{@link module:enyo/Model~Model#source},\r\n\t* if any. This will vary depending on the source.\r\n\t* @param {String} source - The name of the source that has completed successfully.\r\n\t* @public\r\n\t*/\r\n\tcommitted: function (opts, res, source) {\r\n\t\tvar idx;\r\n\r\n\t\tif (this._waiting) {\r\n\t\t\tidx = this._waiting.findIndex(function (ln) {\r\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\r\n\t\t\t});\r\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\r\n\t\t\tif (!this._waiting.length) this._waiting = null;\r\n\t\t}\r\n\r\n\t\tif (!this._waiting) {\r\n\t\t\t// we need to clear the COMMITTING bit and DIRTY bit as well as ensure that the\r\n\t\t\t// 'previous' hash is whatever the current attributes are\r\n\t\t\tthis.previous = utils.clone(this.attributes);\r\n\t\t\tthis.status = (this.status | States.CLEAN) & ~(States.COMMITTING | States.DIRTY);\r\n\t\t}\r\n\r\n\t\tif (opts && opts.success) opts.success(this, opts, res, source);\r\n\t},\r\n\r\n\t/**\r\n\t* When an action ([fetch()]{@link module:enyo/Model~Model#fetch}, [commit()]{@link module:enyo/Model~Model#commit},\r\n\t* or [destroy()]{@link module:enyo/Model~Model#destroy}) has failed, it will be passed to this method.\r\n\t* This method handles special and important behavior; it should not be called directly\r\n\t* and, when overloading, care must be taken to ensure that you call the super-method.\r\n\t* This correctly sets the [status]{@link module:enyo/Model~Model#status} to the known\r\n\t* [error state]{@link module:enyo/States#ERROR}, or to the\r\n\t* [unknown error state]{@link module:enyo/States#ERROR_UNKNOWN} if it the error state could not\r\n\t* be determined. If an [error callback]{@link module:enyo/Model~Model~Error} was provided, this method\r\n\t* will execute it.\r\n\t*\r\n\t* @see {@link module:enyo/StateSupport~StateSupport#clearError}\r\n\t* @param {String} action - The action (one of `'FETCHING'`, `'COMMITTING'`, or\r\n\t* `'DESTROYING'`) that failed and is now in an [error state]{@link module:enyo/States#ERROR}.\r\n\t* @param {module:enyo/Model~Model~ActionOptions} opts - The original options passed to the `action`\r\n\t* method, merged with the defaults.\r\n\t* @param {*} [res] - The result provided from the given [source]{@link module:enyo/Model~Model#source},\r\n\t* if any. This will vary depending on the source.\r\n\t* @param {String} source - The name of the source that has returned an error.\r\n\t* @public\r\n\t*/\r\n\terrored: function (action, opts, res, source) {\r\n\t\tvar stat,\r\n\t\t\tidx;\r\n\r\n\t\t// if the error action is a status number then we don't need to update it otherwise\r\n\t\t// we set it to the known state value\r\n\t\tif (typeof action == 'string') {\r\n\r\n\t\t\t// all built-in errors will pass this as their values are > 0 but we go ahead and\r\n\t\t\t// ensure that no developer used the 0x00 for an error code\r\n\t\t\tstat = States['ERROR_' + action];\r\n\t\t} else stat = action;\r\n\r\n\t\tif (isNaN(stat) || (stat & ~States.ERROR)) stat = States.ERROR_UNKNOWN;\r\n\r\n\t\t// correctly set the current status and ensure we clear any busy flags\r\n\t\tthis.status = (this.status | stat) & ~States.BUSY;\r\n\r\n\t\tif (this._waiting) {\r\n\t\t\tidx = this._waiting.findIndex(function (ln) {\r\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\r\n\t\t\t});\r\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\r\n\t\t\tif (!this._waiting.length) this._waiting = null;\r\n\t\t}\r\n\r\n\t\t// we need to check to see if there is an options handler for this error\r\n\t\tif (opts && opts.error) opts.error(this, action, opts, res, source);\r\n\t}\r\n\r\n});\r\n\r\n/**\r\n* @name module:enyo/Model~Model.concat\r\n* @static\r\n* @private\r\n*/\r\nModel.concat = function (ctor, props) {\r\n\tvar proto = ctor.prototype || ctor;\r\n\r\n\tif (props.options) {\r\n\t\tproto.options = utils.mixin({}, [proto.options, props.options]);\r\n\t\tdelete props.options;\r\n\t}\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nkind.features.push(function (ctor) {\r\n\tif (ctor.prototype instanceof Model) {\r\n\t\t!Store.models[ctor.prototype.kindName] && (Store.models[ctor.prototype.kindName] = new ModelList());\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Component~Component} kind.\r\n* @module enyo/Component\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils'),\r\n\tlogger = require('./logger');\r\n\r\nvar\r\n\tCoreObject = require('./CoreObject'),\r\n\tApplicationSupport = require('./ApplicationSupport'),\r\n\tComponentBindingSupport = require('./ComponentBindingSupport'),\r\n\tJobs = require('./jobs');\r\n\r\nvar\r\n\tkindPrefix = {},\r\n\tunnamedCounter = 0;\r\n\t\r\n/**\r\n* @callback module:enyo/Component~Component~EventHandler\r\n* @param {module:enyo/Component~Component} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @param {Object} event - An [object]{@glossary Object} containing\r\n*\tevent information.\r\n* @returns {Boolean} A value indicating whether the event has been\r\n*\thandled or not. If `true`, then bubbling is stopped.\r\n*/\r\n\r\n/**\r\n* A [hash]{@glossary Object} of references to all the [components]{@link module:enyo/Component~Component}\r\n* owned by this component. This property is updated whenever a new\r\n* component is added; the new component may be accessed via its\r\n* [name]{@link module:enyo/Component~Component#name} property. We may also observe changes on\r\n* properties of components referenced by the `$` property.\r\n*\r\n* Component access via the `$` hash:\r\n* ```javascript\r\n* var Component = require('enyo/Component');\r\n* var c = new Component({\r\n*\tname: 'me',\r\n*\tcomponents: [\r\n*\t\t{kind: Component, name: 'other'}\r\n*\t]\r\n* });\r\n*\r\n* // We can now access 'other' on the $ hash of 'c', via c.$.other\r\n* ```\r\n*\r\n* Observing changes on a component referenced by the `$` property:\r\n* ```javascript\r\n* var c = new Component({\r\n*\tname: 'me',\r\n*\tcomponents: [\r\n*\t\t{kind: Component, name: 'other'}\r\n*\t]\r\n* });\r\n*\r\n* c.addObserver('$.other.active', function() {\r\n*\t// do something to respond to the \"active\" property of \"other\" changing\r\n* })\r\n*\r\n* c.$.other.set('active', true); // this will trigger the observer to run its callback\r\n* ```\r\n*\r\n* @name $\r\n* @type {Object}\r\n* @default null\r\n* @memberof module:enyo/Component~Component.prototype\r\n* @readonly\r\n* @public\r\n*/\r\n\r\n/**\r\n* If `true`, this [component's]{@link module:enyo/Component~Component} [owner]{@link module:enyo/Component~Component#owner} will\r\n* have a direct name reference to the owned component.\r\n*\r\n* @example\r\n* var Component = require('enyo/Component');\r\n* var c = new Component({\r\n*\tname: 'me',\r\n*\tcomponents: [\r\n*\t\t{kind: Component, name: 'other', publish: true}\r\n*\t]\r\n* });\r\n*\r\n* // We can now access 'other' directly, via c.other\r\n*\r\n* @name publish\r\n* @type {Boolean}\r\n* @default undefined\r\n* @memberOf module:enyo/Component~Component.prototype\r\n* @public\r\n*/\r\n\r\n/**\r\n* If `true`, the [layout]{@glossary layout} strategy will adjust the size of this\r\n* [component]{@link module:enyo/Component~Component} to occupy the remaining available space.\r\n*\r\n* @name fit\r\n* @type {Boolean}\r\n* @default undefined\r\n* @memberOf module:enyo/Component~Component.prototype\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/Component~Component} is the fundamental building block for Enyo applications.\r\n* Components are designed to fit together, allowing complex behaviors to\r\n* be fashioned from smaller bits of functionality.\r\n*\r\n* Component [constructors]{@glossary constructor} take a single\r\n* argument (sometimes called a [component configuration]{@glossary configurationBlock}),\r\n* a JavaScript [object]{@glossary Object} that defines various properties to be initialized on the\r\n* component.  For example:\r\n*\r\n* ```javascript\r\n* // create a new component, initialize its name property to 'me'\r\n* var Component = require('enyo/Component');\r\n* var c = new Component({\r\n*\tname: 'me'\r\n* });\r\n* ```\r\n*\r\n* When a component is instantiated, items configured in its\r\n* `components` property are instantiated, too:\r\n*\r\n* ```javascript\r\n* // create a new component, which itself has a component\r\n* var c = new Component({\r\n*\tname: 'me',\r\n*\tcomponents: [\r\n*\t\t{kind: Component, name: 'other'}\r\n*\t]\r\n* });\r\n* ```\r\n*\r\n* In this case, when `me` is created, `other` is also created, and we say that `me` owns `other`.\r\n* In other words, the [owner]{@link module:enyo/Component~Component#owner} property of `other` equals `me`.\r\n* Notice that you can specify the [kind]{@glossary kind} of `other` explicitly in its\r\n* configuration block, to tell `me` what constructor to use to create `other`.\r\n*\r\n* To move a component, use the `setOwner()` method to change the\r\n* component's owner. If you want a component to be unowned, use `setOwner(null)`.\r\n*\r\n* If you make changes to `Component`, be sure to add or update the appropriate\r\n* {@linkplain https://github.com/enyojs/enyo/tree/master/tools/test/core/tests unit tests}.\r\n*\r\n* For more information, see the documentation on\r\n* [Components]{@linkplain $dev-guide/key-concepts/components.html} in the\r\n* Enyo Developer Guide.\r\n*\r\n* @class Component\r\n* @extends module:enyo/CoreObject~Object\r\n* @mixes module:enyo/ApplicationSupport~ApplicationSupport\r\n* @mixes module:enyo/ComponentBindingSupport~ComponentBindingSupport\r\n* @public\r\n*/\r\nvar Component = module.exports = kind(\r\n\t/** @lends module:enyo/Component~Component.prototype */ {\r\n\r\n\tname: 'enyo.Component',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: CoreObject,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcachedBubble: true,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcachePoint: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/Component~Component.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* A unique name for the [component]{@link module:enyo/Component~Component} within its\r\n\t\t* [owner]{@link module:enyo/Component~Component#owner}. This is used to set the access name in the\r\n\t\t* owner's [$ hash]{@link module:enyo/Component~Component#$}. If not\r\n\t\t* specified, a default name will be provided based on the name of the\r\n\t\t* [object's]{@link module:enyo/CoreObject~Object} [kind]{@glossary kind}, with a numeric\r\n\t\t* suffix appended if more than one instance exists in the owner.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tname: '',\r\n\r\n\t\t/**\r\n\t\t* A unique id for the [component]{@link module:enyo/Component~Component}, usually automatically generated\r\n\t\t* based on its position within the component hierarchy, although\r\n\t\t* it may also be directly specified. {@link module:enyo/Control~Control} uses this `id` value for the\r\n\t\t* DOM [id]{@link module:enyo/Control~Control#id} attribute.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tid: '',\r\n\r\n\t\t/**\r\n\t\t* The [component]{@link module:enyo/Component~Component} that owns this component.\r\n\t\t* It is usually defined implicitly at creation time based on the\r\n\t\t* [createComponent()]{@link module:enyo/Component~Component#createComponent} call or\r\n\t\t* the `components` hash.\r\n\t\t*\r\n\t\t* @type {module:enyo/Component~Component}\r\n\t\t* @default null\r\n\t\t* @public\r\n\t\t*/\r\n\t\towner: null,\r\n\r\n\t\t/**\r\n\t\t* This can be a [hash]{@glossary Object} of features to apply to\r\n\t\t* [chrome]{@glossary chrome} [components]{@link module:enyo/Component~Component} of the base\r\n\t\t* [kind]{@glossary kind}. They are matched by [name]{@link module:enyo/Component~Component#name}\r\n\t\t* (if the component you wish to modify does not have a name, this will not work).\r\n\t\t* You can modify any properties of the component except for methods. Setting a\r\n\t\t* value for `componentOverrides` at runtime will have no effect.\r\n\t\t*\r\n\t\t* @type {Object}\r\n\t\t* @default null\r\n\t\t* @public\r\n\t\t*/\r\n\t\tcomponentOverrides: null\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmixins: [ApplicationSupport, ComponentBindingSupport],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttoString: function () {\r\n\t\treturn this.id + ' [' + this.kindName + ']';\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function (props) {\r\n\t\t\t// initialize instance objects\r\n\t\t\tthis._componentNameMap = {};\r\n\t\t\tthis.$ = {};\r\n\t\t\tthis.cachedBubbleTarget = {};\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructed: kind.inherit(function (sup) {\r\n\t\treturn function (props) {\r\n\t\t\t// perform initialization\r\n\t\t\tthis.create(props);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcreate: function () {\r\n\t\t// stop and queue all of the notifications happening synchronously to allow\r\n\t\t// responders to only do single passes on work traversing the tree\r\n\t\tthis.stopNotifications();\r\n\t\tthis.ownerChanged();\r\n\t\tthis.initComponents();\r\n\t\t// release the kraken!\r\n\t\tthis.startNotifications();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tinitComponents: function () {\r\n\t\t// The _components_ property in kind declarations is renamed to\r\n\t\t// _kindComponents_ by the Component subclass mechanism.  This makes it\r\n\t\t// easy for the developer to distinguish kindComponents from the components\r\n\t\t// in _this.components_, without having to worry about the actual difference.\r\n\t\t//\r\n\t\t// Specifically, the difference is that kindComponents are constructed as\r\n\t\t// owned by this control (whereas components in _this.components_ are not).\r\n\t\t// In addition, kindComponents are marked with the _isChrome: true_ flag.\r\n\t\tthis.createChrome(this.kindComponents);\r\n\t\tthis.createClientComponents(this.components);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcreateChrome: function (comps) {\r\n\t\tthis.createComponents(comps, {isChrome: true});\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcreateClientComponents: function (comps) {\r\n\t\tthis.createComponents(comps, {owner: this.getInstanceOwner()});\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetInstanceOwner: function () {\r\n\t\treturn (!this.owner || this.owner.notInstanceOwner) ? this : this.owner;\r\n\t},\r\n\r\n\t/**\r\n\t* Removes this [component]{@link module:enyo/Component~Component} from its\r\n\t* [owner]{@link module:enyo/Component~Component#owner} (setting `owner` to `null`)\r\n\t* and does any necessary cleanup. The component is flagged with\r\n\t* `destroyed: true`. Usually, the component will be suitable for garbage\r\n\t* collection after being destroyed, unless user code keeps a reference\r\n\t* to it.\r\n\t*\r\n\t* @returns {this} The callee for chaining.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tthis.destroyComponents();\r\n\t\t\tthis.setOwner(null);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.stopAllJobs();\r\n\t\t\treturn this;\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Destroys all owned [components]{@link module:enyo/Component~Component}.\r\n\t*\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tdestroyComponents: function () {\r\n\t\tvar comps = this.getComponents(),\r\n\t\t\tcomp,\r\n\t\t\ti;\r\n\r\n\t\tfor (i = 0; i < comps.length; ++i) {\r\n\t\t\tcomp = comps[i];\r\n\t\t\t// @todo: previous comment said list might be stale and ownership may have caused\r\n\t\t\t// components to be destroyed as a result of some inner-container...look into this\r\n\t\t\t// because that seems incorrect or avoidable\r\n\t\t\tif (!comp.destroyed) comp.destroy();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmakeId: function() {\r\n\t\tvar delim = '_', pre = this.owner && this.owner.getId(),\r\n\t\t\tbaseName = this.name || ('@@' + (++unnamedCounter));\r\n\t\treturn (pre ? pre + delim : '') + baseName;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\townerChanged: function (was) {\r\n\t\tif (was && was.removeComponent) was.removeComponent(this);\r\n\t\tif (this.owner && this.owner.addComponent) this.owner.addComponent(this);\r\n\t\tif (!this.id) this.id = this.makeId();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tnameComponent: function (comp) {\r\n\t\tvar pre = prefixFromKindName(comp.kindName),\r\n\t\t\tlast = this._componentNameMap[pre] || 0,\r\n\t\t\tnom;\r\n\r\n\t\tdo {\r\n\t\t\tnom = pre + (++last > 1 ? String(last) : '');\r\n\t\t} while (this.$[nom]);\r\n\r\n\t\tthis._componentNameMap[pre] = Number(last);\r\n\t\t/*jshint -W093 */\r\n\t\treturn (comp.name = nom);\r\n\t},\r\n\r\n\t/**\r\n\t* Adds a [component]{@link module:enyo/Component~Component} to the list of components\r\n\t* owned by the current component (i.e., [this.$]{@link module:enyo/Component~Component#$}).\r\n\t*\r\n\t* @param {module:enyo/Component~Component} comp - The [component]{@link module:enyo/Component~Component} to add.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\taddComponent: function (comp) {\r\n\t\tvar nom = comp.get('name');\r\n\r\n\t\t// if there is no name we have to come up with a generic name\r\n\t\tif (!nom) nom = this.nameComponent(comp);\r\n\r\n\t\t// if there already was a component by that name we issue a warning\r\n\t\t// @todo: if we're going to name rules being violated we need to normalize this approach\r\n\t\t// and ensure we have one for every warning/error we throw\r\n\t\tif (this.$[nom]) this.warn(\r\n\t\t\t'Duplicate component name ' + nom + ' in owner ' + this.id + ' violates ' +\r\n\t\t\t'unique-name-under-owner rule, replacing existing component in the hash and ' +\r\n\t\t\t'continuing, but this is an error condition and should be fixed.'\r\n\t\t);\r\n\r\n\t\tthis.$[nom] = comp;\r\n\t\tthis.notify('$.' + nom, null, comp);\r\n\r\n\t\t// if the component has the `publish` true property then we also create a reference to\r\n\t\t// it directly on the owner (this)\r\n\t\tif (comp.publish) {\r\n\t\t\tthis[nom] = comp;\r\n\r\n\t\t\t// and to ensure that bindings are aware we have to notify them as well\r\n\t\t\tthis.notify(nom, null, comp);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Removes the passed-in [component]{@link module:enyo/Component~Component} from those known\r\n\t* to be owned by this component. The component will be removed from the\r\n\t* [$ hash]{@link module:enyo/Component~Component#$}, and from the [owner]{@link module:enyo/Component~Component#owner}\r\n\t* directly if [publish]{@link module:enyo/Component~Component#publish} is set to `true`.\r\n\t*\r\n\t* @param {module:enyo/Component~Component} comp - The component to remove.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tremoveComponent: function (comp) {\r\n\t\tvar nom = comp.get('name');\r\n\r\n\t\t// remove it from the hash if it existed\r\n\t\tdelete this.$[nom];\r\n\r\n\t\t// if it was published remove it from the component proper\r\n\t\tif (comp.publish) delete this[nom];\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns an [array]{@glossary Array} of owned [components]{@link module:enyo/Component~Component}; in\r\n\t* other words, converts the [$ hash]{@link module:enyo/Component~Component#$} into an array\r\n\t* and returns the array.\r\n\t*\r\n\t* @returns {module:enyo/Component~Component[]} The [components]{@link module:enyo/Component~Component} found in the\r\n\t*\t[$ hash]{@link module:enyo/Component~Component#$}.\r\n\t* @public\r\n\t*/\r\n\tgetComponents: function () {\r\n\t\treturn utils.values(this.$);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tadjustComponentProps: function (props) {\r\n\t\tif (this.defaultProps) utils.mixin(props, this.defaultProps, {ignore: true});\r\n\t\tprops.kind = props.kind || props.isa || this.defaultKind;\r\n\t\tprops.owner = props.owner || this;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_createComponent: function (props, ext) {\r\n\t\tvar def = ext ? utils.mixin({}, [ext, props]) : utils.clone(props);\r\n\r\n\t\t// always adjust the properties according to the needs of the kind and parent kinds\r\n\t\tthis.adjustComponentProps(def);\r\n\r\n\t\t// pass along for the final stage\r\n\t\treturn Component.create(def);\r\n\t},\r\n\r\n\t/**\r\n\t* Creates and returns a [component]{@link module:enyo/Component~Component} as defined by the combination of\r\n\t* a base and an additional property [hash]{@glossary Object}. The properties provided\r\n\t* in the standard property hash override those provided in the\r\n\t* additional property hash.\r\n\t*\r\n\t* The created component passes through initialization machinery\r\n\t* provided by the creating component, which may supply special\r\n\t* handling. Unless the [owner]{@link module:enyo/Component~Component#owner} is explicitly specified, the new\r\n\t* component will be owned by the instance on which this method is called.\r\n\t*\r\n\t* @example\r\n\t* // Create a new component named 'dynamic', owned by 'this'\r\n\t* // (will be available as this.$.dynamic).\r\n\t* this.createComponent({name: 'dynamic'});\r\n\t*\r\n\t* @example\r\n\t* // Create a new component named 'another' owned by 'other'\r\n\t* // (will be available as other.$.another).\r\n\t* this.createComponent({name: 'another'}, {owner: other});\r\n\t*\r\n\t* @param {Object} props - The declarative [kind]{@glossary kind} definition.\r\n\t* @param {Object} ext - Additional properties to be applied (defaults).\r\n\t* @returns {module:enyo/Component~Component} The instance created with the given parameters.\r\n\t* @public\r\n\t*/\r\n\tcreateComponent: function (props, ext) {\r\n\t\t// createComponent and createComponents both delegate to the protected method\r\n\t\t// (_createComponent), allowing overrides to customize createComponent and\r\n\t\t// createComponents separately.\r\n\t\treturn this._createComponent(props, ext);\r\n\t},\r\n\r\n\t/**\r\n\t* Creates [components]{@link module:enyo/Component~Component} as defined by the [arrays]{@glossary Array}\r\n\t* of base and additional property [hashes]{@glossary Object}. The standard and\r\n\t* additional property hashes are combined as described in\r\n\t* [createComponent()]{@link module:enyo/Component~Component#createComponent}.\r\n\t*\r\n\t* @example\r\n\t* // ask foo to create components 'bar' and 'zot', but set the owner of\r\n\t* // both components to 'this'.\r\n\t* this.$.foo.createComponents([\r\n\t*\t{name: 'bar'},\r\n\t*\t{name: 'zot'}\r\n\t* ], {owner: this});\r\n\t*\r\n\t* @param {Object[]} props The array of {@link module:enyo/Component~Component} definitions to be created.\r\n\t* @param {Object} ext - Additional properties to be supplied as defaults for each.\r\n\t* @returns {module:enyo/Component~Component[]} The array of [components]{@link module:enyo/Component~Component} that were\r\n\t*\tcreated.\r\n\t* @public\r\n\t*/\r\n\tcreateComponents: function (props, ext) {\r\n\t\tvar comps = [],\r\n\t\t\tcomp,\r\n\t\t\ti;\r\n\r\n\t\tif (props) {\r\n\t\t\tfor (i = 0; i < props.length; ++i) {\r\n\t\t\t\tcomp = props[i];\r\n\t\t\t\tcomps.push(this._createComponent(comp, ext));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn comps;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetBubbleTarget: function (nom, event) {\r\n\t\tif (event.delegate) return this.owner;\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\tthis.bubbleTarget\r\n\t\t\t\t|| (this.cachedBubble && this.cachedBubbleTarget[nom])\r\n\t\t\t\t|| this.owner\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Bubbles an {@glossary event} up an [object]{@glossary Object} chain,\r\n\t* starting with `this`.\r\n\t*\r\n\t* A handler for an event may be specified. See {@link module:enyo/Component~Component~EventHandler}\r\n\t* for complete details.\r\n\t*\r\n\t* @param {String} nom - The name of the {@glossary event} to bubble.\r\n\t* @param {Object} [event] - The event [object]{@glossary Object} to be passed along\r\n\t* while bubbling.\r\n\t* @param {module:enyo/Component~Component} [sender=this] - The {@link module:enyo/Component~Component} responsible for\r\n\t*\tbubbling the event.\r\n\t* @returns {Boolean} `false` if unhandled or uninterrupted; otherwise, `true`.\r\n\t* @public\r\n\t*/\r\n\tbubble: function (nom, event, sender) {\r\n\t\tif (!this._silenced) {\r\n\t\t\tevent = event || {};\r\n\t\t\tevent.lastHandledComponent = null;\r\n\t\t\tevent.bubbling = true;\r\n\t\t\t// deliberately done this way\r\n\t\t\tif (event.originator == null) event.originator = sender || this;\r\n\t\t\treturn this.dispatchBubble(nom, event, sender || this);\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t* Bubbles an {@glossary event} up an [object]{@glossary Object} chain,\r\n\t* starting **above** `this`.\r\n\t*\r\n\t* A handler for an event may be specified. See {@link module:enyo/Component~Component~EventHandler}\r\n\t* for complete details.\r\n\t*\r\n\t* @param {String} nom - The name of the {@glossary event}.\r\n\t* @param {Object} [event] - The event properties to pass along while bubbling.\r\n\t* @returns {Boolean} `false` if unhandled or uninterrupted; otherwise, `true`.\r\n\t* @public\r\n\t*/\r\n\tbubbleUp: function (nom, event) {\r\n\t\tvar next;\r\n\r\n\t\tif (!this._silenced) {\r\n\t\t\tevent = event || {};\r\n\t\t\tevent.bubbling = true;\r\n\t\t\tnext = this.getBubbleTarget(nom, event);\r\n\t\t\tif (next) {\r\n\t\t\t\t// use delegate as sender if it exists to preserve illusion\r\n\t\t\t\t// that event is dispatched directly from that, but we still\r\n\t\t\t\t// have to bubble to get decorations\r\n\t\t\t\treturn next.dispatchBubble(nom, event, event.delegate || this);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t* Sends an {@glossary event} to a named [delegate]{@glossary delegate}.\r\n\t* This [object]{@glossary Object} may dispatch an event to\r\n\t* itself via a [handler]{@link module:enyo/Component~Component~EventHandler}, or to its\r\n\t* [owner]{@link module:enyo/Component~Component#owner} via an event property, e.g.:\r\n\t*\r\n\t*\thandlers {\r\n\t*\t\t// 'tap' events dispatched to this.tapHandler\r\n\t*\t\tontap: 'tapHandler'\r\n\t*\t}\r\n\t*\r\n\t*\t// 'tap' events dispatched to 'tapHandler' delegate in this.owner\r\n\t*\tontap: 'tapHandler'\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tdispatchEvent: function (nom, event, sender) {\r\n\t\tvar delegate,\r\n\t\t\tret;\r\n\r\n\t\tif (!this._silenced) {\r\n\t\t\t// if the event has a delegate associated with it we grab that\r\n\t\t\t// for reference\r\n\t\t\t// NOTE: This is unfortunate but we can't use a pooled object here because\r\n\t\t\t// we don't know where to release it\r\n\t\t\tdelegate = (event || (event = {})).delegate;\r\n\r\n\t\t\t// bottleneck event decoration w/ optimization to avoid call to empty function\r\n\t\t\tif (this.decorateEvent !== Component.prototype.decorateEvent) {\r\n\t\t\t\tthis.decorateEvent(nom, event, sender);\r\n\t\t\t}\r\n\r\n\t\t\t// first, handle any delegated events intended for this object\r\n\t\t\tif (delegate && delegate.owner === this) {\r\n\t\t\t\t// the most likely case is that we have a method to handle this\r\n\t\t\t\tif (this[nom] && 'function' === typeof this[nom]) {\r\n\t\t\t\t\treturn this.dispatch(nom, event, sender);\r\n\t\t\t\t}\r\n\t\t\t\t// but if we don't, just stop the event from going further\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// for non-delgated events, try the handlers block if possible\r\n\t\t\tif (!delegate) {\r\n\t\t\t\tvar bHandler = this.handlers && this.handlers[nom];\r\n\t\t\t\tvar bDelegatedFunction = this[nom] && utils.isString(this[nom]);\r\n\t\t\t\tvar cachePoint = this.cachePoint || bHandler || bDelegatedFunction || this.id === \"master\" ;\r\n\r\n\t\t\t\tif (event.bubbling) {\r\n\t\t\t\t\tif (event.lastHandledComponent && cachePoint) {\r\n\t\t\t\t\t\tevent.lastHandledComponent.cachedBubbleTarget[nom] = this;\r\n\t\t\t\t\t\tevent.lastHandledComponent = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!event.lastHandledComponent && this.id !== \"master\") {\r\n\t\t\t\t\t\tevent.lastHandledComponent = this;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (bHandler && this.dispatch(bHandler, event, sender)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (bDelegatedFunction) {\r\n\t\t\t\t\t// we dispatch it up as a special delegate event with the\r\n\t\t\t\t\t// component that had the delegation string property stored in\r\n\t\t\t\t\t// the 'delegate' property\r\n\t\t\t\t\tevent.delegate = this;\r\n\t\t\t\t\tret = this.bubbleUp(this[nom], event, sender);\r\n\t\t\t\t\tdelete event.delegate;\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t* Internal - try dispatching {@glossary event} to self; if that fails,\r\n\t* [bubble it up]{@link module:enyo/Component~Component#bubbleUp} the tree.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tdispatchBubble: function (nom, event, sender) {\r\n\t\tif (!this._silenced) {\r\n\t\t\t// Try to dispatch from here, stop bubbling on truthy return value\r\n\t\t\tif (this.dispatchEvent(nom, event, sender)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t// Bubble to next target\r\n\t\t\treturn this.bubbleUp(nom, event, sender);\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdecorateEvent: function (nom, event, sender) {\r\n\t\t// an event may float by us as part of a dispatchEvent chain\r\n\t\t// both call this method so intermediaries can decorate inEvent\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstopAllJobs: function () {\r\n\t\tvar job;\r\n\r\n\t\tif (this.__jobs) for (job in this.__jobs) this.stopJob(job);\r\n\t},\r\n\r\n\t/**\r\n\t* Dispatches the {@glossary event} to named [delegate]{@glossary delegate} `nom`,\r\n\t* if it exists. [Subkinds]{@glossary subkind} may re-route dispatches. Note that\r\n\t* both 'handlers' events and events delegated from owned controls arrive here.\r\n\t* If you need to handle these types of events differently, you may also need to\r\n\t* override [dispatchEvent()]{@link module:enyo/Component~Component#dispatchEvent}.\r\n\t*\r\n\t* @param {String} nom - The method name to dispatch the {@glossary event}.\r\n\t* @param {Object} [event] - The event [object]{@glossary Object} to pass along.\r\n\t* @param {module:enyo/Component~Component} [sender=this] - The originator of the event.\r\n\t* @public\r\n\t*/\r\n\tdispatch: function (nom, event, sender) {\r\n\t\tvar fn;\r\n\r\n\t\tif (!this._silenced) {\r\n\t\t\tfn = nom && this[nom];\r\n\t\t\tif (fn && typeof fn == 'function') {\r\n\t\t\t\t// @todo: deprecate sender\r\n\t\t\t\treturn fn.call(this, sender || this, event);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t* Triggers the [handler]{@link module:enyo/Component~Component~EventHandler} for a given\r\n\t* {@glossary event} type.\r\n\t*\r\n\t* @example\r\n\t* myControl.triggerHandler('ontap');\r\n\t*\r\n\t* @param {String} nom - The name of the {@glossary event} to trigger.\r\n\t* @param {Object} [event] - The event object to pass along.\r\n\t* @param {module:enyo/Component~Component} [sender=this] - The originator of the event.\r\n\t* @returns {Boolean} `false` if unhandled or uninterrupted, `true` otherwise.\r\n\t* @public\r\n\t*/\r\n\ttriggerHandler: function () {\r\n\t\treturn this.dispatchEvent.apply(this, arguments);\r\n\t},\r\n\r\n\t/**\r\n\t* Sends a message to myself and all of my [components]{@link module:enyo/Component~Component}.\r\n\t* You can stop a waterfall into components owned by a receiving object\r\n\t* by returning a truthy value from the {@glossary event}\r\n\t* [handler]{@link module:enyo/Component~Component~EventHandler}.\r\n\t*\r\n\t* @param {String} nom - The name of the {@glossary event} to waterfall.\r\n\t* @param {Object} [event] - The event [object]{@glossary Object} to pass along.\r\n\t* @param {module:enyo/Component~Component} [sender=this] - The originator of the event.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\twaterfall: function(nom, event, sender) {\r\n\t\tif (!this._silenced) {\r\n\t\t\tevent = event || {};\r\n\t\t\tevent.bubbling = false;\r\n\r\n\t\t\t// give the locals an opportunity to interrupt the event\r\n\t\t\tif (this.dispatchEvent(nom, event, sender)) return true;\r\n\r\n\t\t\t// otherwise carry on\r\n\t\t\tthis.waterfallDown(nom, event, sender || this);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Sends a message to all of my [components]{@link module:enyo/Component~Component}, but not myself. You can\r\n\t* stop a [waterfall]{@link module:enyo/Component~Component#waterfall} into [components]{@link module:enyo/Component~Component}\r\n\t* owned by a receiving [object]{@glossary Object} by returning a truthy value from the\r\n\t* {@glossary event} [handler]{@link module:enyo/Component~Component~EventHandler}.\r\n\t*\r\n\t* @param {String} nom - The name of the {@glossary event}.\r\n\t* @param {Object} [event] - The event [object]{@glossary Object} to pass along.\r\n\t* @param {module:enyo/Component~Component} [sender=this] - The event originator.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\twaterfallDown: function(nom, event, sender) {\r\n\t\tvar comp;\r\n\t\tevent = event || {};\r\n\t\tevent.bubbling = false;\r\n\r\n\t\tif (!this._silenced) {\r\n\t\t\tfor (comp in this.$) this.$[comp].waterfall(nom, event, sender || this);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_silenced: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_silenceCount: 0,\r\n\r\n\t/**\r\n\t* Sets a flag that disables {@glossary event} propagation for this\r\n\t* [component]{@link module:enyo/Component~Component}. Also increments an internal counter that tracks\r\n\t* the number of times the [unsilence()]{@link module:enyo/Component~Component#unsilence} method must\r\n\t* be called before event propagation will continue.\r\n\t*\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tsilence: function () {\r\n\t\tthis._silenced = true;\r\n\t\tthis._silenceCount += 1;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Determines if the [object]{@glossary Object} is currently\r\n\t* [silenced]{@link module:enyo/Component~Component#_silenced}, which will prevent propagation of\r\n\t* [events]{@glossary event} (of any kind).\r\n\t*\r\n\t* @returns {Boolean} `true` if silenced; otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\tisSilenced: function () {\r\n\t\treturn this._silenced;\r\n\t},\r\n\r\n\t/**\r\n\t* Allows {@glossary event} propagation for this [component]{@link module:enyo/Component~Component}\r\n\t* if the internal silence counter is `0`; otherwise, decrements the counter by one.\r\n\t* For event propagation to resume, this method must be called one time each call to\r\n\t* [silence()]{@link module:enyo/Component~Component#silence}.\r\n\t*\r\n\t* @returns {Boolean} `true` if the {@link module:enyo/Component~Component} is now unsilenced completely;\r\n\t*\t`false` if it remains silenced.\r\n\t* @public\r\n\t*/\r\n\tunsilence: function () {\r\n\t\tif (0 !== this._silenceCount) --this._silenceCount;\r\n\t\tif (0 === this._silenceCount) this._silenced = false;\r\n\t\treturn !this._silenced;\r\n\t},\r\n\r\n\t/**\r\n\t* Creates a new [job]{@link module:enyo/job} tied to this instance of the\r\n\t* [component]{@link module:enyo/Component~Component}. If the component is\r\n\t* [destroyed]{@link module:enyo/Component~Component#destroy}, any jobs associated with it\r\n\t* will be stopped.\r\n\t*\r\n\t* If you start a job with the same name as a pending job,\r\n\t* the original job will be stopped; this can be useful for resetting\r\n\t* timeouts.\r\n\t*\r\n\t* You may supply a priority level (1-10) at which the job should be\r\n\t* executed. The default level is `5`. Setting the priority lower than `5` (or setting it to\r\n\t* the string `\"low\"`) will defer the job if an animation is in progress,\r\n\t* which can help to avoid stuttering.\r\n\t*\r\n\t* @param {String} nom - The name of the [job]{@link module:enyo/job} to start.\r\n\t* @param {(Function|String)} job - Either the name of a method or a\r\n\t*\t[function]{@glossary Function} to execute as the requested job.\r\n\t* @param {Number} wait - The number of milliseconds to wait before starting\r\n\t*\tthe job.\r\n\t* @param {Number} [priority=5] The priority value to be associated with this\r\n\t*\tjob.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tstartJob: function (nom, job, wait, priority) {\r\n\t\tvar jobs = (this.__jobs = this.__jobs || {});\r\n\t\tpriority = priority || 5;\r\n\t\t// allow strings as job names, they map to local method names\r\n\t\tif (typeof job == 'string') job = this[job];\r\n\t\t// stop any existing jobs with same name\r\n\t\tthis.stopJob(nom);\r\n\t\tjobs[nom] = setTimeout(this.bindSafely(function() {\r\n\t\t\tJobs.add(this.bindSafely(job), priority, nom);\r\n\t\t}), wait);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Stops a [component]{@link module:enyo/Component~Component}-specific [job]{@link module:enyo/job} before it has\r\n\t* been activated.\r\n\t*\r\n\t* @param {String} nom - The name of the [job]{@link module:enyo/job} to be stopped.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tstopJob: function (nom) {\r\n\t\tvar jobs = (this.__jobs = this.__jobs || {});\r\n\t\tif (jobs[nom]) {\r\n\t\t\tclearTimeout(jobs[nom]);\r\n\t\t\tdelete jobs[nom];\r\n\t\t}\r\n\t\tJobs.remove(nom);\r\n\t},\r\n\r\n\t/**\r\n\t* Executes the specified [job]{@link module:enyo/job} immediately, then prevents\r\n\t* any other calls to `throttleJob()` with the same job name from running for\r\n\t* the specified amount of time.\r\n\t*\r\n\t* @param {String} nom - The name of the [job]{@link module:enyo/job} to throttle.\r\n\t* @param {(Function|String)} job - Either the name of a method or a\r\n\t*\t[function]{@glossary Function} to execute as the requested job.\r\n\t* @param {Number} wait - The number of milliseconds to wait before executing the\r\n\t*\tjob again.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tthrottleJob: function (nom, job, wait) {\r\n\t\tvar jobs = (this.__jobs = this.__jobs || {});\r\n\t\t// if we still have a job with this name pending, return immediately\r\n\t\tif (!jobs[nom]) {\r\n\t\t\t// allow strings as job names, they map to local method names\r\n\t\t\tif (typeof job == 'string') job = this[job];\r\n\t\t\tjob.call(this);\r\n\t\t\tjobs[nom] = setTimeout(this.bindSafely(function() {\r\n\t\t\t\tthis.stopJob(nom);\r\n\t\t\t}), wait);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n});\r\n\r\nComponent.prototype.defaultKind = Component;\r\n\r\n/**\r\n* @private\r\n*/\r\nkind.setDefaultCtor(Component);\r\n\r\n/**\r\n* Creates new instances from [config]{@glossary configurationBlock}\r\n* [objects]{@glossary Object}. This method looks up the proper\r\n* [constructor]{@glossary constructor} based on the provided [kind]{@glossary kind}\r\n* attribute.\r\n*\r\n* @name module:enyo/Compoment~Component.create\r\n* @param {Object} props - The properties that define the [kind]{@glossary kind}.\r\n* @returns {*} An instance of the requested [kind]{@glossary kind}.\r\n* @public\r\n*/\r\nComponent.create = function (props) {\r\n\tvar theKind,\r\n\t\tCtor;\r\n\r\n\tif (!props.kind && props.hasOwnProperty('kind')) throw new Error(\r\n\t\t'enyo.create: Attempt to create a null kind. Check dependencies for [' + props.name + ']'\r\n\t);\r\n\r\n\ttheKind = props.kind || props.isa || kind.getDefaultCtor();\r\n\tCtor = kind.constructorForKind(theKind);\r\n\r\n\tif (!Ctor) {\r\n\t\tlogger.error('No constructor found for kind ' + theKind);\r\n\t\tCtor = Component;\r\n\t}\r\n\r\n\treturn new Ctor(props);\r\n};\r\n\r\n/**\r\n* @name module:enyo/Component~Component.subclass\r\n* @static\r\n* @private\r\n*/\r\nComponent.subclass = function (ctor, props) {\r\n\t// Note: To reduce API surface area, sub-components are declared only as\r\n\t// 'components' in both kind and instance declarations.\r\n\t//\r\n\t// However, 'components' from kind declarations must be handled separately\r\n\t// at creation time.\r\n\t//\r\n\t// We rename the property here to avoid having\r\n\t// to interrogate the prototype at creation time.\r\n\t//\r\n\tvar proto = ctor.prototype;\r\n\t//\r\n\tif (props.components) {\r\n\t\tproto.kindComponents = props.components;\r\n\t\tdelete proto.components;\r\n\t} else {\r\n\t\t// Feature to mixin overrides of super-kind component properties from named hash\r\n\t\t// (only applied when the sub-kind doesn't supply its own components block)\r\n\t\tif (props.componentOverrides) {\r\n\t\t\tproto.kindComponents = Component.overrideComponents(\r\n\t\t\t\tproto.kindComponents,\r\n\t\t\t\tprops.componentOverrides,\r\n\t\t\t\tproto.defaultKind\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n* @name module:enyo/Component~Component.concat\r\n* @static\r\n* @private\r\n*/\r\nComponent.concat = function (ctor, props) {\r\n\tvar proto = ctor.prototype || ctor,\r\n\t\thandlers;\r\n\tif (props.handlers) {\r\n\t\thandlers = proto.handlers ? utils.clone(proto.handlers) : {};\r\n\t\tproto.handlers = utils.mixin(handlers, props.handlers);\r\n\t\tdelete props.handlers;\r\n\t}\r\n\tif (props.events) Component.publishEvents(proto, props);\r\n};\r\n\r\n/**\r\n* @name module:enyo/Component~Component.overrideComponents\r\n* @static\r\n* @private\r\n*/\r\nComponent.overrideComponents = function (components, overrides, defaultKind) {\r\n\tvar omitMethods = function (k, v) {\r\n\t\tvar isMethod = \r\n\t\t\t// If it's a function, then it's a method (unless it's\r\n\t\t\t// a constructor passed as value for 'kind')\r\n\t\t\t(utils.isFunction(v) && (k !== 'kind')) ||\r\n\t\t\t// If it isInherited(), then it's also a method (since\r\n\t\t\t// Inherited is an object wrapper for a function)\r\n\t\t\tkind.isInherited(v);\r\n\r\n\t\treturn !isMethod;\r\n\t};\r\n\tcomponents = utils.clone(components);\r\n\tfor (var i=0; i<components.length; i++) {\r\n\t\tvar c = utils.clone(components[i]);\r\n\t\tvar o = overrides[c.name];\r\n\t\tvar ctor = kind.constructorForKind(c.kind || defaultKind);\r\n\t\tif (o) {\r\n\r\n\t\t\t// NOTE: You cannot overload mixins, observers or computed properties from\r\n\t\t\t// component overrides\r\n\t\t\tkind.concatHandler(c, o);\r\n\t\t\tvar b = (c.kind && ((typeof c.kind == 'string' && utils.getPath(c.kind)) || (typeof c.kind == 'function' && c.kind))) || kind.getDefaultCtor();\r\n\t\t\twhile (b) {\r\n\t\t\t\tif (b.concat) { b.concat(c, o, true); }\r\n\t\t\t\tb = b.prototype.base;\r\n\t\t\t}\r\n\t\t\t// All others just mix in\r\n\t\t\tutils.mixin(c, o, {filter: omitMethods});\r\n\t\t}\r\n\t\tif (c.components) {\r\n\t\t\tc.components = Component.overrideComponents(c.components, overrides, ctor.prototype.defaultKind);\r\n\t\t}\r\n\t\tcomponents[i] = c;\r\n\t}\r\n\treturn components;\r\n};\r\n\r\n/**\r\n* @name module:enyo/Component~Component.publishEvents\r\n* @static\r\n* @private\r\n*/\r\nComponent.publishEvents = function (ctor, props) {\r\n\tvar events = props.events,\r\n\t\tevent,\r\n\t\tproto;\r\n\tif (events) {\r\n\t\tproto = ctor.prototype || ctor;\r\n\t\tfor (event in events) Component.addEvent(event, events[event], proto);\r\n\t}\r\n};\r\n\r\n/**\r\n* @name module:enyo/Component~Component.addEvent\r\n* @static\r\n* @private\r\n*/\r\nComponent.addEvent = function (nom, val, proto) {\r\n\tvar v, fn;\r\n\tif (!utils.isString(val)) {\r\n\t\tv = val.value;\r\n\t\tfn = val.caller;\r\n\t} else {\r\n\t\tif (nom.slice(0, 2) != 'on') {\r\n\t\t\tlogger.warn('enyo/Component.addEvent: event names must start with \"on\". ' + proto.kindName + ' ' +\r\n\t\t\t\t'event \"' + nom + '\" was auto-corrected to \"on' + nom + '\".');\r\n\t\t\tnom = 'on' + nom;\r\n\t\t}\r\n\t\tv = val;\r\n\t\tfn = 'do' + utils.cap(nom.slice(2));\r\n\t}\r\n\tproto[nom] = v;\r\n\tif (!proto[fn]) {\r\n\t\tproto[fn] = function(payload, other) {\r\n\t\t\t// bubble this event\r\n\r\n\t\t\t// if the second parameter exists then we use that - this is for a single case\r\n\t\t\t// where a named event delegates happent to point to an auto generated event\r\n\t\t\t// bubbler like this one - in that case the first parameter is actually the\r\n\t\t\t// sender\r\n\t\t\tvar e = other || payload;\r\n\t\t\tif (!e) {\r\n\t\t\t\te = {};\r\n\t\t\t}\r\n\t\t\tvar d = e.delegate;\r\n\t\t\t// delete payload.delegate;\r\n\t\t\te.delegate = undefined;\r\n\t\t\tif (!utils.exists(e.type)) {\r\n\t\t\t\te.type = nom;\r\n\t\t\t}\r\n\t\t\tthis.bubble(nom, e);\r\n\t\t\tif (d) {\r\n\t\t\t\te.delegate = d;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nfunction prefixFromKindName (nom) {\r\n\tvar pre = kindPrefix[nom],\r\n\t\tlast;\r\n\r\n\tif (!pre) {\r\n\t\tlast = nom.lastIndexOf('.');\r\n\t\tpre = (last >= 0) ? nom.slice(last+1) : nom;\r\n\t\tpre = pre.charAt(0).toLowerCase() + pre.slice(1);\r\n\t\tkindPrefix[nom] = pre;\r\n\t}\r\n\r\n\treturn pre;\r\n}\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Collection~Collection} kind.\r\n* @module enyo/Collection\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tComponent = require('./Component'),\r\n\tEventEmitter = require('./EventEmitter'),\r\n\tModel = require('./Model'),\r\n\tModelList = require('./ModelList'),\r\n\tStateSupport = require('./StateSupport'),\r\n\tSource = require('./Source'),\r\n\tStore = require('./Store'),\r\n\tStates = require('./States');\r\n\r\n/**\r\n* This is only necessary because of the order in which mixins are applied.\r\n*\r\n* @class\r\n* @private\r\n*/\r\nvar BaseCollection = kind({\r\n\tkind: Component,\r\n\tmixins: [EventEmitter, StateSupport]\r\n});\r\n\r\n/**\r\n* Fires when [models]{@link module:enyo/Model~Model} have been [added]{@link module:enyo/Collection~Collection#add}\r\n* to the [collection]{@link module:enyo/Collection~Collection}.\r\n*\r\n* @event module:enyo/Collection~Collection#add\r\n* @type {Object}\r\n* @property {module:enyo/Model~Model[]} models - An [array]{@glossary Array} of\r\n*\t[models]{@link module:enyo/Model~Model} that were [added]{@link module:enyo/Collection~Collection#add} to the\r\n*\t[collection]{@link module:enyo/Collection~Collection}.\r\n* @property {module:enyo/Collection~Collection} collection - A reference to the\r\n*\tcollection that [emitted]{@link module:enyo/EventEmitter~EventEmitter#emit} the event.\r\n* @property {Number} index - The index in the given collection where the models were inserted.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when [models]{@link module:enyo/Model~Model} have been [removed]{@link module:enyo/Collection~Collection#remove}\r\n* from the [collection]{@link module:enyo/Collection~Collection}.\r\n*\r\n* @event module:enyo/Collection~Collection#remove\r\n* @type {Object}\r\n* @property {module:enyo/Model~Model[]} models - An [array]{@glossary Array} of\r\n*\t[models]{@link module:enyo/Model~Model} that were [removed]{@link module:enyo/Collection~Collection#remove} from the\r\n*\t[collection]{@link module:enyo/Collection~Collection}.\r\n* @property {module:enyo/Collection~Collection} collection - A reference to the\r\n*\tcollection that [emitted]{@link module:enyo/EventEmitter~EventEmitter#emit} the event.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when the [collection]{@link module:enyo/Collection~Collection} has been\r\n* [sorted]{@link module:enyo/Collection~Collection#sort}.\r\n*\r\n* @event module:enyo/Collection~Collection#sort\r\n* @type {Object}\r\n* @property {module:enyo/Model~Model[]} models - An [array]{@glossary Array} of all\r\n*\t[models]{@link module:enyo/Model~Model} in the correct, [sorted]{@link module:enyo/Collection~Collection#sort} order.\r\n* @property {module:enyo/Collection~Collection} collection - A reference to the\r\n*\t[collection]{@link module:enyo/Collection~Collection} that [emitted]{@link module:enyo/EventEmitter~EventEmitter#emit} the event.\r\n* @property {Function} comparator - A reference to the\r\n*\t[comparator]{@link module:enyo/Collection~Collection#comparator} that was used when\r\n*\tsorting the collection.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when the [collection]{@link module:enyo/Collection~Collection} has been reset and its\r\n* contents have been updated arbitrarily.\r\n*\r\n* @event module:enyo/Collection~Collection#reset\r\n* @type {Object}\r\n* @property {module:enyo/Model~Model[]} models - An [array]{@glossary Array} of all\r\n*\t[models]{@link module:enyo/Model~Model} as they are currently.\r\n* @property {module:enyo/Collection~Collection} collection - A reference to the\r\n*\t[collection]{@link module:enyo/Collection~Collection} that [emitted]{@link module:enyo/EventEmitter~EventEmitter#emit} the event.\r\n* @public\r\n*/\r\n\r\n/**\r\n* The default configurable [options]{@link module:enyo/Collection~Collection#options} used by certain API\r\n* methods of {@link module:enyo/Collection~Collection}.\r\n*\r\n* @typedef {Object} module:enyo/Collection~Options\r\n* @property {Boolean} merge=true - If `true`, when data is being added to the\r\n*\t[collection]{@link module:enyo/Collection~Collection} that already exists (i.e., is matched by\r\n*\t[primaryKey]{@link module:enyo/Model~Model#primaryKey}), the new data values will be set\r\n* with the current [model]{@link module:enyo/Model~Model} instance. This means that the\r\n* existing values will be updated with the new ones by calling\r\n* [set()]{@link module:enyo/Model~Model#set} on the model.\r\n* @property {Boolean} silent=false - Many accessor methods of the collection\r\n*\twill emit events and/or notifications. This value indicates whether or not\r\n*\tthose events or notifications will be suppressed at times when that behavior\r\n*\tis necessary. Typically, you will not want to modify this value.\r\n* @property {Boolean} purge=false - When [adding]{@link module:enyo/Collection~Collection#add}\r\n*\tmodels, this flag indicates whether or not to [remove]{@link module:enyo/Collection~Collection#remove}\r\n* (purge) the existing models that are not included in the new dataset.\r\n* @property {Boolean} parse=false - The collection's [parse()]{@link module:enyo/Collection~Collection#parse}\r\n*\tmethod can be executed automatically when incoming data is added via the\r\n*\t[constructor()]{@link module:enyo/Collection~Collection#constructor} method, or, later, via a\r\n*\t[fetch]{@link module:enyo/Collection~Collection#fetch}. You may need to examine the runtime\r\n* configuration options of the method(s) to determine whether parsing is needed.\r\n* In cases where parsing will always be necessary, this may be set to `true`.\r\n* @property {Boolean} create=true - This value determines whether a new\r\n*\tmodel will be created when data being added to the collection cannot be found\r\n* (or the [find]{@link module:enyo/Collection~Collection#options#find} flag is `false`). Models\r\n* that are created by a collection have their [owner]{@link module:enyo/Model~Model#owner}\r\n* property set to the collection that instanced them.\r\n* @property {Boolean} find=true - When data being added to the collection is not\r\n* already a model instance, the collection will attempt to find an existing model\r\n* by its `primaryKey`, if it exists. In most cases, this is the preferred behavior,\r\n* but if the model [kind]{@glossary kind} being  instanced does not have a\r\n* `primaryKey`, it is unnecessary and this value may be set to `false`.\r\n* @property {Boolean} sort=false - When adding models to the collection, the\r\n* collection can also be sorted. If the [comparator]{@link module:enyo/Collection~Collection#comparator}\r\n* is a [function]{@glossary Function} and this value is `true`, the comparator\r\n*\twill be used to sort the entire collection. It may also be a function that\r\n* will be used to sort the collection, instead of (or in the place of) a defined\r\n*\tcomparator.\r\n* @property {Boolean} commit=false - When modifications are made to the\r\n*\tcollection, this flag ensures that those changes are\r\n*\t[committed]{@link module:enyo/Collection~Collection#commit} according to the configuration and\r\n*\tavailability of a [source]{@link module:enyo/Collection~Collection#source}. This may also be\r\n* configured per-call to methods that use it.\r\n* @property {Boolean} destroy=false - When models are removed from the collection,\r\n*\tthis flag indicates whether or not they will be [destroyed]{@link module:enyo/Model~Model#destroy}\r\n* as well. Note that this could have a significant impact if the same models are\r\n* used in other collections.\r\n* @property {Boolean} complete=false - When models are removed from the\r\n* collection, this flag indicates whether or not they will also be removed from\r\n* the [store]{@link module:enyo/Collection~Collection#store}. This is rarely necessary and can\r\n* cause problems if the models are used in other collections. In addition, this\r\n* value will be ignored if the [destroy]{@link module:enyo/Collection~Collection#options#destroy}\r\n* flag is `true`.\r\n* @property {Boolean} fetch=false - If `true`, when the collection is initialized,\r\n* it will automatically attempt to fetch data if the\r\n* [source]{@link module:enyo/Collection~Collection#source} and [url]{@link module:enyo/Collection~Collection#url}\r\n*\tor [getUrl]{@link module:enyo/Collection~Collection#getUrl} properties are properly configured.\r\n* @property {Boolean} modelEvents=true - If `false`, this will keep the collection from\r\n*\tregistering with each model for individual model events.\r\n*/\r\n\r\n/**\r\n* The configuration options for [add()]{@link module:enyo/Collection~Collection#add}. For complete\r\n* descriptions of the options and their default values, see\r\n* {@link module:enyo/Collection~Collection#options}. Note that some properties have different\r\n* meanings in different contexts. Please review the descriptions below to see\r\n* how each property is used in this context.\r\n*\r\n* @typedef {module:enyo/Collection~Options} module:enyo/Collection~AddOptions\r\n* @property {Boolean} merge - Update existing [models]{@link module:enyo/Model~Model} when found.\r\n* @property {Boolean} purge - Remove existing models not in the new dataset.\r\n* @property {Boolean} silent - Emit [events]{@glossary event} and notifications.\r\n* @property {Boolean} parse - Parse the incoming dataset before evaluating.\r\n* @property {Boolean} find - Look for an existing model.\r\n* @property {(Boolean|Function)} sort - Sort the finalized dataset.\r\n* @property {Boolean} commit - [Commit]{@link module:enyo/Collection~Collection#commit} changes to the\r\n*\t{@link module:enyo/Collection~Collection} after completing the [add]{@link module:enyo/Collection~Collection#add}\r\n* operation.\r\n* @property {Boolean} create - When an existing {@link module:enyo/Model~Model} instance cannot be\r\n*\tresolved, a new instance should be created.\r\n* @property {number} index - The index at which to add the new dataset. Defaults to the\r\n*\tend of the current dataset if not explicitly set or invalid.\r\n* @property {Boolean} destroy - If `purge` is `true`, this will\r\n* [destroy]{@link module:enyo/Model~Model#destroy} any models that are\r\n* [removed]{@link module:enyo/Collection~Collection#remove}.\r\n* @property {Object} modelOptions - When instancing a model, this\r\n*\t[object]{@glossary Object} will be passed to the constructor as its `options`\r\n*\tparameter.\r\n*/\r\n\r\n/**\r\n* The configuration options for [remove()]{@link module:enyo/Collection~Collection#remove}. For\r\n* complete descriptions of the options and their defaults, see\r\n* {@link module:enyo/Collection~Options}. Note that some properties have different\r\n* meanings in different contexts. Please review the descriptions below to see\r\n* how each property is used in this context.\r\n*\r\n* @typedef {module:enyo/Collection~Options} module:enyo/Collection~RemoveOptions\r\n* @property {Boolean} silent - Emit [events]{@glossary event} and notifications.\r\n* @property {Boolean} commit - [Commit]{@link module:enyo/Collection~Collection#commit} changes to the\r\n*\t[collection]{@link module:enyo/Collection~Collection} after completing the\r\n*\t[remove]{@link module:enyo/Collection~Collection#remove} operation.\r\n* @property {Boolean} complete - Remove the [model]{@link module:enyo/Model~Model} from the\r\n*\t[store]{@link module:enyo/Collection~Collection#store} as well as the collection.\r\n* @property {Boolean} destroy - [Destroy]{@link module:enyo/Model~Model#destroy} models\r\n*\tthat are removed from the collection.\r\n*/\r\n\r\n/**\r\n* The configurable options for [fetch()]{@link module:enyo/Collection~Collection#fetch},\r\n* [commit()]{@link module:enyo/Collection~Collection#commit}, and [destroy()]{@link module:enyo/Collection~Collection#destroy}.\r\n*\r\n* @typedef {module:enyo/Collection~Options} module:enyo/Collection~ActionOptions\r\n* @property {module:enyo/Collection~Collection~Success} success - The callback executed upon successful\r\n*\tcompletion.\r\n* @property {module:enyo/Collection~Collection~Error} error - The callback executed upon a failed attempt.\r\n*/\r\n\r\n/**\r\n* @callback module:enyo/Collection~Collection~Success\r\n* @param {module:enyo/Collection~Collection} collection - The [collection]{@link module:enyo/Collection~Collection}\r\n* that is returning successfully.\r\n* @param {module:enyo/Collection~ActionOptions} opts - The original options passed to the action method\r\n*\tthat is returning successfully.\r\n* @param {*} res - The result, if any, returned by the [source]{@link module:enyo/Source~Source} that\r\n*\texecuted it.\r\n* @param {String} source - The name of the [source]{@link module:enyo/Collection~Collection#source} that has\r\n*\treturned successfully.\r\n*/\r\n\r\n/**\r\n* @callback module:enyo/Collection~Collection~Error\r\n* @param {module:enyo/Collection~Collection} collection - The [collection]{@link module:enyo/Collection~Collection}\r\n* that is returning an error.\r\n* @param {String} action - The name of the action that failed, one of `'FETCHING'`,\r\n*\t`'COMMITTING'`, or `'DESTROYING'`.\r\n* @param {module:enyo/Collection~ActionOptions} opts - The original options passed to the\r\n*\taction method that is returning an error.\r\n* @param {*} res - The result, if any, returned by the [source]{@link module:enyo/Source~Source}\r\n*\tthat executed it.\r\n* @param {String} source - The name of the [source]{@link module:enyo/Collection~Collection#source}\r\n*\tthat has returned an error.\r\n*/\r\n\r\n/**\r\n* A method used to compare two elements in an {@link module:enyo/Collection~Collection}. Should be\r\n* implemented like callbacks used with [Array.sort()]{@glossary Array.sort}.\r\n*\r\n* @see {@glossary Array.sort}\r\n* @see module:enyo/Collection~Collection#sort\r\n* @see module:enyo/Collection~Collection#comparator\r\n* @callback module:enyo/Collection~Collection~Comparator\r\n* @param {module:enyo/Model~Model} a - The first [model]{@link module:enyo/Model~Model} to compare.\r\n* @param {module:enyo/Model~Model} b - The second model to compare.\r\n* @returns {Number} `-1` if `a` should have the lower index, `0` if they are the same,\r\n* or `1` if `b` should have the lower index.\r\n*/\r\n\r\n/**\r\n* An array-like structure designed to store instances of {@link module:enyo/Model~Model}.\r\n*\r\n* @class Collection\r\n* @extends module:enyo/Component~Component\r\n* @mixes module:enyo/StateSupport~StateSupport\r\n* @mixes module:enyo/EventEmitter~EventEmitter\r\n* @public\r\n*/\r\nexports = module.exports = kind(\r\n\t/** @lends module:enyo/Collection~Collection.prototype */ {\r\n\r\n\tname: 'enyo.Collection',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: BaseCollection,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\r\n\r\n\t/**\r\n\t* Used by various [sources]{@link module:enyo/Collection~Collection#source} as part of the\r\n\t* [URI]{@glossary URI} from which they may be [fetched]{@link module:enyo/Collection~Collection#fetch},\r\n\t* [committed]{@link module:enyo/Collection~Collection#commit}, or [destroyed]{@link module:enyo/Collection~Collection#destroy}.\r\n\t* Some sources may use this property in other ways.\r\n\t*\r\n\t* @see module:enyo/Collection~Collection#getUrl\r\n\t* @see module:enyo/Source~Source\r\n\t* @see module:enyo/AjaxSource~AjaxSource\r\n\t* @see module:enyo/JsonpSource~JsonpSource\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\turl: '',\r\n\r\n\t/**\r\n\t* Implement this method to be used by [sources]{@link module:enyo/Model~Model#source} to\r\n\t* dynamically derive the [URI]{@glossary URI} from which they may be\r\n\t* [fetched]{@link module:enyo/Collection~Collection#fetch}, [committed]{@link module:enyo/Collection~Collection#commit},\r\n\t* or [destroyed]{@link module:enyo/Collection~Collection#destroy}. Some\r\n\t* [sources]{@link module:enyo/Collection~Collection#source} may use this property in other ways.\r\n\t* Note that if this method is implemented, the [url]{@link module:enyo/Collection~Collection#url}\r\n\t* property will not be used.\r\n\t*\r\n\t* @see module:enyo/Collection~Collection#url\r\n\t* @see module:enyo/Source~Source\r\n\t* @see module:enyo/AjaxSource~AjaxSource\r\n\t* @see module:enyo/JsonpSource~JsonpSource\r\n\t* @type {Function}\r\n\t* @default null\r\n\t* @virtual\r\n\t* @public\r\n\t*/\r\n\tgetUrl: null,\r\n\r\n\t/**\r\n\t* The [kind]{@glossary kind) of {@link module:enyo/Model~Model} that this\r\n\t* [collection]{@link module:enyo/Collection~Collection} will contain. This is important to set properly so\r\n\t* that when [fetching]{@link module:enyo/Collection~Collection#fetch}, the returned data will be instanced\r\n\t* as the correct model [subkind]{@glossary subkind}.\r\n\t*\r\n\t* @type module:enyo/Model~Model\r\n\t* @default module:enyo/Model~Model\r\n\t* @public\r\n\t*/\r\n\tmodel: Model,\r\n\r\n\t/**\r\n\t* A special type of [array]{@glossary Array} used internally by\r\n\t* {@link module:enyo/Collection~Collection}. The array should not be modified directly, nor\r\n\t* should the property be set directly. It is used as a container by the\r\n\t* collection. If [set]{@link module:enyo/Collection~Collection#set} directly, it will\r\n\t* [emit]{@link module:enyo/EventEmitter~EventEmitter#emit} a [reset]{@link module:enyo/Collection~Collection#reset}\r\n\t* event.\r\n\t*\r\n\t* @see module:enyo/Collection~Collection#modelsChanged\r\n\t* @type module:enyo/ModelList~ModelList\r\n\t* @default null\r\n\t* @readonly\r\n\t* @protected\r\n\t*/\r\n\tmodels: null,\r\n\r\n\t/**\r\n\t* The current [state]{@link module:enyo/States} of the [collection]{@link module:enyo/Collection~Collection}.\r\n\t* This value changes automatically and may be observed for more complex state\r\n\t* monitoring. The default value is [READY]{@link module:enyo/States.READY}.\r\n\t* @type module:enyo/States\r\n\t* @default module:enyo/States.READY\r\n\t* @readonly\r\n\t* @public\r\n\t* @see module:enyo/States\r\n\t* @see module:enyo/StateSupport\r\n\t*/\r\n\tstatus: States.READY,\r\n\r\n\t/**\r\n\t* The configurable default [options]{@link module:enyo/Collection~Options}. These values will be\r\n\t* used to modify the behavior of the [collection]{@link module:enyo/Collection~Collection} unless additional\r\n\t* options are passed into the methods that use them. When modifying these values in a\r\n\t* [subkind]{@glossary subkind} of {@link module:enyo/Collection~Collection}, they will be merged with\r\n\t* existing values.\r\n\t*\r\n\t* @type {module:enyo/Collection~Options}\r\n\t* @public\r\n\t*/\r\n\toptions: {\r\n\t\tmerge: true,\r\n\t\tsilent: false,\r\n\t\tpurge: false,\r\n\t\tparse: false,\r\n\t\tcreate: true,\r\n\t\tfind: true,\r\n\t\tsort: false,\r\n\t\tcommit: false,\r\n\t\tdestroy: false,\r\n\t\tcomplete: false,\r\n\t\tfetch: false,\r\n\t\tmodelEvents: true\r\n\t},\r\n\r\n\t/**\r\n\t* Modifies the structure of data so that it can be used by the\r\n\t* [add()]{@link module:enyo/Collection~Collection#add} method. This method will only be used\r\n\t* during initialization or after a successful [fetch]{@link module:enyo/Collection~Collection#fetch}\r\n\t* if the [parse]{@link module:enyo/Collection~Options#parse} flag is set to `true`.\r\n\t* It may be used for simple remapping, renaming, or complex restructuring of\r\n\t* data coming from a [source]{@link module:enyo/Collection~Collection#source} that requires\r\n\t* modification before it can be added to the [collection]{@link module:enyo/Collection~Collection}.\r\n\t* This is a virtual method and must be implemented.\r\n\t*\r\n\t* @param {*} data - The incoming data passed to the\r\n\t*\t[constructor]{@link module:enyo/Collection~Collection#constructor} or returned by a successful\r\n\t*\t[fetch]{@link module:enyo/Collection~Collection#fetch}.\r\n\t* @returns {Array} The properly formatted data to be accepted by the\r\n\t*\t[add()]{@link module:enyo/Collection~Collection#add} method.\r\n\t* @virtual\r\n\t* @public\r\n\t*/\r\n\tparse: function (data) {\r\n\t\treturn data;\r\n\t},\r\n\r\n\t/**\r\n\t* Adds data to the [collection]{@link module:enyo/Collection~Collection}. This method can add an\r\n\t* individual [model]{@link module:enyo/Model~Model} or an [array]{@glossary Array} of models.\r\n\t* It can splice them into the dataset at a designated index or remove models\r\n\t* from the existing dataset that are not included in the new one.\r\n\t* See {@link module:enyo/Collection~AddOptions} for detailed information on the\r\n\t* configuration options available for this method. This method is heavily\r\n\t* optimized for batch operations on arrays of models. For better performance,\r\n\t* ensure that loops do not consecutively call this method but instead\r\n\t* build an array to pass as the first parameter.\r\n\t*\r\n\t* @fires module:enyo/Collection~Collection#add\r\n\t* @param {(Object|Object[]|module:enyo/Model~Model|module:enyo/Model~Model[])} models The data to add to the\r\n\t*\t{@link module:enyo/Collection~Collection} that can be a [hash]{@glossary Object}, an array of\r\n\t*\thashes, an {@link module:enyo/Model~Model} instance, or and array of `Model` instances.\r\n\t* Note that if the [parse]{@link module:enyo/Collection~Collection#options#parse} configuration\r\n\t* option is `true`, it will use the returned value as this parameter.\r\n\t* @param {module:enyo/Collection~AddOptions} [opts] - The configuration options that modify\r\n\t*\tthe behavior of this method. The default values will be merged with these options\r\n\t* before evaluating.\r\n\t* @returns {module:enyo/Model~Model[]} The models that were added, if any.\r\n\t* @public\r\n\t*/\r\n\tadd: function (models, opts) {\r\n\t\tvar loc = this.models\r\n\t\t\t, len = this.length\r\n\t\t\t, ctor = this.model\r\n\t\t\t, options = this.options\r\n\t\t\t, pkey = ctor.prototype.primaryKey\r\n\t\t\t, idx = len\r\n\t\t\t, removedBeforeIdx = 0\r\n\t\t\t, added, keep, removed, model, attrs, found, id;\r\n\r\n\t\t// for backwards compatibility with earlier api standards we allow the\r\n\t\t// second paramter to be the index and third param options when\r\n\t\t// necessary\r\n\t\t!isNaN(opts) && (idx = opts);\r\n\t\targuments.length > 2 && (opts = arguments[2]);\r\n\r\n\t\t// normalize options so we have values\r\n\t\topts = opts? utils.mixin({}, [options, opts]): options;\r\n\r\n\t\t// our flags\r\n\t\tvar merge = opts.merge\r\n\t\t\t, purge = opts.purge\r\n\t\t\t, silent = opts.silent\r\n\t\t\t, parse = opts.parse\r\n\t\t\t, find = opts.find\r\n\t\t\t, sort = opts.sort\r\n\t\t\t, commit = opts.commit\r\n\t\t\t, create = opts.create !== false\r\n\t\t\t, modelOpts = opts.modelOptions\r\n\t\t\t, index = opts.index;\r\n\r\n\t\tidx = !isNaN(index) ? Math.max(0, Math.min(len, index)) : idx;\r\n\r\n\t\t/*jshint -W018 */\r\n\t\tsort && !(typeof sort == 'function') && (sort = this.comparator);\r\n\t\t/*jshint +W018 */\r\n\r\n\t\t// for a special case purge to remove records that aren't in the current\r\n\t\t// set being added\r\n\r\n\t\tif (parse) models = this.parse(models);\r\n\r\n\t\t// we treat all additions as an array of additions\r\n\t\t!(models instanceof Array) && (models = [models]);\r\n\r\n\t\tfor (var i=0, end=models.length; i<end; ++i) {\r\n\t\t\tmodel = models[i];\r\n\t\t\tattrs = null;\r\n\r\n\t\t\tif (!model && isNaN(model)) continue;\r\n\r\n\t\t\t// first determine if the model is an instance of model since\r\n\t\t\t// everything else hinges on this\r\n\t\t\tif (!(model instanceof Model)) {\r\n\t\t\t\t// we need to determine how to handle this\r\n\t\t\t\tattrs = model;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof attrs == 'string' || typeof attrs == 'number') {\r\n\t\t\t\tid = attrs;\r\n\t\t\t\tattrs = {};\r\n\t\t\t\tattrs[pkey] = id;\r\n\t\t\t} else id = attrs? attrs[pkey]: model;\r\n\r\n\r\n\t\t\t// see if we have an existing entry for this model/hash\r\n\t\t\tif (find) found = loc.has(id);\r\n\r\n\t\t\t// if it already existed...\r\n\t\t\tif (found) {\r\n\r\n\t\t\t\t// we need to ensure we've resolved the model (if necessary)\r\n\t\t\t\tfound = loc.resolve(id);\r\n\r\n\t\t\t\tif (merge) {\r\n\t\t\t\t\tattrs || (attrs = model.attributes);\r\n\t\t\t\t\tfound.set(attrs, opts);\r\n\t\t\t\t}\r\n\t\t\t\t// with the purge flag we endeavor on the expensive track of removing\r\n\t\t\t\t// those models currently in the collection that aren't in the incoming\r\n\t\t\t\t// dataset and aren't being created\r\n\t\t\t\tif (purge) {\r\n\t\t\t\t\tkeep || (keep = {length: 0});\r\n\t\t\t\t\tkeep[found.euid] = model;\r\n\t\t\t\t\tkeep.length++;\r\n\t\t\t\t}\r\n\t\t\t} else if (attrs && find && (found = this.store.resolve(ctor, id))) {\r\n\t\t\t\t// in this case we were asked to search our store for an existing record\r\n\t\t\t\t// and we found one but we didn't previously have it so we are technically\r\n\t\t\t\t// adding it\r\n\t\t\t\t// @NOTE: Setting the _find_ option always assumes _merge_\r\n\t\t\t\tattrs || (attrs = model.attributes);\r\n\t\t\t\tparse && (attrs = found.parse(attrs));\r\n\t\t\t\tadded || (added = []);\r\n\t\t\t\tadded.push(found);\r\n\t\t\t\tthis.prepareModel(found, opts);\r\n\t\t\t\tmerge && found.set(attrs, opts);\r\n\t\t\t} else if (!attrs) {\r\n\t\t\t\tadded || (added = []);\r\n\t\t\t\tadded.push(model);\r\n\t\t\t\tthis.prepareModel(model);\r\n\t\t\t} else if (create) {\r\n\t\t\t\tmodel = this.prepareModel(attrs || model, modelOpts);\r\n\t\t\t\tadded || (added = []);\r\n\t\t\t\tadded.push(model);\r\n\r\n\t\t\t\t// with the purge flag we endeavor on the expensive track of removing\r\n\t\t\t\t// those models currently in the collection that aren't in the incoming\r\n\t\t\t\t// dataset and aren't being created\r\n\t\t\t\tif (purge) {\r\n\t\t\t\t\tkeep || (keep = {length: 0});\r\n\t\t\t\t\tkeep[model.euid] = model;\r\n\t\t\t\t\tkeep.length++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// here we process those models to be removed if purge was true\r\n\t\t// the other guard is just in case we actually get to keep everything\r\n\t\t// so we don't do this unnecessary pass\r\n\t\tif (purge && (keep && keep.length)) {\r\n\t\t\tremoved || (removed = []);\r\n\t\t\tkeep || (keep = {});\r\n\t\t\tfor (i=0; i<len; ++i) {\r\n\t\t\t\tif (!keep[(model = loc[i]).euid]) {\r\n\t\t\t\t\tremoved.push(model);\r\n\t\t\t\t\tif (i < idx) removedBeforeIdx++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// if we removed any we process that now\r\n\t\t\tremoved.length && this.remove(removed, opts);\r\n\t\t\tidx = idx - removedBeforeIdx;\r\n\t\t}\r\n\r\n\t\t// added && loc.stopNotifications().add(added, idx).startNotifications();\r\n\t\tif (added) {\r\n\t\t\tloc.add(added, idx);\r\n\t\t\tsort && this.sort(sort, {silent: true});\r\n\r\n\t\t\t// we batch this operation to make use of its ~efficient array operations\r\n\t\t\tthis.store.add(added);\r\n\t\t}\r\n\t\tthis.length = loc.length;\r\n\r\n\r\n\t\tif (!silent) {\r\n\t\t\t// notify observers of the length change\r\n\t\t\tlen != this.length && this.notify('length', len, this.length);\r\n\t\t\t// notify listeners of the addition of records\r\n\t\t\tif (added) {\r\n\t\t\t\tthis.emit('add', {models: added, collection: this, index: idx});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// note that if commit is set but this was called from a successful fetch this will be\r\n\t\t// a nop (as intended)\r\n\t\tcommit && added && this.commit(opts);\r\n\r\n\t\treturn added || [];\r\n\t},\r\n\r\n\t/**\r\n\t* Removes data from the [collection]{@link module:enyo/Collection~Collection}. It can take a\r\n\t* [model]{@link module:enyo/Model~Model} or an [array]{@glossary Array} of models.\r\n\t* If any of the instances are present in the collection, they will be\r\n\t* removed in the order in which they are encountered. Emits the\r\n\t* [remove]{@link module:enyo/Collection~Collection#remove} event if any models were found and\r\n\t* removed from the collection (and the `silent` option is not `true`).\r\n\t*\r\n\t* @fires module:enyo/Collection~Collection#remove\r\n\t* @param {(module:enyo/Model~Model|module:enyo/Model~Model[])} models The [models]{@link module:enyo/Model~Model} to remove\r\n\t*\tif they exist in the [collection]{@link module:enyo/Collection~Collection}.\r\n\t* @param {module:enyo/Collection~Collection~RemoveOptions} [opts] - The configuration options that modify\r\n\t*\tthe behavior of this method.\r\n\t* @returns {module:enyo/Model~Model[]} The models that were removed, if any.\r\n\t* @public\r\n\t*/\r\n\tremove: function (models, opts) {\r\n\t\tvar loc = this.models\r\n\t\t\t, len = loc.length\r\n\t\t\t, options = this.options\r\n\t\t\t, removed, model;\r\n\r\n\t\t// normalize options so we have values\r\n\t\topts = opts? utils.mixin({}, [options, opts]): options;\r\n\r\n\t\t// our flags\r\n\t\tvar silent = opts.silent\r\n\t\t\t, destroy = opts.destroy\r\n\t\t\t, complete = opts.complete\r\n\t\t\t, commit = opts.commit;\r\n\r\n\t\t// we treat all additions as an array of additions\r\n\t\t!(models instanceof Array) && (models = [models]);\r\n\r\n\t\tremoved = loc.remove(models);\r\n\r\n\t\tif (removed.length) {\r\n\r\n\t\t\t// ensure that we can batch remove from the store\r\n\t\t\topts.batching = true;\r\n\r\n\t\t\tfor (var i=0, end=removed.length; i<end; ++i) {\r\n\t\t\t\tmodel = removed[i];\r\n\r\n\t\t\t\t// it is possible but highly, highly unlikely that this would have been set\r\n\t\t\t\t// to false by default and true at runtime...so we take our chances for the\r\n\t\t\t\t// small performance gain in those situations where it was defaulted to false\r\n\t\t\t\tif (options.modelEvents) model.off('*', this._modelEvent, this);\r\n\t\t\t\tif (destroy) model.destroy(opts);\r\n\t\t\t}\r\n\r\n\t\t\t// if complete or destroy was set we remove them from the store (batched op)\r\n\t\t\tif (complete || destroy) this.store.remove(removed);\r\n\t\t}\r\n\r\n\t\tthis.length = loc.length;\r\n\r\n\t\tif (!silent) {\r\n\t\t\tlen != this.length && this.notify('length', len, this.length);\r\n\t\t\tif (removed.length) {\r\n\t\t\t\tthis.emit('remove', {models: removed, collection: this});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if this is called from an overloaded method (such as fetch or commit) or some\r\n\t\t// success callback this will be a nop (as intended)\r\n\t\tcommit && removed.length && this.commit();\r\n\r\n\t\treturn removed;\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves a [model]{@link module:enyo/Model~Model} for the provided index.\r\n\t*\r\n\t* @param {Number} idx - The index to return from the [collection]{@link module:enyo/Collection~Collection}.\r\n\t* @returns {(module:enyo/Model~Model|undefined)} The [model]{@link module:enyo/Model~Model} at the given index or\r\n\t*\t`undefined` if it cannot be found.\r\n\t* @public\r\n\t*/\r\n\tat: function (idx) {\r\n\t\treturn this.models[idx];\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the JSON serializable [array]{@glossary Array} of [models]{@link module:enyo/Model~Model}\r\n\t* according to their own [raw()]{@link module:enyo/Model~Model#raw} output.\r\n\t*\r\n\t* @returns {module:enyo/Model~Model[]} The [models]{@link module:enyo/Model~Model} according to their\r\n\t*\t[raw()]{@link module:enyo/Model~Model#raw} output.\r\n\t* @public\r\n\t*/\r\n\traw: function () {\r\n\t\treturn this.models.map(function (model) {\r\n\t\t\treturn model.raw();\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t* Determines if the specified [model]{@link module:enyo/Model~Model} is contained by this\r\n\t* [collection]{@link module:enyo/Collection~Collection}.\r\n\t*\r\n\t* @param {module:enyo/Model~Model} model - The [model]{@link module:enyo/Model~Model} to check.\r\n\t* @returns {Boolean} Whether or not the model belongs to the\r\n\t*\t[collection]{@link module:enyo/Collection~Collection}.\r\n\t* @public\r\n\t*/\r\n\thas: function (model) {\r\n\t\treturn this.models.has(model);\r\n\t},\r\n\r\n\t/**\r\n\t* @see {@glossary Array.forEach}\r\n\t* @public\r\n\t*/\r\n\tforEach: function (fn, ctx) {\r\n\r\n\t\t// ensure that this is an immutable reference to the models such that changes will\r\n\t\t// not affect the entire loop - e.g. calling destroy on models won't keep this from\r\n\t\t// completing\r\n\t\treturn this.models.slice().forEach(fn, ctx || this);\r\n\t},\r\n\r\n\t/**\r\n\t* @see {@glossary Array.filter}\r\n\t* @public\r\n\t*/\r\n\tfilter: function (fn, ctx) {\r\n\r\n\t\t// ensure that this is an immutable reference to the models such that changes will\r\n\t\t// not affect the entire loop - e.g. calling destroy on models won't keep this from\r\n\t\t// completing\r\n\t\treturn this.models.slice().filter(fn, ctx || this);\r\n\t},\r\n\r\n\t/**\r\n\t* @see {@glossary Array.find}\r\n\t* @public\r\n\t*/\r\n\tfind: function (fn, ctx) {\r\n\r\n\t\t// ensure that this is an immutable reference to the models such that changes will\r\n\t\t// not affect the entire loop - e.g. calling destroy on models won't keep this from\r\n\t\t// completing\r\n\t\treturn this.models.slice().find(fn, ctx || this);\r\n\t},\r\n\r\n\t/**\r\n\t* @see {@glossary Array.findIndex}\r\n\t* @public\r\n\t*/\r\n\tfindIndex: function (fn, ctx) {\r\n\r\n\t\t// ensure that this is an immutable reference to the models such that changes will\r\n\t\t// not affect the entire loop - e.g. calling destroy on models won't keep this from\r\n\t\t// completing\r\n\t\treturn this.models.slice().findIndex(fn, ctx || this);\r\n\t},\r\n\r\n\t/**\r\n\t* @see {@glossary Array.map}\r\n\t* @public\r\n\t*/\r\n\tmap: function (fn, ctx) {\r\n\r\n\t\t// ensure that this is an immutable reference to the models such that changes will\r\n\t\t// not affect the entire loop - e.g. calling destroy on models won't keep this from\r\n\t\t// completing\r\n\t\treturn this.models.slice().map(fn, ctx || this);\r\n\t},\r\n\r\n\t/**\r\n\t* @see {@glossary Array.indexOf}\r\n\t* @public\r\n\t*/\r\n\tindexOf: function (model, offset) {\r\n\t\treturn this.models.indexOf(model, offset);\r\n\t},\r\n\r\n\t/**\r\n\t* Removes all [models]{@link module:enyo/Model~Model} from the [collection]{@link module:enyo/Collection~Collection}.\r\n\t* Optionally, a model (or models) may be provided to replace the removed models.\r\n\t* If this operation is not `silent`, it will emit a `reset` event. Returns the\r\n\t* removed models, but be aware that, if the `destroy` configuration option is set,\r\n\t* the returned models will have limited usefulness.\r\n\t*\r\n\t* @param {(module:enyo/Model~Model|module:enyo/Model~Model[])} [models] The [model or models]{@link module:enyo/Model~Model}\r\n\t*\tto use as a replacement for the current set of models in the\r\n\t*\t{@link module:enyo/Collection~Collection}.\r\n\t* @param {module:enyo/Collection~Options} [opts] - The options that will modify the behavior\r\n\t*\tof this method.\r\n\t* @returns {module:enyo/Model~Model[]} The models that were removed from the collection.\r\n\t* @public\r\n\t*/\r\n\tempty: function (models, opts) {\r\n\t\tvar silent,\r\n\t\t\tremoved,\r\n\t\t\tlen = this.length;\r\n\r\n\t\tif (models && !(models instanceof Array || models instanceof Model)) {\r\n\t\t\t// there were no models but instead some options only\r\n\t\t\topts = models;\r\n\t\t\tmodels = null;\r\n\t\t}\r\n\r\n\t\topts = opts || {};\r\n\r\n\t\t// just in case the entire thing was supposed to be silent\r\n\t\tsilent = opts.silent;\r\n\t\topts.silent = true;\r\n\r\n\t\tremoved = this.remove(this.models, opts);\r\n\r\n\t\t// if there are models we are going to propagate the remove quietly and instead issue\r\n\t\t// a single reset with the new content\r\n\t\tif (models) this.add(models, opts);\r\n\r\n\t\t// now if the entire thing wasn't supposed to have been done silently we issue\r\n\t\t// a reset\r\n\t\tif (!silent) {\r\n\t\t\tif (len != this.length) this.notify('length', len, this.length);\r\n\t\t\tthis.emit('reset', {models: this.models.copy(), collection: this});\r\n\t\t}\r\n\r\n\t\treturn removed;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the [JSON]{@glossary JSON} serializable [raw()]{@link module:enyo/Collection~Collection#raw}\r\n\t* output of the [collection]{@link module:enyo/Collection~Collection}. Will automatically be executed by\r\n\t* [JSON.parse()]{@glossary JSON.parse}.\r\n\t*\r\n\t* @see module:enyo/Collection~Collection#raw\r\n\t* @returns {Object} The return value of [raw()]{@link module:enyo/Collection~Collection#raw}.\r\n\t* @public\r\n\t*/\r\n\ttoJSON: function () {\r\n\t\treturn this.raw();\r\n\t},\r\n\r\n\t/**\r\n\t* The default behavior of this method is the same as {@glossary Array.sort}. If the\r\n\t* [function]{@glossary Function} parameter is omitted, it will attempt to use the\r\n\t* [comparator]{@link module:enyo/Collection~Collection#comparator} (if any) from the\r\n\t* [collection]{@link module:enyo/Collection~Collection}. Note that the collection is sorted in-place\r\n\t* and returns a reference to itself. The collection\r\n\t* [emits]{@link module:enyo/EventEmitter~EventEmitter#emit} the [sort]{@link module:enyo/Collection~Collection#sort}\r\n\t* event.\r\n\t*\r\n\t* @fires module:enyo/Collection~Collection#sort\r\n\t* @see {@glossary Array.sort}\r\n\t* @param {module:enyo/Collection~Collection~Comparator} [fn] - The [comparator]{@link module:enyo/Collection~Collection#comparator}\r\n\t* method.\r\n\t* @param {module:enyo/Collection~Options} [opts] - The configuration options.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tsort: function (fn, opts) {\r\n\t\tif (fn || this.comparator) {\r\n\t\t\tvar options = {silent: false}, silent;\r\n\r\n\t\t\topts = opts? utils.mixin({}, [options, opts]): options;\r\n\t\t\tsilent = opts.silent;\r\n\t\t\tthis.models.sort(fn || this.comparator);\r\n\t\t\t!silent && this.emit('sort', {\r\n\t\t\t\tcomparator: fn || this.comparator,\r\n\t\t\t\tmodels: this.models.copy(),\r\n\t\t\t\tcollection: this\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Commits the [collection]{@link module:enyo/Collection~Collection} to a\r\n\t* [source]{@link module:enyo/Collection~Collection#source} or sources. An {@link module:enyo/Collection~Collection}\r\n\t* cannot be committed if it is in an [error]{@link module:enyo/States.ERROR}\r\n\t* ({@link module:enyo/StateSupport~StateSupport#isError}) or [busy]{@link module:enyo/States.BUSY}\r\n\t* ({@link module:enyo/StateSupport~StateSupport#isBusy}) [state]{@link module:enyo/Model~Model#status}. While\r\n\t* executing, it will add the [COMMITTING]{@link module:enyo/States.COMMITTING} flag\r\n\t* to the collection's [status]{@link module:enyo/Collection~Collection#status}. Once it has\r\n\t* completed execution, it will remove this flag (even if it fails).\r\n\t*\r\n\t* @see module:enyo/Collection~Collection#committed\r\n\t* @see module:enyo/Collection~Collection#status\r\n\t* @param {module:enyo/Collection~Collection~ActionOptions} [opts] - Optional configuration options.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tcommit: function (opts) {\r\n\t\tvar options,\r\n\t\t\tsource,\r\n\t\t\tit = this;\r\n\r\n\t\t// if the current status is not one of the error states we can continue\r\n\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\r\n\r\n\t\t\t// if there were options passed in we copy them quickly so that we can hijack\r\n\t\t\t// the success and error methods while preserving the originals to use later\r\n\t\t\toptions = opts ? utils.clone(opts, true) : {};\r\n\r\n\t\t\t// make sure we keep track of how many sources we're requesting\r\n\t\t\tsource = options.source || this.source;\r\n\t\t\tif (source && ((source instanceof Array) || source === true)) {\r\n\t\t\t\tthis._waiting = source.length ? source.slice() : Object.keys(Source.sources);\r\n\t\t\t}\r\n\r\n\t\t\toptions.success = function (source, res) {\r\n\t\t\t\tit.committed(opts, res, source);\r\n\t\t\t};\r\n\r\n\t\t\toptions.error = function (source, res) {\r\n\t\t\t\tit.errored('COMMITTING', opts, res, source);\r\n\t\t\t};\r\n\r\n\t\t\t// set the state\r\n\t\t\tthis.set('status', (this.status | States.COMMITTING) & ~States.READY);\r\n\r\n\t\t\t// now pass this on to the source to execute as it sees fit\r\n\t\t\tSource.execute('commit', this, options);\r\n\t\t} else if (this.status & States.ERROR) this.errored(this.status, opts);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Fetches the [collection]{@link module:enyo/Collection~Collection} from a\r\n\t* [source]{@link module:enyo/Collection~Collection#source} or sources. An {@link module:enyo/Collection~Collection}\r\n\t* cannot be fetched if it is in an [error]{@link module:enyo/States.ERROR}\r\n\t* ({@link module:enyo/StateSupport~StateSupport#isError}) or [busy]{@link module:enyo/States.BUSY}\r\n\t* ({@link module:enyo/StateSupport~StateSupport#isBusy}) [state]{@link module:enyo/Model~Model#status}. While\r\n\t* executing, it will add the [FETCHING]{@link module:enyo/States.FETCHING} flag to\r\n\t* the collection's [status]{@link module:enyo/Collection~Collection#status}. Once it has\r\n\t* completed execution, it will remove this flag (even if it fails).\r\n\t*\r\n\t* @see module:enyo/Collection~Collection#fetched\r\n\t* @see module:enyo/Collection~Collection#status\r\n\t* @param {module:enyo/Collection~Collection~ActionOptions} [opts] - Optional configuration options.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tfetch: function (opts) {\r\n\t\tvar options,\r\n\t\t\tsource,\r\n\t\t\tit = this;\r\n\r\n\t\t// if the current status is not one of the error states we can continue\r\n\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\r\n\r\n\t\t\t// if there were options passed in we copy them quickly so that we can hijack\r\n\t\t\t// the success and error methods while preserving the originals to use later\r\n\t\t\toptions = opts ? utils.clone(opts, true) : {};\r\n\r\n\t\t\t// make sure we keep track of how many sources we're requesting\r\n\t\t\tsource = options.source || this.source;\r\n\t\t\tif (source && ((source instanceof Array) || source === true)) {\r\n\t\t\t\tthis._waiting = source.length ? source.slice() : Object.keys(Source.sources);\r\n\t\t\t}\r\n\r\n\t\t\toptions.success = function (source, res) {\r\n\t\t\t\tit.fetched(opts, res, source);\r\n\t\t\t};\r\n\r\n\t\t\toptions.error = function (source, res) {\r\n\t\t\t\tit.errored('FETCHING', opts, res, source);\r\n\t\t\t};\r\n\r\n\t\t\t// set the state\r\n\t\t\tthis.set('status', (this.status | States.FETCHING) & ~States.READY);\r\n\r\n\t\t\t// now pass this on to the source to execute as it sees fit\r\n\t\t\tSource.execute('fetch', this, options);\r\n\t\t} else if (this.status & States.ERROR) this.errored(this.status, opts);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Destroys the [collection]{@link module:enyo/Collection~Collection}. By default, the\r\n\t* collection will only be [destroyed]{@glossary destroy} in the client. To\r\n\t* execute with a [source]{@link module:enyo/Collection~Collection#source} or sources, the\r\n\t* [commit default option]{@link module:enyo/Collection~Collection#options} must be `true` or a\r\n\t* `source` property must be explicitly provided in the `opts` parameter. A\r\n\t* collection cannot be destroyed (using a source) if it is in an\r\n\t* [error]{@link module:enyo/States.ERROR} ({@link module:enyo/StateSupport~StateSupport#isError}) or\r\n\t* [busy]{@link module:enyo/States.BUSY} ({@link module:enyo/StateSupport~StateSupport#isBusy})\r\n\t* [state]{@link module:enyo/Collection~Collection#status}. While executing, it will add the\r\n\t* [DESTROYING]{@link module:enyo/States.DESTROYING} flag to the collection's\r\n\t* [status]{@link module:enyo/Collection~Collection#status}. Once it has completed execution,\r\n\t* it will remove this flag (even if it fails).\r\n\t*\r\n\t* @see module:enyo/Collection~Collection#status\r\n\t* @param {module:enyo/Collection~Collection~ActionOptions} [opts] - Optional configuration options.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function (opts) {\r\n\t\t\tvar options = opts ? utils.mixin({}, [this.options, opts]) : this.options,\r\n\t\t\t\tit = this,\r\n\t\t\t\tidx;\r\n\r\n\t\t\t// this becomes an (potentially) async operation if we are committing this destroy\r\n\t\t\t// to a source and its kind of tricky to figure out because there are several ways\r\n\t\t\t// it could be flagged to do this\r\n\r\n\t\t\tif (options.commit || options.source) {\r\n\r\n\t\t\t\t// if the current status is not one of the error states we can continue\r\n\t\t\t\tif (!(this.status & (States.ERROR | States.BUSY))) {\r\n\r\n\t\t\t\t\t// remap to the originals\r\n\t\t\t\t\toptions = opts ? utils.clone(opts, true) : {};\r\n\r\n\t\t\t\t\toptions.success = function (source, res) {\r\n\r\n\t\t\t\t\t\tif (it._waiting) {\r\n\t\t\t\t\t\t\tidx = it._waiting.findIndex(function (ln) {\r\n\t\t\t\t\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif (idx > -1) it._waiting.splice(idx, 1);\r\n\t\t\t\t\t\t\tif (!it._waiting.length) it._waiting = null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// continue the operation this time with commit false explicitly\r\n\t\t\t\t\t\tif (!it._waiting) {\r\n\t\t\t\t\t\t\toptions.commit = options.source = null;\r\n\t\t\t\t\t\t\tit.destroy(options);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (opts && opts.success) opts.success(this, opts, res, source);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\toptions.error = function (source, res) {\r\n\r\n\t\t\t\t\t\tif (it._waiting) {\r\n\t\t\t\t\t\t\tidx = it._waiting.findIndex(function (ln) {\r\n\t\t\t\t\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif (idx > -1) it._waiting.splice(idx, 1);\r\n\t\t\t\t\t\t\tif (!it._waiting.length) it._waiting = null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// continue the operation this time with commit false explicitly\r\n\t\t\t\t\t\tif (!it._waiting) {\r\n\t\t\t\t\t\t\toptions.commit = options.source = null;\r\n\t\t\t\t\t\t\tit.destroy(options);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// we don't bother setting the error state if we aren't waiting because\r\n\t\t\t\t\t\t// it will be cleared to DESTROYED and it would be pointless\r\n\t\t\t\t\t\telse this.errored('DESTROYING', opts, res, source);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.set('status', (this.status | States.DESTROYING) & ~States.READY);\r\n\r\n\t\t\t\t\tSource.execute('destroy', this, options);\r\n\t\t\t\t} else if (this.status & States.ERROR) this.errored(this.status, opts);\r\n\r\n\t\t\t\t// we don't allow the destroy to take place and we don't forcibly break-down\r\n\t\t\t\t// the collection errantly so there is an opportuniy to resolve the issue\r\n\t\t\t\t// before we lose access to the collection's content!\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\t// remove the models from the collection which will also remove the its event listeners\r\n\t\t\tif (this.length) this.empty(options);\r\n\r\n\t\t\t// set the final resting state of this collection\r\n\t\t\tthis.set('status', States.DESTROYED);\r\n\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* This is a virtual method that, when provided, will be used for sorting during\r\n\t* [add()]{@link module:enyo/Collection~Collection#add} when the `sort` flag is `true` or when the\r\n\t* [sort()]{@link module:enyo/Collection~Collection#sort} method is called without a passed-in\r\n\t* [function]{@glossary Function} parameter.\r\n\t*\r\n\t* @see module:enyo/Collection~Collection~Comparator\r\n\t* @type {module:enyo/Collection~Collection~Comparator}\r\n\t* @default null\r\n\t* @virtual\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tcomparator: null,\r\n\r\n\t/**\r\n\t* Used during [add()]{@link module:enyo/Collection~Collection#add} when `create` is `true` and\r\n\t* the data is a [hash]{@glossary Object}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tprepareModel: function (attrs, opts) {\r\n\t\tvar Ctor = this.model\r\n\t\t\t, options = this.options\r\n\t\t\t, model;\r\n\r\n\t\tattrs instanceof Ctor && (model = attrs);\r\n\t\tif (!model) {\r\n\t\t\topts = opts || {};\r\n\t\t\topts.noAdd = true;\r\n\t\t\tmodel = new Ctor(attrs, null, opts);\r\n\t\t}\r\n\r\n\t\tif (options.modelEvents) model.on('*', this._modelEvent, this);\r\n\r\n\t\treturn model;\r\n\t},\r\n\r\n\t/**\r\n\t* When a [commit]{@link module:enyo/Collection~Collection#commit} has completed successfully, it is returned\r\n\t* to this method. This method handles special and important behavior; it should not be\r\n\t* called directly and, when overloading, care must be taken to ensure that the\r\n\t* super-method is called. This correctly sets the [status]{@link module:enyo/Collection~Collection#status}\r\n\t* and, in cases where multiple [sources]{@link module:enyo/Collection~Collection#source} were used, it waits\r\n\t* until all have responded before clearing the [COMMITTING]{@link module:enyo/States.COMMITTING}\r\n\t* flag. If a [success]{@link module:enyo/Collection~Collection~Success} callback was provided, it will be\r\n\t* called once for each source.\r\n\t*\r\n\t* @param {module:enyo/Collection~Collection~ActionOptions} opts - The original options passed to\r\n\t*\t[commit()]{@link module:enyo/Collection~Collection#commit}, merged with the defaults.\r\n\t* @param {*} [res] - The result provided from the given\r\n\t* [source]{@link module:enyo/Collection~Collection#source}, if any. This will vary depending\r\n\t* on the source.\r\n\t* @param {String} source - The name of the source that has completed successfully.\r\n\t* @public\r\n\t*/\r\n\tcommitted: function (opts, res, source) {\r\n\t\tvar idx;\r\n\r\n\t\tif (this._waiting) {\r\n\t\t\tidx = this._waiting.findIndex(function (ln) {\r\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\r\n\t\t\t});\r\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\r\n\t\t\tif (!this._waiting.length) this._waiting = null;\r\n\t\t}\r\n\r\n\t\tif (opts && opts.success) opts.success(this, opts, res, source);\r\n\r\n\t\t// clear the state\r\n\t\tif (!this._waiting) {\r\n\t\t\tthis.set('status', (this.status | States.READY) & ~States.COMMITTING);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* When a [fetch]{@link module:enyo/Collection~Collection#fetch} has completed successfully, it is returned\r\n\t* to this method. This method handles special and important behavior; it should not be\r\n\t* called directly and, when overloading, care must be taken to ensure that you call the\r\n\t* super-method. This correctly sets the [status]{@link module:enyo/Collection~Collection#status} and, in\r\n\t* cases where multiple [sources]{@link module:enyo/Collection~Collection#source} were used, it waits until\r\n\t* all have responded before clearing the [FETCHING]{@link module:enyo/States.FETCHING} flag. If\r\n\t* a [success]{@link module:enyo/Collection~Collection~Success} callback was provided, it will be called\r\n\t* once for each source.\r\n\t*\r\n\t* @param {module:enyo/Collection~Collection~ActionOptions} opts - The original options passed to\r\n\t*\t[fetch()]{@link module:enyo/Collection~Collection#fetch}, merged with the defaults.\r\n\t* @param {*} [res] - The result provided from the given\r\n\t* [source]{@link module:enyo/Collection~Collection#source}, if any. This will vary depending\r\n\t*\ton the source.\r\n\t* @param {String} source - The name of the source that has completed successfully.\r\n\t* @public\r\n\t*/\r\n\tfetched: function (opts, res, source) {\r\n\t\tvar idx;\r\n\r\n\t\tif (this._waiting) {\r\n\t\t\tidx = this._waiting.findIndex(function (ln) {\r\n\t\t\t\treturn (ln instanceof Source ? ln.name : ln) == source;\r\n\t\t\t});\r\n\t\t\tif (idx > -1) this._waiting.splice(idx, 1);\r\n\t\t\tif (!this._waiting.length) this._waiting = null;\r\n\t\t}\r\n\r\n\t\t// if there is a result we add it to the collection passing it any per-fetch options\r\n\t\t// that will override the defaults (e.g. parse) we don't do that here as it will\r\n\t\t// be done in the add method -- also note we reassign the result to whatever was\r\n\t\t// actually added and pass that to any other success callback if there is one\r\n\t\tif (res) res = this.add(res, opts);\r\n\r\n\t\t// now look for an additional success callback\r\n\t\tif (opts && opts.success) opts.success(this, opts, res, source);\r\n\r\n\t\t// clear the state\r\n\t\tif (!this._waiting) {\r\n\t\t\tthis.set('status', (this.status | States.READY) & ~States.FETCHING);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* If an error is encountered while [fetching]{@link module:enyo/Collection~Collection#fetch},\r\n\t* [committing]{@link module:enyo/Collection~Collection#commit}, or [destroying]{@link module:enyo/Collection~Collection#destroy}\r\n\t* the [collection]{@link module:enyo/Collection~Collection}, this method will be called. By\r\n\t* default, it updates the collection's [status]{@link module:enyo/Collection~Collection#status}\r\n\t* property and then checks to see if there is a provided\r\n\t* [error handler]{@link module:enyo/Collection~Collection~Error}. If the error handler\r\n\t* exists, it will be called.\r\n\t*\r\n\t* @param {String} action - The name of the action that failed,\r\n\t* one of `'FETCHING'` or `'COMMITTING'`.\r\n\t* @param {module:enyo/Collection~Collection~ActionOptions} opts - The options hash originally\r\n\t* passed along with the original action.\r\n\t* @param {*} [res] - The result of the requested `action`; varies depending on the\r\n\t*\trequested [source]{@link module:enyo/Collection~Collection#source}.\r\n\t* @param {String} source - The name of the source that has returned an error.\r\n\t* @public\r\n\t*/\r\n\terrored: function (action, opts, res, source) {\r\n\t\tvar stat;\r\n\r\n\t\t// if the error action is a status number then we don't need to update it otherwise\r\n\t\t// we set it to the known state value\r\n\t\tif (typeof action == 'string') {\r\n\r\n\t\t\t// all built-in errors will pass this as their values are > 0 but we go ahead and\r\n\t\t\t// ensure that no developer used the 0x00 for an error code\r\n\t\t\tstat = States['ERROR_' + action];\r\n\t\t} else stat = action;\r\n\r\n\t\tif (isNaN(stat) || !(stat & States.ERROR)) stat = States.ERROR_UNKNOWN;\r\n\r\n\t\t// if it has changed give observers the opportunity to respond\r\n\t\tthis.set('status', (this.status | stat) & ~States.READY);\r\n\r\n\t\t// we need to check to see if there is an options handler for this error\r\n\t\tif (opts && opts.error) opts.error(this, action, opts, res, source);\r\n\t},\r\n\r\n\t/**\r\n\t* Overloaded version of the method to call [set()]{@link module:enyo/Collection~Collection#set}\r\n\t* instead of simply assigning the value. This allows it to\r\n\t* [notify observers]{@link module:enyo/ObserverSupport} and thus update\r\n\t* [bindings]{@link module:enyo/BindingSupport#binding} as well.\r\n\t*\r\n\t* @see {@link module:enyo/StateSupport~StateSupport#clearError}\r\n\t* @public\r\n\t*/\r\n\tclearError: function () {\r\n\t\treturn this.set('status', States.READY);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_modelEvent: function (model, e) {\r\n\t\tswitch (e) {\r\n\t\tcase 'change':\r\n\t\t\tthis.emit('change', {model: model});\r\n\t\t\tbreak;\r\n\t\tcase 'destroy':\r\n\t\t\tthis.remove(model);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Responds to changes to the [models]{@link module:enyo/Collection~Collection#models} property.\r\n\t*\r\n\t* @see module:enyo/Collection~Collection#models\r\n\t* @fires module:enyo/Collection~Collection#reset\r\n\t* @type {module:enyo/ObserverSupport~ObserverSupport~Observer}\r\n\t* @public\r\n\t*/\r\n\tmodelsChanged: function (was, is, prop) {\r\n\t\tvar models = this.models.copy(),\r\n\t\t\tlen = models.length;\r\n\r\n\t\tif (len != this.length) this.set('length', len);\r\n\r\n\t\tthis.emit('reset', {models: models, collection: this});\r\n\t},\r\n\r\n\t/**\r\n\t* Initializes the [collection]{@link module:enyo/Collection~Collection}.\r\n\t*\r\n\t* @param {(Object|Object[]|module:enyo/Model~Model[])} [recs] May be an [array]{@glossary Array}\r\n\t*\tof either [models]{@link module:enyo/Model~Model} or [hashes]{@glossary Object} used to\r\n\t* initialize the [collection]{@link module:enyo/Collection~Collection}, or an [object]{@glossary Object}\r\n\t*\tequivalent to the `props` parameter.\r\n\t* @param {Object} [props] - A hash of properties to apply directly to the\r\n\t* collection.\r\n\t* @param {Object} [opts] - A hash.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function (recs, props, opts) {\r\n\t\t\t// opts = opts? (this.options = enyo.mixin({}, [this.options, opts])): this.options;\r\n\r\n\t\t\t// if properties were passed in but not a records array\r\n\t\t\tprops = recs && !(recs instanceof Array)? recs: props;\r\n\t\t\tif (props === recs) recs = null;\r\n\t\t\t// initialize our core records\r\n\t\t\t// this.models = this.models || new ModelList();\r\n\t\t\t!this.models && (this.set('models', new ModelList()));\r\n\r\n\t\t\t// this is backwards compatibility\r\n\t\t\tif (props && props.records) {\r\n\t\t\t\trecs = recs? recs.concat(props.records): props.records.slice();\r\n\t\t\t\tdelete props.records;\r\n\t\t\t}\r\n\r\n\t\t\tif (props && props.models) {\r\n\t\t\t\trecs = recs? recs.concat(props.models): props.models.slice();\r\n\t\t\t\tdelete props.models;\r\n\t\t\t}\r\n\r\n\t\t\tif (props && props.options) {\r\n\t\t\t\tthis.options = utils.mixin({}, [this.options, props.options]);\r\n\t\t\t\tdelete props.options;\r\n\t\t\t} else {\r\n\t\t\t\t// ensure we have our own copy of options\r\n\t\t\t\tthis.options = utils.clone(this.options);\r\n\t\t\t}\r\n\r\n\t\t\topts = opts? utils.mixin({}, [this.options, opts]): this.options;\r\n\r\n\t\t\t// @TODO: For now, while there is only one property we manually check for it\r\n\t\t\t// if more options arrise that should be configurable this way it may need to\r\n\t\t\t// be modified\r\n\t\t\topts.fetch && (this.options.fetch = opts.fetch);\r\n\r\n\t\t\tthis.length = this.models.length;\r\n\t\t\tthis.euid = utils.uid('c');\r\n\r\n\t\t\tsup.call(this, props);\r\n\r\n\t\t\ttypeof this.model == 'string' && (this.model = kind.constructorForKind(this.model));\r\n\t\t\tthis.store = this.store || Store;\r\n\t\t\trecs && recs.length && this.add(recs, opts);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructed: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\r\n\t\t\t// automatically attempt a fetch after initialization is complete\r\n\t\t\tif (this.options.fetch) this.fetch();\r\n\t\t};\r\n\t})\r\n\r\n});\r\n\r\n/**\r\n* @name module:enyo/Collection~Collection.concat\r\n* @static\r\n* @private\r\n*/\r\nexports.concat = function (ctor, props) {\r\n\tvar proto = ctor.prototype || ctor;\r\n\r\n\tif (props.options) {\r\n\t\tproto.options = utils.mixin({}, [proto.options, props.options]);\r\n\t\tdelete props.options;\r\n\t}\r\n};\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Animator~Animator} kind.\r\n* @module enyo/Animator\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils'),\r\n\teasing = require('./easing'),\r\n\tanimation = require('./animation');\r\n\r\nvar\r\n\tComponent = require('./Component'),\r\n\tJobs = require('./jobs');\r\n\r\n/**\r\n* Fires when an animation step occurs.\r\n*\r\n* @event module:enyo/Animator~Animator#onStep\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when the animation finishes normally.\r\n*\r\n* @event module:enyo/Animator~Animator#onEnd\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when the animation is prematurely stopped.\r\n*\r\n* @event module:enyo/Animator~Animator#onStop\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/Animator~Animator} is a basic animation [component]{@link module:enyo/Component~Component}.  Call\r\n* [play()]{@link module:enyo/Animator~Animator#play} to start the animation. The animation will run for\r\n* the period (in milliseconds) specified by its [duration]{@link module:enyo/Animator~Animator#duration}\r\n* property. [onStep]{@link module:enyo/Animator~Animator#onStep} [events]{@glossary event} will\r\n* fire in quick succession and should be handled to do something based on the\r\n* [value]{@link module:enyo/Animator~Animator#value} property.\r\n*\r\n* The `value` property will progress from [startValue]{@link module:enyo/Animator~Animator#startValue}\r\n* to [endValue]{@link module:enyo/Animator~Animator#endValue} during the animation, based on the\r\n* [function]{@glossary Function} referenced by the\r\n* [easingFunction]{@link module:enyo/Animator~Animator#easingFunction} property.\r\n*\r\n* Event handlers may be specified as functions. If specified, the handler function will\r\n* be used to handle the event directly, without sending the event to its\r\n* [owner]{@link module:enyo/Component~Component#owner} or [bubbling]{@link module:enyo/Component~Component#bubble} it.\r\n* The [context]{@link module:enyo/Animator~Animator#context} property may be used to call the supplied\r\n* event functions in a particular `this` context.\r\n*\r\n* During animation, an {@link module:enyo/jobs} priority of 5 is registered to defer low priority\r\n* tasks.\r\n*\r\n* @class Animator\r\n* @extends module:enyo/Component~Component\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Animator~Animator.prototype */ {\r\n\r\n\t/**\r\n\t* A context in which to run the specified {@glossary event} handlers. If this is\r\n\t* not specified or is falsy, then the [global object]{@glossary global} is used.\r\n\t*\r\n\t* @name context\r\n\t* @type {Object}\r\n\t* @default undefined\r\n\t* @memberOf module:enyo/Animator~Animator.prototype\r\n\t* @public\r\n\t*/\r\n\r\n\tname: 'enyo.Animator',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Component,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/Animator~Animator.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Animation duration in milliseconds\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default 350\r\n\t\t* @public\r\n\t\t*/\r\n\t\tduration: 350,\r\n\r\n\t\t/**\r\n\t\t* Value of [value]{@link module:enyo/Animator~Animator#value} property at the beginning of an animation.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default 0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tstartValue: 0,\r\n\r\n\t\t/**\r\n\t\t* Value of [value]{@link module:enyo/Animator~Animator#value} property at the end of an animation.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default 1\r\n\t\t* @public\r\n\t\t*/\r\n\t\tendValue: 1,\r\n\r\n\t\t/**\r\n\t\t* Node that must be visible in order for the animation to continue. This reference is\r\n\t\t* destroyed when the animation ceases.\r\n\t\t*\r\n\t\t* @type {Object}\r\n\t\t* @default null\r\n\t\t* @public\r\n\t\t*/\r\n\t\tnode: null,\r\n\r\n\t\t/**\r\n\t\t* [Function]{@glossary Function} that determines how the animation progresses from\r\n\t\t* [startValue]{@link module:enyo/Animator~Animator#startValue} to [endValue]{@link module:enyo/Animator~Animator#endValue}.\r\n\t\t*\r\n\t\t* @type {Function}\r\n\t\t* @default module:enyo/easing~easing.cubicOut\r\n\t\t* @public\r\n\t\t*/\r\n\t\teasingFunction: easing.cubicOut\r\n\t},\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonStep: '',\r\n\t\tonEnd: '',\r\n\t\tonStop: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructed: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis._next = this.bindSafely('next');\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tthis.stop();\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Plays the animation.\r\n\t*\r\n\t* @param {Object} props - As a convenience, this [hash]{@glossary Object} will be mixed\r\n\t*\tdirectly into this [object]{@glossary Object}.\r\n\t* @public\r\n\t*/\r\n\tplay: function (props) {\r\n\t\tthis.stop();\r\n\t\tthis.reversed = false;\r\n\t\tif (props) {\r\n\t\t\tutils.mixin(this, props);\r\n\t\t}\r\n\t\tthis.t0 = this.t1 = utils.perfNow();\r\n\t\tthis.value = this.startValue;\r\n\r\n\t\t// register this jobPriority to block less urgent tasks from executing\r\n\t\tJobs.registerPriority(5, this.id);\r\n\r\n\t\tthis.job = true;\r\n\t\tthis.next();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Stops the animation and fires the associated {@glossary event}.\r\n\t*\r\n\t* @fires module:enyo/Animator~Animator#onStop\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tstop: function () {\r\n\t\tif (this.isAnimating()) {\r\n\t\t\tthis.cancel();\r\n\t\t\tthis.fire('onStop');\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Stops the animation after a final step\r\n\t*\r\n\t* @returns {this} The callee for chaining\r\n\t* @public\r\n\t*/\r\n\tcomplete: function () {\r\n\t\tif (this.isAnimating()) {\r\n\t\t\t// set the start time such that the delta will always be greater than the duration\r\n\t\t\t// causing the animation to complete immediately\r\n\t\t\tthis.t0 = -this.duration - 1;\r\n\t\t\tthis.next();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Reverses the direction of a running animation.\r\n\t*\r\n\t* @return {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\treverse: function () {\r\n\t\tif (this.isAnimating()) {\r\n\t\t\tthis.reversed = !this.reversed;\r\n\t\t\tvar now = this.t1 = utils.perfNow();\r\n\t\t\t// adjust start time (t0) to allow for animation done so far to replay\r\n\t\t\tvar elapsed = now - this.t0;\r\n\t\t\tthis.t0 = now + elapsed - this.duration;\r\n\t\t\t// swap start and end values\r\n\t\t\tvar startValue = this.startValue;\r\n\t\t\tthis.startValue = this.endValue;\r\n\t\t\tthis.endValue = startValue;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether an animation is in progress.\r\n\t*\r\n\t* @returns {Boolean} `true` if there is an animation currently running; otherwise, `false`.\r\n\t* @private\r\n\t*/\r\n\tisAnimating: function () {\r\n\t\treturn Boolean(this.job);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trequestNext: function () {\r\n\t\tthis.job = animation.requestAnimationFrame(this._next, this.node);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcancel: function () {\r\n\t\tanimation.cancelAnimationFrame(this.job);\r\n\t\tthis.node = null;\r\n\t\tthis.job = null;\r\n\r\n\t\t// unblock job queue\r\n\t\tJobs.unregisterPriority(this.id);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tshouldEnd: function () {\r\n\t\treturn (this.dt >= this.duration);\r\n\t},\r\n\r\n\t/**\r\n\t* Runs the next step of the animation.\r\n\t*\r\n\t* @fires module:enyo/Animator~Animator#onStep\r\n\t* @fires module:enyo/Animator~Animator#onEnd\r\n\t* @private\r\n\t*/\r\n\tnext: function () {\r\n\t\tthis.t1 = utils.perfNow();\r\n\t\tthis.dt = this.t1 - this.t0;\r\n\t\tvar args = this.easingFunction.length;\r\n\t\tvar f;\r\n\r\n\t\tif (args === 1) {\r\n\t\t\t// time independent\r\n\t\t\tf = this.fraction = animation.easedLerp(this.t0, this.duration, this.easingFunction, this.reversed);\r\n\t\t\tthis.value = this.startValue + f * (this.endValue - this.startValue);\r\n\t\t} else {\r\n\t\t\tthis.value = animation.easedComplexLerp(this.t0, this.duration, this.easingFunction, this.reversed,\r\n\t\t\t\tthis.dt, this.startValue, (this.endValue - this.startValue));\r\n\t\t}\r\n\t\tif (((f >= 1) && (args === 1)) || this.shouldEnd()) {\r\n\t\t\tthis.value = this.endValue;\r\n\t\t\tthis.fraction = 1;\r\n\t\t\tthis.fire('onStep');\r\n\t\t\tthis.cancel();\r\n\t\t\tutils.asyncMethod(this.bindSafely(function() {\r\n\t\t\t\tthis.fire('onEnd');\r\n\t\t\t}));\r\n\t\t} else {\r\n\t\t\tthis.fire('onStep');\r\n\t\t\tthis.requestNext();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfire: function (nom) {\r\n\t\tvar fn = this[nom];\r\n\t\tif (utils.isString(fn)) {\r\n\t\t\tthis.bubble(nom);\r\n\t\t} else if (fn) {\r\n\t\t\tfn.call(this.context || global, this);\r\n\t\t}\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Signals~Signals} kind.\r\n* @module enyo/Signals\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tComponent = require('./Component');\r\n\r\n/**\r\n* {@link module:enyo/Signals~Signals} is a [component]{@link module:enyo/Component~Component} used to listen\r\n* to global messages.\r\n* \r\n* An object with a Signals component can listen to messages sent from anywhere\r\n* by declaring handlers for them.\r\n* \r\n* DOM [events]{@glossary event} that have no node targets are broadcast as\r\n* signals. These events include Window events, such as `onload` and\r\n* `onbeforeunload`, as well as events that occur directly on `document`, such\r\n* as `onkeypress` if `document` has the focus.\r\n* \r\n* For more information, see the documentation on [Event\r\n* Handling]{@linkplain $dev-guide/key-concepts/event-handling.html} in the\r\n* Enyo Developer Guide.\r\n*\r\n* @class Signals\r\n* @extends module:enyo/Component~Component\r\n* @public\r\n*/\r\nvar Signals = module.exports = kind(\r\n\t/** @lends module:enyo/Signals~Signals.prototype */ {\r\n\r\n\tname: 'enyo.Signals',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Component,\r\n\r\n\t/**\r\n\t* Needed because of early calls to bind DOM {@glossary event} listeners\r\n\t* to the [enyo.Signals.send()]{@link module:enyo/Signals~Signals#send} call.\r\n\t* \r\n\t* @private\r\n\t*/\r\n\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tSignals.addListener(this);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tSignals.removeListener(this);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tnotify: function (msg, load) {\r\n\t\tthis.dispatchEvent(msg, load);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tprotectedStatics: {\r\n\t\tlisteners: [],\r\n\t\taddListener: function(listener) {\r\n\t\t\tthis.listeners.push(listener);\r\n\t\t},\r\n\t\tremoveListener: function(listener) {\r\n\t\t\tutils.remove(listener, this.listeners);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstatics: \r\n\t\t/** @lends module:enyo/Signals~Signals.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Broadcasts a global message to be consumed by subscribers.\r\n\t\t* \r\n\t\t* @param {String} msg - The message to send; usually the name of the\r\n\t\t*\t{@glossary event}.\r\n\t\t* @param {Object} load - An [object]{@glossary Object} containing any\r\n\t\t*\tassociated event properties to be accessed by subscribers.\r\n\t\t* @public\r\n\t\t*/\r\n\t\tsend: function (msg, load) {\r\n\t\t\tutils.forEach(this.listeners, function(l) {\r\n\t\t\t\tl.notify(msg, load);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/ScrollMath~ScrollMath} kind.\r\n* @module enyo/ScrollMath\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils'),\r\n\tplatform = require('./platform'),\r\n\tanimation = require('./animation');\r\n\r\nvar\r\n\tComponent = require('./Component');\r\n\r\n/**\r\n* Fires when a scrolling action starts.\r\n*\r\n* @event module:enyo/ScrollMath~ScrollMath#onScrollStart\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {module:enyo/Scroller~Scroller~ScrollEvent} event - An [object]{@glossary Object} containing\r\n*\tevent information.\r\n* @private\r\n*/\r\n\r\n/**\r\n* Fires while a scrolling action is in progress.\r\n*\r\n* @event module:enyo/ScrollMath~ScrollMath#onScroll\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {module:enyo/Scroller~Scroller~ScrollEvent} event - An [object]{@glossary Object} containing\r\n*\tevent information.\r\n* @private\r\n*/\r\n\r\n/**\r\n* Fires when a scrolling action stops.\r\n*\r\n* @event module:enyo/ScrollMath~ScrollMath#onScrollStop\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {module:enyo/Scroller~Scroller~ScrollEvent} event - An [object]{@glossary Object} containing\r\n*\tevent information.\r\n* @private\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/ScrollMath~ScrollMath} implements a scrolling dynamics simulation. It is a\r\n* helper [kind]{@glossary kind} used by other [scroller]{@link module:enyo/Scroller~Scroller}\r\n* kinds, such as {@link module:enyo/TouchScrollStrategy~TouchScrollStrategy}.\r\n*\r\n* `enyo/ScrollMath` is not typically created in application code.\r\n*\r\n* @class ScrollMath\r\n* @protected\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/ScrollMath~ScrollMath.prototype */ {\r\n\r\n\tname: 'enyo.ScrollMath',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Component,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/ScrollMath~ScrollMath.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Set to `true` to enable vertical scrolling.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default true\r\n\t\t* @private\r\n\t\t*/\r\n\t\tvertical: true,\r\n\r\n\t\t/**\r\n\t\t* Set to `true` to enable horizontal scrolling.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default true\r\n\t\t* @private\r\n\t\t*/\r\n\t\thorizontal: true\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonScrollStart: '',\r\n\t\tonScroll: '',\r\n\t\tonScrollStop: '',\r\n\t\tonStabilize: ''\r\n\t},\r\n\r\n\t/**\r\n\t* \"Spring\" damping returns the scroll position to a value inside the boundaries. Lower\r\n\t* values provide faster snapback.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tkSpringDamping: 0.93,\r\n\r\n\t/**\r\n\t* \"Drag\" damping resists dragging the scroll position beyond the boundaries. Lower values\r\n\t* provide more resistance.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tkDragDamping: 0.5,\r\n\r\n\t/**\r\n\t* \"Friction\" damping reduces momentum over time. Lower values provide more friction.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tkFrictionDamping: 0.97,\r\n\r\n\t/**\r\n\t* Additional \"friction\" damping applied when momentum carries the viewport into overscroll.\r\n\t* Lower values provide more friction.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tkSnapFriction: 0.9,\r\n\r\n\t/**\r\n\t* Scalar applied to `flick` event velocity.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tkFlickScalar: 15,\r\n\r\n\t/**\r\n\t* Limits the maximum allowable flick. On Android > 2, we limit this to prevent compositing\r\n\t* artifacts.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tkMaxFlick: platform.android > 2 ? 2 : 1e9,\r\n\r\n\t/**\r\n\t* The value used in [friction()]{@link module:enyo/ScrollMath~ScrollMath#friction} to determine if the delta\r\n\t* (e.g., y - y0) is close enough to zero to consider as zero.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tkFrictionEpsilon: platform.webos >= 4 ? 1e-1 : 1e-2,\r\n\r\n\t/**\r\n\t* Top snap boundary, generally `0`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\ttopBoundary: 0,\r\n\r\n\t/**\r\n\t* Right snap boundary, generally `(viewport width - content width)`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\trightBoundary: 0,\r\n\r\n\t/**\r\n\t* Bottom snap boundary, generally `(viewport height - content height)`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tbottomBoundary: 0,\r\n\r\n\t/**\r\n\t* Left snap boundary, generally `0`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tleftBoundary: 0,\r\n\r\n\t/**\r\n\t* Animation time step.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tinterval: 20,\r\n\r\n\t/**\r\n\t* Flag to enable frame-based animation; if `false`, time-based animation is used.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tfixedTime: true,\r\n\r\n\t/**\r\n\t* Simulation state.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tx0: 0,\r\n\r\n\t/**\r\n\t* Simulation state.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tx: 0,\r\n\r\n\t/**\r\n\t* Simulation state.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\ty0: 0,\r\n\r\n\t/**\r\n\t* Simulation state.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\ty: 0,\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.boundarySnapshot = {};\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tthis.stop();\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Simple Verlet integrator for simulating Newtonian motion.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tverlet: function () {\r\n\t\tvar x = this.x;\r\n\t\tthis.x += x - this.x0;\r\n\t\tthis.x0 = x;\r\n\t\t//\r\n\t\tvar y = this.y;\r\n\t\tthis.y += y - this.y0;\r\n\t\tthis.y0 = y;\r\n\t},\r\n\r\n\t/**\r\n\t* Boundary damping function. Returns damped `value` based on `coeff` on one side of\r\n\t* `origin`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tdamping: function (val, origin, coeff, sign) {\r\n\t\tvar kEpsilon = 0.5;\r\n\t\t//\r\n\t\t// this is basically just value *= coeff (generally, coeff < 1)\r\n\t\t//\r\n\t\t// 'sign' and the conditional is to force the damping to only occur\r\n\t\t// on one side of the origin.\r\n\t\t//\r\n\t\tvar dv = val - origin;\r\n\t\t// Force close-to-zero to zero\r\n\t\tif (Math.abs(dv) < kEpsilon) {\r\n\t\t\treturn origin;\r\n\t\t}\r\n\t\treturn val*sign > origin*sign ? coeff * dv + origin : val;\r\n\t},\r\n\r\n\t/**\r\n\t* Dual-boundary damping function. Returns damped `value` based on `coeff` when exceeding\r\n\t* either boundary.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tboundaryDamping: function (val, aBoundary, bBoundary, coeff) {\r\n\t\treturn this.damping(this.damping(val, aBoundary, coeff, 1), bBoundary, coeff, -1);\r\n\t},\r\n\r\n\t/**\r\n\t* Simulation constraints (spring damping occurs here).\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tconstrain: function () {\r\n\t\tvar b = this.getDampingBoundaries(),\r\n\t\t\ty = this.boundaryDamping(this.y, b.top, b.bottom, this.kSpringDamping),\r\n\t\t\tx = this.boundaryDamping(this.x, b.left, b.right, this.kSpringDamping);\r\n\r\n\t\tif (y != this.y) {\r\n\t\t\t// ensure snapping introduces no velocity, add additional friction\r\n\t\t\tthis.y0 = y - (this.y - this.y0) * this.kSnapFriction;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\r\n\t\tif (x != this.x) {\r\n\t\t\tthis.x0 = x - (this.x - this.x0) * this.kSnapFriction;\r\n\t\t\tthis.x = x;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* The friction function.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tfriction: function (ex, ex0, coeff) {\r\n\t\t// implicit velocity\r\n\t\tvar dp = this[ex] - this[ex0];\r\n\t\t// let close-to-zero collapse to zero (i.e. smaller than epsilon is considered zero)\r\n\t\tvar c = Math.abs(dp) > this.kFrictionEpsilon ? coeff : 0;\r\n\t\t// reposition using damped velocity\r\n\t\tthis[ex] = this[ex0] + c * dp;\r\n\t},\r\n\r\n\t/**\r\n\t* One unit of time for simulation.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tframe: 10,\r\n\t// piece-wise constraint simulation\r\n\tsimulate: function (t) {\r\n\t\twhile (t >= this.frame) {\r\n\t\t\tt -= this.frame;\r\n\t\t\tif (!this.dragging) {\r\n\t\t\t\tthis.constrain();\r\n\t\t\t}\r\n\t\t\tthis.verlet();\r\n\t\t\tthis.friction('y', 'y0', this.kFrictionDamping);\r\n\t\t\tthis.friction('x', 'x0', this.kFrictionDamping);\r\n\t\t}\r\n\t\treturn t;\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tgetDampingBoundaries: function() {\r\n\t\treturn this.haveBoundarySnapshot ?\r\n\t\t\tthis.boundarySnapshot :\r\n\t\t\t{\r\n\t\t\t\ttop : this.topBoundary,\r\n\t\t\t\tbottom : this.bottomBoundary,\r\n\t\t\t\tleft : this.leftBoundary,\r\n\t\t\t\tright : this.rightBoundary\r\n\t\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\ttakeBoundarySnapshot: function () {\r\n\t\tvar s;\r\n\r\n\t\tif (!this.haveBoundarySnapshot) {\r\n\t\t\ts = this.boundarySnapshot;\r\n\r\n\t\t\ts.top = this.topBoundary;\r\n\t\t\ts.bottom = this.bottomBoundary;\r\n\t\t\ts.left = this.leftBoundary;\r\n\t\t\ts.right = this.rightBoundary;\r\n\r\n\t\t\tthis.haveBoundarySnapshot = true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdiscardBoundarySnapshot: function() {\r\n\t\tthis.haveBoundarySnapshot = false;\r\n\t},\r\n\r\n\t/**\r\n\t* @fires module:enyo/ScrollMath~ScrollMath#onScrollStop\r\n\t* @private\r\n\t*/\r\n\tanimate: function () {\r\n\t\tthis.stop();\r\n\t\t// time tracking\r\n\t\tvar t0 = utils.perfNow(), t = 0;\r\n\t\t// delta tracking\r\n\t\tvar x0, y0;\r\n\t\t// animation handler\r\n\t\tvar fn = this.bindSafely(function() {\r\n\t\t\t// wall-clock time\r\n\t\t\tvar t1 = utils.perfNow();\r\n\t\t\t// schedule next frame\r\n\t\t\tthis.job = animation.requestAnimationFrame(fn);\r\n\t\t\t// delta from last wall clock time\r\n\t\t\tvar dt = t1 - t0;\r\n\t\t\t// record the time for next delta\r\n\t\t\tt0 = t1;\r\n\t\t\t// user drags override animation\r\n\t\t\tif (this.dragging) {\r\n\t\t\t\tthis.y0 = this.y = this.uy;\r\n\t\t\t\tthis.x0 = this.x = this.ux;\r\n\t\t\t\tthis.endX = this.endY = null;\r\n\t\t\t}\r\n\t\t\t// frame-time accumulator\r\n\t\t\t// min acceptable time is 16ms (60fps)\r\n\t\t\tt += Math.max(16, dt);\r\n\t\t\t// prevent snapping to originally desired scroll position if we are in overscroll\r\n\t\t\tif (this.isInOverScroll()) {\r\n\t\t\t\tthis.endX = null;\r\n\t\t\t\tthis.endY = null;\r\n\r\n\t\t\t\tthis.takeBoundarySnapshot();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.discardBoundarySnapshot();\r\n\r\n\t\t\t\t// alternate fixed-time step strategy:\r\n\t\t\t\tif (this.fixedTime) {\r\n\t\t\t\t\tt = this.interval;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// consume some t in simulation\r\n\t\t\tt = this.simulate(t);\r\n\t\t\t// scroll if we have moved, otherwise the animation is stalled and we can stop\r\n\t\t\tif (y0 != this.y || x0 != this.x) {\r\n\t\t\t\tthis.scroll();\r\n\t\t\t} else if (!this.dragging) {\r\n\t\t\t\t// set final values\r\n\t\t\t\tif (this.endX != null) {\r\n\t\t\t\t\tthis.x = this.x0 = this.endX;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.endY != null) {\r\n\t\t\t\t\tthis.y = this.y0 = this.endY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tthis.scroll();\r\n\t\t\t\tthis.doScrollStop();\r\n\r\n\t\t\t\tthis.endX = null;\r\n\t\t\t\tthis.endY = null;\r\n\t\t\t}\r\n\t\t\ty0 = this.y;\r\n\t\t\tx0 = this.x;\r\n\t\t});\r\n\t\tthis.job = animation.requestAnimationFrame(fn);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstart: function () {\r\n\t\tif (!this.job) {\r\n\t\t\tthis.doScrollStart();\r\n\t\t\tthis.animate();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstop: function (fire) {\r\n\t\tvar job = this.job;\r\n\t\tif (job) {\r\n\t\t\tthis.job = animation.cancelAnimationFrame(job);\r\n\t\t}\r\n\t\tif (fire) {\r\n\t\t\tthis.doScrollStop();\r\n\r\n\t\t\tthis.endX = undefined;\r\n\t\t\tthis.endY = undefined;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Adjusts the scroll position to be valid, if necessary (e.g., after the scroll contents\r\n\t* have changed).\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tstabilize: function (opts) {\r\n\t\tvar fire = !opts || opts.fire === undefined || opts.fire;\r\n\t\tvar y = Math.min(this.topBoundary, Math.max(this.bottomBoundary, this.y));\r\n\t\tvar x = Math.min(this.leftBoundary, Math.max(this.rightBoundary, this.x));\r\n\t\tif (y != this.y || x != this.x) {\r\n\t\t\tthis.y = this.y0 = y;\r\n\t\t\tthis.x = this.x0 = x;\r\n\t\t\tif (fire) {\r\n\t\t\t\tthis.doStabilize();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstartDrag: function (e) {\r\n\t\tthis.dragging = true;\r\n\t\t//\r\n\t\tthis.my = e.pageY;\r\n\t\tthis.py = this.uy = this.y;\r\n\t\t//\r\n\t\tthis.mx = e.pageX;\r\n\t\tthis.px = this.ux = this.x;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdrag: function (e) {\r\n\t\tvar dy, dx, v, h;\r\n\t\tif (this.dragging) {\r\n\t\t\tv = this.canScrollY();\r\n\t\t\th = this.canScrollX();\r\n\r\n\t\t\tdy = v ? e.pageY - this.my : 0;\r\n\t\t\tthis.uy = dy + this.py;\r\n\t\t\t// provides resistance against dragging into overscroll\r\n\t\t\tthis.uy = this.boundaryDamping(this.uy, this.topBoundary, this.bottomBoundary, this.kDragDamping);\r\n\t\t\t//\r\n\t\t\tdx = h ? e.pageX - this.mx : 0;\r\n\t\t\tthis.ux = dx + this.px;\r\n\t\t\t// provides resistance against dragging into overscroll\r\n\t\t\tthis.ux = this.boundaryDamping(this.ux, this.leftBoundary, this.rightBoundary, this.kDragDamping);\r\n\t\t\t//\r\n\t\t\tthis.start();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdragDrop: function () {\r\n\t\tif (this.dragging && !window.PalmSystem) {\r\n\t\t\tvar kSimulatedFlickScalar = 0.5;\r\n\t\t\tthis.y = this.uy;\r\n\t\t\tthis.y0 = this.y - (this.y - this.y0) * kSimulatedFlickScalar;\r\n\t\t\tthis.x = this.ux;\r\n\t\t\tthis.x0 = this.x - (this.x - this.x0) * kSimulatedFlickScalar;\r\n\t\t}\r\n\t\tthis.dragFinish();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdragFinish: function () {\r\n\t\tthis.dragging = false;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tflick: function (e) {\r\n\t\tvar v;\r\n\t\tif (this.canScrollY()) {\r\n\t\t\tv = e.yVelocity > 0 ? Math.min(this.kMaxFlick, e.yVelocity) : Math.max(-this.kMaxFlick, e.yVelocity);\r\n\t\t\tthis.y = this.y0 + v * this.kFlickScalar;\r\n\t\t}\r\n\t\tif (this.canScrollX()) {\r\n\t\t\tv = e.xVelocity > 0 ? Math.min(this.kMaxFlick, e.xVelocity) : Math.max(-this.kMaxFlick, e.xVelocity);\r\n\t\t\tthis.x = this.x0 + v * this.kFlickScalar;\r\n\t\t}\r\n\t\tthis.start();\r\n\t},\r\n\r\n\t/**\r\n\t* TODO: Refine and test newMousewheel, remove this\r\n\t* @private\r\n\t*/\r\n\tmousewheel: function (e) {\r\n\t\tvar dy = this.vertical ? e.wheelDeltaY || (!e.wheelDeltaX ? e.wheelDelta : 0) : 0,\r\n\t\t\tdx = this.horizontal ? e.wheelDeltaX : 0,\r\n\t\t\tshouldScroll = false;\r\n\t\tif ((dy > 0 && this.y < this.topBoundary) || (dy < 0 && this.y > this.bottomBoundary)) {\r\n\t\t\tthis.y = this.y0 = this.y0 + dy;\r\n\t\t\tshouldScroll = true;\r\n\t\t}\r\n\t\tif ((dx > 0 && this.x < this.leftBoundary) || (dx < 0 && this.x > this.rightBoundary)) {\r\n\t\t\tthis.x = this.x0 = this.x0 + dx;\r\n\t\t\tshouldScroll = true;\r\n\t\t}\r\n\t\tthis.stop(!shouldScroll);\r\n\t\tif (shouldScroll) {\r\n\t\t\tthis.start();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tnewMousewheel: function (e, opts) {\r\n\t\tvar rtl = opts && opts.rtl,\r\n\t\t\twdY = (e.wheelDeltaY === undefined) ? e.wheelDelta : e.wheelDeltaY,\r\n\t\t\tdY = wdY,\r\n\t\t\tdX = rtl ? -e.wheelDeltaX : e.wheelDeltaX,\r\n\t\t\tcanY = this.canScrollY(),\r\n\t\t\tcanX = this.canScrollX(),\r\n\t\t\tshouldScroll = false,\r\n\t\t\tm = 2,\r\n\t\t\t// TODO: Figure out whether we need to port the configurable\r\n\t\t\t// max / multiplier feature from Moonstone's implementation,\r\n\t\t\t// and (if so) how\r\n\t\t\t// max = 100,\r\n\t\t\tscr = this.isScrolling(),\r\n\t\t\tovr = this.isInOverScroll(),\r\n\t\t\trefY = (scr && this.endY !== null) ? this.endY : this.y,\r\n\t\t\trefX = (scr && this.endX !== null) ? this.endX : this.x,\r\n\t\t\ttY = refY,\r\n\t\t\ttX = refX;\r\n\r\n\t\tif (ovr) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// If we're getting strictly vertical mousewheel events over a scroller that\r\n\t\t// can only move horizontally, the user is probably using a one-dimensional\r\n\t\t// mousewheel and would like us to scroll horizontally instead\r\n\t\tif (dY && !dX && canX && !canY) {\r\n\t\t\tdX = dY;\r\n\t\t\tdY = 0;\r\n\t\t}\r\n\r\n\t\tif (dY && canY) {\r\n\t\t\ttY = -(refY + (dY * m));\r\n\t\t\tshouldScroll = true;\r\n\t\t}\r\n\t\tif (dX && canX) {\r\n\t\t\ttX = -(refX + (dX * m));\r\n\t\t\tshouldScroll = true;\r\n\t\t}\r\n\r\n\t\tif (shouldScroll) {\r\n\t\t\tthis.scrollTo(tX, tY, {allowOverScroll: true});\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @fires module:enyo/ScrollMath~ScrollMath#onScroll\r\n\t* @private\r\n\t*/\r\n\tscroll: function () {\r\n\t\tthis.doScroll();\r\n\t},\r\n\r\n\t// NOTE: Yip/Orvell method for determining scroller instantaneous velocity\r\n\t// FIXME: incorrect if called when scroller is in overscroll region\r\n\t// because does not account for additional overscroll damping.\r\n\r\n\t/**\r\n\t* Scrolls to the specified position.\r\n\t*\r\n\t* @param {Number} x - The `x` position in pixels.\r\n\t* @param {Number} y - The `y` position in pixels.\r\n\t* @param {Object} opts - TODO: Document. When behavior == 'instant', we skip animation.\r\n\t* @private\r\n\t*/\r\n\tscrollTo: function (x, y, opts) {\r\n\t\tvar animate = !opts || opts.behavior !== 'instant',\r\n\t\t\txSnap = this.xSnapIncrement,\r\n\t\t\tySnap = this.ySnapIncrement,\r\n\t\t\tallowOverScroll = opts && opts.allowOverScroll,\r\n\t\t\tmaxX = Math.abs(Math.min(0, this.rightBoundary)),\r\n\t\t\tmaxY = Math.abs(Math.min(0, this.bottomBoundary));\r\n\r\n\t\tif (typeof xSnap === 'number') {\r\n\t\t\tx = xSnap * Math.round(x / xSnap);\r\n\t\t}\r\n\r\n\t\tif (typeof ySnap === 'number') {\r\n\t\t\ty = ySnap * Math.round(y / ySnap);\r\n\t\t}\r\n\r\n\t\tif (!animate || !allowOverScroll) {\r\n\t\t\tx = Math.max(0, Math.min(x, maxX));\r\n\t\t\ty = Math.max(0, Math.min(y, maxY));\r\n\t\t}\r\n\r\n\t\tif (-x == this.x && -y == this.y) return;\r\n\r\n\t\tif (!animate) {\r\n\t\t\tthis.doScrollStart();\r\n\t\t\tthis.setScrollX(-x);\r\n\t\t\tthis.setScrollY(-y);\r\n\t\t\tthis.doScroll();\r\n\t\t\tthis.doScrollStop();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (y !== null) {\r\n\t\t\t\tthis.endY = -y;\r\n\t\t\t\tthis.y = this.y0 - (y + this.y0) * (1 - this.kFrictionDamping);\r\n\t\t\t}\r\n\t\t\tif (x !== null) {\r\n\t\t\t\tthis.endX = -x;\r\n\t\t\t\tthis.x = this.x0 - (x + this.x0) * (1 - this.kFrictionDamping);\r\n\t\t\t}\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the scroll position along the x-axis.\r\n\t*\r\n\t* @param {Number} x - The x-axis scroll position in pixels.\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tsetScrollX: function (x) {\r\n\t\tthis.x = this.x0 = x;\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the scroll position along the y-axis.\r\n\t*\r\n\t* @param {Number} y - The y-axis scroll position in pixels.\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tsetScrollY: function (y) {\r\n\t\tthis.y = this.y0 = y;\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the scroll position; defaults to setting this position along the y-axis.\r\n\t*\r\n\t* @param {Number} pos - The scroll position in pixels.\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tsetScrollPosition: function (pos) {\r\n\t\tthis.setScrollY(pos);\r\n\t},\r\n\r\n\tcanScrollX: function() {\r\n\t\treturn this.horizontal && this.rightBoundary < 0;\r\n\t},\r\n\r\n\tcanScrollY: function() {\r\n\t\treturn this.vertical && this.bottomBoundary < 0;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t* Determines whether or not the [scroller]{@link module:enyo/Scroller~Scroller} is actively moving.\r\n\t*\r\n\t* @return {Boolean} `true` if actively moving; otherwise, `false`.\r\n\t* @private\r\n\t*/\r\n\tisScrolling: function () {\r\n\t\treturn Boolean(this.job);\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether or not the [scroller]{@link module:enyo/Scroller~Scroller} is in overscroll.\r\n\t*\r\n\t* @return {Boolean} `true` if in overscroll; otherwise, `false`.\r\n\t* @private\r\n\t*/\r\n\tisInOverScroll: function () {\r\n\t\treturn this.job && (this.x > this.leftBoundary || this.x < this.rightBoundary ||\r\n\t\t\tthis.y > this.topBoundary || this.y < this.bottomBoundary);\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/MultipleDispatchComponent~MultipleDispatchComponent} kind.\r\n* @module enyo/MultipleDispatchComponent\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind');\r\n\r\nvar\r\n\tComponent = require('./Component'),\r\n\tMultipleDispatchSupport = require('./MultipleDispatchSupport');\r\n\r\n/**\r\n* {@link module:enyo/MultipleDispatchComponent~MultipleDispatchComponent} is a purely abstract\r\n* {@glossary kind} that simply provides a common ancestor for\r\n* {@link module:enyo/Component~Component} [objects]{@glossary Object} that need \r\n* the [MultipleDispatchSupport]{@link module:enyo/MultipleDispatchSupport~MultipleDispatchSupport}\r\n* {@glossary mixin}.\r\n*\r\n* @class MultipleDispatchComponent\r\n* @extends module:enyo/Component~Component\r\n* @mixes module:enyo/MultipleDispatchSupport~MultipleDispatchSupport\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/MultipleDispatchComponent~MultipleDispatchComponent */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Component,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmixins: [MultipleDispatchSupport]\r\n});\r\n","require('enyo');\r\n\r\nvar\r\n\tutils = require('./utils');\r\nvar\r\n\tComponent = require('./Component'),\r\n\tSignals = require('./Signals');\r\n\r\n/**\r\n* Default owner assigned to ownerless [UiComponents]{@link module:enyo/UiComponent~UiComponent},\r\n* to allow such UiComponents to be notified of important system events like window resize.\r\n*\r\n* NOTE: Ownerless [UiComponents]{@link module:enyo/UiComponent~UiComponent} will not be garbage collected unless \r\n* explicitly destroyed, as they will be referenced by `master`.\r\n*\r\n* @module enyo/master\r\n* @private\r\n*/\r\nvar master = module.exports = new Component({\r\n\tname: 'master',\r\n\tnotInstanceOwner: true,\r\n\teventFlags: {showingOnly: true}, // don't waterfall these events into hidden controls\r\n\tgetId: function () {\r\n\t\treturn '';\r\n\t},\r\n\tisDescendantOf: utils.nop,\r\n\tbubble: function (nom, event) {\r\n\t\t//enyo.log('master event: ' + nom);\r\n\t\tif (nom == 'onresize') {\r\n\t\t\t// Resize is special; waterfall this message.\r\n\t\t\t// This works because master is a Component, so it waterfalls\r\n\t\t\t// to its owned Components (i.e., master has no children).\r\n\t\t\tmaster.waterfallDown('onresize', this.eventFlags);\r\n\t\t\tmaster.waterfallDown('onpostresize', this.eventFlags);\r\n\t\t} else {\r\n\t\t\t// All other top-level events are sent only to interested Signal\r\n\t\t\t// receivers.\r\n\t\t\tSignals.send(nom, event);\r\n\t\t}\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Controller~Controller} kind.\r\n* @module enyo/Controller\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tMultipleDispatchComponent = require('./MultipleDispatchComponent');\r\n\r\n/**\r\n* {@link module:enyo/Controller~Controller} is the base [kind]{@glossary kind} for all\r\n* controllers in Enyo. An abstract kind, `enyo/Controller` is a\r\n* [delegate]{@glossary delegate}/[component]{@link module:enyo/Component~Component} that\r\n* is designed to be a proxy for information.\r\n*\r\n* @class Controller\r\n* @extends module:enyo/MultipleDispatchComponent~MultipleDispatchComponent\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Controller~Controller.prototype */ {\r\n\r\n\tname: 'enyo.Controller',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: MultipleDispatchComponent,\r\n\r\n\t/**\r\n\t* Set this flag to `true` to make this [controller]{@link module:enyo/Controller~Controller}\r\n\t* available globally, when instanced. When set to `true`, even the\r\n\t* [owner]{@link module:enyo/Component~Component#owner} (if any) cannot\r\n\t* [destroy]{@link module:enyo/Component~Component#destroy} it.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tglobal: false,\r\n\r\n\t/**\r\n\t* The default source of information for all instances of {@link module:enyo/Controller~Controller}\r\n\t* and its [subkinds]{@glossary subkind}. In some cases, this will be a\r\n\t* [computed property]{@link module:enyo/ComputedSupport} to facilitate overloading.\r\n\t* It may contain any type of data.\r\n\t*\r\n\t* @type {*}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tdata: null,\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t// don't attempt to set a controller globally without a name\r\n\t\t\tif (this.global && this.name) {\r\n\t\t\t\tutils.setPath.call(global, this.name, this);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\t_isController: true\r\n});\r\n","/**\r\n* Contains dispatcher methods\r\n* @module enyo/dispatcher\r\n* @private\r\n*/\r\nrequire('enyo');\r\n\r\nvar\r\n\tlogger = require('./logger'),\r\n\tmaster = require('./master'),\r\n\tutils = require('./utils');\r\n\r\nvar\r\n\tDom = require('./dom');\r\n\r\n/**\r\n * An [object]{@glossary Object} describing the the last known coordinates of the cursor or\r\n * user-interaction point in touch environments.\r\n *\r\n * @typedef {Object} module:enyo/dispatcher~CursorCoordinates\r\n * @property {Number} clientX - The horizontal coordinate within the application's client area.\r\n * @property {Number} clientY - The vertical coordinate within the application's client area.\r\n * @property {Number} pageX - The X coordinate of the cursor relative to the viewport, including any\r\n *   scroll offset.\r\n * @property {Number} pageY - The Y coordinate of the cursor relative to the viewport, including any\r\n *   scroll offset.\r\n * @property {Number} screenX - The X coordinate of the cursor relative to the screen, not including\r\n *   any scroll offset.\r\n * @property {Number} screenY - The Y coordinate of the cursor relative to the screen, not including\r\n *   any scroll offset.\r\n */\r\n\r\n/**\r\n* @private\r\n*/\r\nvar dispatcher = module.exports = dispatcher = {\r\n\r\n\t$: {},\r\n\r\n\t/**\r\n\t* These events come from document\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tevents: ['mousedown', 'mouseup', 'mouseover', 'mouseout', 'mousemove', 'mousewheel',\r\n\t\t'click', 'dblclick', 'change', 'keydown', 'keyup', 'keypress', 'input',\r\n\t\t'paste', 'copy', 'cut', 'webkitTransitionEnd', 'transitionend', 'webkitAnimationEnd', 'animationend',\r\n\t\t'webkitAnimationStart', 'animationstart', 'webkitAnimationIteration', 'animationiteration'],\r\n\r\n\t/**\r\n\t* These events come from window\r\n\t*\r\n\t* @private\r\n\t*/\r\n\twindowEvents: ['resize', 'load', 'unload', 'message', 'hashchange', 'popstate', 'focus', 'blur'],\r\n\r\n\t/**\r\n\t* Feature plugins (aka filters)\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tfeatures: [],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconnect: function() {\r\n\t\tvar d = dispatcher, i, n;\r\n\t\tfor (i=0; (n=d.events[i]); i++) {\r\n\t\t\td.listen(document, n);\r\n\t\t}\r\n\t\tfor (i=0; (n=d.windowEvents[i]); i++) {\r\n\t\t\t// Chrome Packaged Apps don't like \"unload\"\r\n\t\t\tif(n === 'unload' &&\r\n\t\t\t\t(typeof global.chrome === 'object') &&\r\n\t\t\t\tglobal.chrome.app) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\td.listen(window, n);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tlisten: function(inListener, inEventName, inHandler) {\r\n\t\tinListener.addEventListener(inEventName, inHandler || dispatch, false);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstopListening: function(inListener, inEventName, inHandler) {\r\n\t\tinListener.removeEventListener(inEventName, inHandler || dispatch, false);\r\n\t},\r\n\r\n\t/**\r\n\t* Fires an event for Enyo to listen for.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tdispatch: function(e) {\r\n\t\t// Find the control who maps to e.target, or the first control that maps to an ancestor of e.target.\r\n\t\tvar c = this.findDispatchTarget(e.target) || this.findDefaultTarget();\r\n\t\t// Cache the original target\r\n\t\te.dispatchTarget = c;\r\n\t\t// support pluggable features return true to abort immediately or set e.preventDispatch to avoid processing.\r\n\t\tfor (var i=0, fn; (fn=this.features[i]); i++) {\r\n\t\t\tif (fn.call(this, e) === true) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (c && !e.preventDispatch) {\r\n\t\t\treturn this.dispatchBubble(e, c);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Takes an event target and finds the corresponding Enyo control.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tfindDispatchTarget: function(inNode) {\r\n\t\tvar t, n = inNode;\r\n\t\t// FIXME: Mozilla: try/catch is here to squelch \"Permission denied to access property xxx from a non-chrome context\"\r\n\t\t// which appears to happen for scrollbar nodes in particular. It's unclear why those nodes are valid targets if\r\n\t\t// it is illegal to interrogate them. Would like to trap the bad nodes explicitly rather than using an exception block.\r\n\t\ttry {\r\n\t\t\twhile (n) {\r\n\t\t\t\tif ((t = this.$[n.id])) {\r\n\t\t\t\t\t// there could be multiple nodes with this id, the relevant node for this event is n\r\n\t\t\t\t\t// we don't push this directly to t.node because sometimes we are just asking what\r\n\t\t\t\t\t// the target 'would be' (aka, calling findDispatchTarget from handleMouseOverOut)\r\n\t\t\t\t\tt.eventNode = n;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tn = n.parentNode;\r\n\t\t\t}\r\n\t\t} catch(x) {\r\n\t\t\tlogger.log(x, n);\r\n\t\t}\r\n\t\treturn t;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the default Enyo control for events.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tfindDefaultTarget: function() {\r\n\t\treturn master;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdispatchBubble: function(e, c) {\r\n\t\tvar type = e.type;\r\n\t\ttype = e.customEvent ? type : 'on' + type;\r\n\t\treturn c.bubble(type, e, c);\r\n\t}\r\n};\r\n\r\n/**\r\n* Called in the context of an event.\r\n*\r\n* @name module:enyo/dispatcher.iePreventDefault\r\n* @static\r\n* @method\r\n* @private\r\n*/\r\ndispatcher.iePreventDefault = function() {\r\n\ttry {\r\n\t\tthis.returnValue = false;\r\n\t}\r\n\tcatch(e) {\r\n\t\t// do nothing\r\n\t}\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nfunction dispatch (inEvent) {\r\n\treturn dispatcher.dispatch(inEvent);\r\n}\r\n\r\n/**\r\n* @name module:enyo/dispatcher.bubble\r\n* @static\r\n* @method\r\n* @private\r\n*/\r\ndispatcher.bubble = function(inEvent) {\r\n\tif (inEvent) {\r\n\t\tdispatcher.dispatch(inEvent);\r\n\t}\r\n};\r\n\r\n// This string is set on event handlers attributes for DOM elements that\r\n// don't normally bubble (like onscroll) so that they can participate in the\r\n// Enyo event system.\r\ndispatcher.bubbler = 'enyo.bubble(arguments[0])';\r\n\r\n// The code below helps make Enyo compatible with Google Packaged Apps\r\n// Content Security Policy(http://developer.chrome.com/extensions/contentSecurityPolicy.html),\r\n// which, among other things, forbids the use of inline scripts.\r\n// We replace online scripting with equivalent means, leaving dispatcher.bubbler\r\n// for backward compatibility.\r\n(function() {\r\n\tvar bubbleUp = function() {\r\n\t\tdispatcher.bubble(arguments[0]);\r\n\t};\r\n\r\n\t/**\r\n\t* Makes given events bubble on a specified Enyo control.\r\n\t*\r\n\t* @name: module:enyo/dispatcher.makeBubble\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdispatcher.makeBubble = function() {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 0),\r\n\t\t\tcontrol = args.shift();\r\n\r\n\t\tif((typeof control === 'object') && (typeof control.hasNode === 'function')) {\r\n\t\t\tutils.forEach(args, function(event) {\r\n\t\t\t\tif(this.hasNode()) {\r\n\t\t\t\t\tdispatcher.listen(this.node, event, bubbleUp);\r\n\t\t\t\t}\r\n\t\t\t}, control);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t* Removes the event listening and bubbling initiated by\r\n\t* [makeBubble()]{@link module:enyo/dispatcher.makeBubble} on a specific control.\r\n\t*\r\n\t* @name: module:enyo/dispatcher.unmakeBubble\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdispatcher.unmakeBubble = function() {\r\n\t\tvar args = Array.prototype.slice.call(arguments, 0),\r\n\t\t\tcontrol = args.shift();\r\n\r\n\t\tif((typeof control === 'object') && (typeof control.hasNode === 'function')) {\r\n\t\t\tutils.forEach(args, function(event) {\r\n\t\t\t\tif(this.hasNode()) {\r\n\t\t\t\t\tdispatcher.stopListening(this.node, event, bubbleUp);\r\n\t\t\t\t}\r\n\t\t\t}, control);\r\n\t\t}\r\n\t};\r\n})();\r\n\r\n/**\r\n* @private\r\n*/\r\n// FIXME: we need to create and initialize dispatcher someplace else to allow overrides\r\nDom.requiresWindow(dispatcher.connect);\r\n\r\n/**\r\n* Generates a tapped event for a raw-click event.\r\n*\r\n* @private\r\n*/\r\ndispatcher.features.push(\r\n\tfunction (e) {\r\n\t\tif ('click' === e.type) {\r\n\t\t\tif (e.clientX === 0 && e.clientY === 0 && !e.detail) {\r\n\t\t\t\t// this allows the click to dispatch as well\r\n\t\t\t\t// but note the tap event will fire first\r\n\t\t\t\tvar cp = utils.clone(e);\r\n\t\t\t\tcp.type = 'tap';\r\n\t\t\t\tcp.preventDefault = utils.nop;\r\n\t\t\t\tdispatcher.dispatch(cp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n);\r\n\r\n/**\r\n* Instead of having multiple `features` pushed and handled in separate methods\r\n* for these events, we handle them uniformly here to expose the last known\r\n* interaction coordinates as accurately as possible.\r\n*\r\n* @private\r\n*/\r\nvar _xy = {};\r\ndispatcher.features.push(\r\n\tfunction (e) {\r\n\t\tif (\r\n\t\t\t(e.type == 'mousemove')  ||\r\n\t\t\t(e.type == 'tap')        ||\r\n\t\t\t(e.type == 'click')      ||\r\n\t\t\t(e.type == 'touchmove')\r\n\t\t) {\r\n\t\t\tvar evt = (e.type == 'touchmove') ? e.touches[0] : e;\r\n\t\t\t_xy.clientX = evt.clientX;\r\n\t\t\t_xy.clientY = evt.clientY;\r\n\t\t\t// note only ie8 does not support pageX/pageY\r\n\t\t\t_xy.pageX   = evt.pageX;\r\n\t\t\t_xy.pageY   = evt.pageY;\r\n\t\t\t// note ie8 and opera report these values incorrectly\r\n\t\t\t_xy.screenX = evt.screenX;\r\n\t\t\t_xy.screenY = evt.screenY;\r\n\t\t}\r\n\t}\r\n);\r\n\r\n/**\r\n* Retrieves the last known coordinates of the cursor or user-interaction point\r\n* in touch environments. Returns an immutable object with the `clientX`,\r\n* `clientY`, `pageX`, `pageY`, `screenX`, and `screenY` properties. It is\r\n* important to note that IE8 and Opera have improper reporting for the\r\n* `screenX` and `screenY` properties (they both use CSS pixels as opposed to\r\n* device pixels).\r\n*\r\n* @returns {module:enyo/dispatcher~CursorCoordinates} An [object]{@glossary Object} describing the\r\n*\tthe last known coordinates of the cursor or user-interaction point in touch environments.\r\n* @public\r\n*/\r\ndispatcher.getPosition = function () {\r\n\treturn utils.clone(_xy);\r\n};\r\n\r\n\r\n/**\r\n* Key mapping feature: Adds a `keySymbol` property to key [events]{@glossary event},\r\n* based on a global key mapping. Use\r\n* [registerKeyMap()]{@link module:enyo/dispatcher.registerKeyMap} to add\r\n* keyCode-to-keySymbol mappings via a simple hash. This method may be called\r\n* multiple times from different libraries to mix different maps into the global\r\n* mapping table; if conflicts arise, the last-in wins.\r\n*\r\n* ```\r\n* dispatcher.registerKeyMap({\r\n* \t415 : 'play',\r\n* \t413 : 'stop',\r\n* \t19  : 'pause',\r\n* \t412 : 'rewind',\r\n* \t417 : 'fastforward'\r\n* });\r\n* ```\r\n*\r\n* @private\r\n*/\r\ndispatcher.features.push(function(e) {\r\n\tif ((e.type === 'keydown') || (e.type === 'keyup') || (e.type === 'keypress')) {\r\n\t\te.keySymbol = this.keyMap[e.keyCode];\r\n\t\t// Dispatch key events to be sent via Signals\r\n\t\tvar c = this.findDefaultTarget();\r\n\t\tif (e.dispatchTarget !== c) {\r\n\t\t\tthis.dispatchBubble(e, c);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nutils.mixin(dispatcher, {\r\n\tkeyMap: {},\r\n\tregisterKeyMap: function(map) {\r\n\t\tutils.mixin(this.keyMap, map);\r\n\t}\r\n});\r\n\r\n\r\n/**\r\n* Event modal capture feature. Capture events to a specific control via\r\n* [capture(inControl, inShouldForward)]{@linkcode module:enyo/dispatcher.capture};\r\n* release events via [release()]{@link module:enyo/dispatcher.release}.\r\n*\r\n* @private\r\n*/\r\ndispatcher.features.push(function(e) {\r\n\tif (this.captureTarget) {\r\n\t\tvar c = e.dispatchTarget;\r\n\t\tvar eventName = (e.customEvent ? '' : 'on') + e.type;\r\n\t\tvar handlerName = this.captureEvents[eventName];\r\n\t\tvar handlerScope = this.captureHandlerScope || this.captureTarget;\r\n\t\tvar handler = handlerName && handlerScope[handlerName];\r\n\t\tvar shouldCapture = handler && !(c && c.isDescendantOf && c.isDescendantOf(this.captureTarget));\r\n\t\tif (shouldCapture) {\r\n\t\t\tvar c1 = e.captureTarget = this.captureTarget;\r\n\t\t\t// NOTE: We do not want releasing capture while an event is being processed to alter\r\n\t\t\t// the way the event propagates. Therefore decide if the event should forward\r\n\t\t\t// before the capture target receives the event (since it may release capture).\r\n\t\t\te.preventDispatch = handler && handler.apply(handlerScope, [c1, e]) && !this.autoForwardEvents[e.type];\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//\r\n//        NOTE: This object is a plug-in; these methods should\r\n//        be called on `enyo/dispatcher`, and not on the plug-in itself.\r\n//\r\nutils.mixin(dispatcher, {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tautoForwardEvents: {leave: 1, resize: 1},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcaptures: [],\r\n\r\n\t/**\r\n\t* Captures [events]{@glossary event} for `inTarget`, where `inEvents` is specified as a\r\n\t* hash of event names mapped to callback handler names to be called on `inTarget` (or,\r\n\t* optionally, `inScope`). The callback is called when any of the captured events are\r\n\t* dispatched outside of the capturing control. Returning `true` from the callback stops\r\n\t* dispatch of the event to the original `dispatchTarget`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tcapture: function(inTarget, inEvents, inScope) {\r\n\t\tvar info = {target: inTarget, events: inEvents, scope: inScope};\r\n\t\tthis.captures.push(info);\r\n\t\tthis.setCaptureInfo(info);\r\n\t},\r\n\r\n\t/**\r\n\t* Removes the specified target from the capture list.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\trelease: function(inTarget) {\r\n\t\tfor (var i = this.captures.length - 1; i >= 0; i--) {\r\n\t\t\tif (this.captures[i].target === inTarget) {\r\n\t\t\t\tthis.captures.splice(i,1);\r\n\t\t\t\tthis.setCaptureInfo(this.captures[this.captures.length-1]);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the information for a captured {@glossary event}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tsetCaptureInfo: function(inInfo) {\r\n\t\tthis.captureTarget = inInfo && inInfo.target;\r\n\t\tthis.captureEvents = inInfo && inInfo.events;\r\n\t\tthis.captureHandlerScope = inInfo && inInfo.scope;\r\n\t}\r\n});\r\n\r\n\r\n(function () {\r\n\t/**\r\n\t* Dispatcher preview feature\r\n\t*\r\n\t* Allows {@link module:enyo/Control~Control} ancestors of the {@glossary event} target\r\n\t* a chance (eldest first) to react by implementing `previewDomEvent`.\r\n\t*\r\n\t* @todo Revisit how/if we document this\r\n\t* @private\r\n\t*/\r\n\tvar fn = 'previewDomEvent';\r\n\tvar preview = {\r\n\r\n\t\tfeature: function(e) {\r\n\t\t\tpreview.dispatch(e, e.dispatchTarget);\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* @returns {(Boolean|undefined)} Handlers return `true` to abort preview and prevent default\r\n\t\t*\tevent processing.\r\n\t\t*/\r\n\t\tdispatch: function(evt, control) {\r\n\t\t\tvar i, l,\r\n\t\t\tlineage = this.buildLineage(control);\r\n\t\t\tfor (i=0; (l=lineage[i]); i++) {\r\n\t\t\t\tif (l[fn] && l[fn](evt) === true) {\r\n\t\t\t\t\tevt.preventDispatch = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t* We ascend, making a list of Enyo [controls]{@link module:enyo/Control~Control}.\r\n\t\t*\r\n\t\t* Note that a control is considered to be its own ancestor.\r\n\t\t*/\r\n\t\tbuildLineage: function(control) {\r\n\t\t\tvar lineage = [],\r\n\t\t\t\tc = control;\r\n\t\t\twhile (c) {\r\n\t\t\t\tlineage.unshift(c);\r\n\t\t\t\tc = c.parent;\r\n\t\t\t}\r\n\t\t\treturn lineage;\r\n\t\t}\r\n\t};\r\n\r\n\tdispatcher.features.push(preview.feature);\r\n})();\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/UiComponent~UiComponent} kind.\r\n* @module enyo/UiComponent\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils'),\r\n\tmaster = require('./master');\r\n\r\nvar\r\n\tComponent = require('./Component');\r\n\r\n/**\r\n* The configurable options used by {@link module:enyo/UiComponent~UiComponent} when updating\r\n* components.\r\n*\r\n* @typedef {Object} enyo/UiComponent~UiComponent~UpdateComponentsOptions\r\n* @property {Boolean} [silent] - If `true`, component properties will be updated silently i.e. they\r\n*\twill be set directly, rather than via the generic `set` method.\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/UiComponent~UiComponent} implements a container strategy suitable for presentation layers.\r\n*\r\n* `UiComponent` itself is abstract. Concrete [subkinds]{@glossary subkind} include\r\n* {@link module:enyo/Control~Control} (for HTML/DOM) and\r\n* {@link module:canvas/Control~Control} (for Canvas contexts).\r\n*\r\n* @class UiComponent\r\n* @extends module:enyo/Component~Component\r\n* @public\r\n*/\r\nvar UiComponent = module.exports = kind(\r\n\t/** @lends module:enyo/UiComponent~UiComponent.prototype */ {\r\n\r\n\tname: 'enyo.UiComponent',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Component,\r\n\r\n\tstatics:\r\n\t\t/** @lends module:enyo/UiComponent~UiComponent */ {\r\n\r\n\t\t/**\r\n\t\t* The default set of keys which are effectively \"ignored\" when determining whether or not\r\n\t\t* the this control has changed in such a way that warrants a complete re-render. When\r\n\t\t* {@link module:enyo/UiComponent~UiComponent#updateComponents} is invoked on a parent\r\n\t\t* component, this set of stateful keys is utilized by default, if no stateful keys are\r\n\t\t* provided by us.\r\n\t\t*\r\n\t\t* @type {String[]}\r\n\t\t* @default ['content', active', 'disabled']\r\n\t\t* @private\r\n\t\t*/\r\n\t\tstatefulKeys: [\r\n\t\t\t'content',\r\n\t\t\t'active',\r\n\t\t\t'disabled'\r\n\t\t],\r\n\r\n\t\t/**\r\n\t\t* Finds static properties by walking up the inheritance chain, until the property is found.\r\n\t\t* By default this will return the property from {@link module:enyo/UiComponent} if the\r\n\t\t* property is not found anywhere along the chain.\r\n\t\t*\r\n\t\t* @param {module:enyo/kind} kind - The kind which we are attempting to retrieve the property\r\n\t\t*\tfrom; if the property is not found on this kind, its parent kind will be examined.\r\n\t\t* @param {String} prop - The property we are trying to retrieve.\r\n\t\t* @returns {String[]} The array of stateful key strings.\r\n\t\t* @public\r\n\t\t*/\r\n\t\tfindStatic: function (kind, prop) {\r\n\t\t\tif (kind) {\r\n\t\t\t\tif (kind[prop]) return kind[prop];\r\n\t\t\t\treturn UiComponent.findStatic(kind.kind, prop);\r\n\t\t\t} else {\r\n\t\t\t\treturn UiComponent[prop];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/UiComponent~UiComponent.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* The [UiComponent]{@link module:enyo/UiComponent~UiComponent} that physically contains this\r\n\t\t* [component]{@link module:enyo/Component~Component} in the DOM.\r\n\t\t*\r\n\t\t* @type {module:enyo/UiComponent~UiComponent}\r\n\t\t* @default null\r\n\t\t* @public\r\n\t\t*/\r\n\t\tcontainer: null,\r\n\r\n\t\t/**\r\n\t\t* The [UiComponent]{@link module:enyo/UiComponent~UiComponent} that owns this\r\n\t\t* [component]{@link module:enyo/Component~Component} for purposes of {@glossary event}\r\n\t\t* propagation.\r\n\t\t*\r\n\t\t* @type {module:enyo/UiComponent~UiComponent}\r\n\t\t* @default null\r\n\t\t* @public\r\n\t\t*/\r\n\t\tparent: null,\r\n\r\n\t\t/**\r\n\t\t* The [UiComponent]{@link module:enyo/UiComponent~UiComponent} that will physically contain new items added\r\n\t\t* by calls to [createComponent()]{@link module:enyo/UiComponent~UiComponent#createComponent}.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default 'client'\r\n\t\t* @public\r\n\t\t*/\r\n\t\tcontrolParentName: 'client',\r\n\r\n\t\t/**\r\n\t\t* A {@glossary kind} used to manage the size and placement of child\r\n\t\t* [components]{@link module:enyo/Component~Component}.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tlayoutKind: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tonresize: 'handleResize'\r\n\t},\r\n\r\n\t/**\r\n\t* When set, provides a [control]{@link module:enyo/Control~Control} reference used to indicate where a\r\n\t* newly-created [component]{@link module:enyo/Component~Component} should be added in the\r\n\t* [UiComponent's]{@link module:enyo/UiComponent~UiComponent} [array]{@glossary Array} of children. This is\r\n\t* typically used when creating children dynamically (rather than at design time). If set\r\n\t* to `null`, the new control will be added at the beginning of the array; if set to a\r\n\t* specific existing control, the new control will be added before the specified\r\n\t* control. If left as `undefined`, the default behavior is to add the new control\r\n\t* at the end of the array.\r\n\t*\r\n\t* @type {module:enyo/Control~Control}\r\n\t* @default undefined\r\n\t* @public\r\n\t*/\r\n\taddBefore: undefined,\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tthis.controls = this.controls || [];\r\n\t\t\tthis.children = this.children || [];\r\n\t\t\tthis.containerChanged();\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.layoutKindChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\t// Destroys all non-chrome controls (regardless of owner).\r\n\t\t\tthis.destroyClientControls();\r\n\t\t\t// Removes us from our container.\r\n\t\t\tthis.setContainer(null);\r\n\t\t\t// Destroys chrome controls owned by this.\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\timportProps: kind.inherit(function (sup) {\r\n\t\treturn function(inProps) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tif (!this.owner) {\r\n\t\t\t\tthis.owner = master;\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Creates [components]{@link module:enyo/Component~Component} as defined by the [arrays]{@glossary Array}\r\n\t* of base and additional property [hashes]{@glossary Object}. The standard and\r\n\t* additional property hashes are combined as described in\r\n\t* {@link module:enyo/Component~Component#createComponent}.\r\n\t*\r\n\t* ```\r\n\t* // ask foo to create components 'bar' and 'zot', but set the owner of\r\n\t* // both components to 'this'.\r\n\t* this.$.foo.createComponents([\r\n\t*\t{name: 'bar'},\r\n\t*\t{name: 'zot'}\r\n\t* ], {owner: this});\r\n\t* ```\r\n\t*\r\n\t* As implemented, [controlParentName]{@link module:enyo/UiComponent~UiComponent#controlParentName} only works\r\n\t* to identify an owned control created via `createComponents()`\r\n\t* (i.e., usually in our `components` block). To attach a `controlParent` via other means,\r\n\t* one must call [discoverControlParent()]{@link module:enyo/UiComponent~UiComponent#discoverControlParent} or\r\n\t* set `controlParent` directly.\r\n\t*\r\n\t* We could call `discoverControlParent()` in\r\n\t* [addComponent()]{@link module:enyo/Component~Component#addComponent}, but that would\r\n\t* cause a lot of useless checking.\r\n\t*\r\n\t* @param {Object[]} props The array of {@link module:enyo/Component~Component} definitions to be created.\r\n\t* @param {Object} ext - Additional properties to be supplied as defaults for each.\r\n\t* @returns {module:enyo/Component~Component[]} The array of components that were created.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\t//\r\n\tcreateComponents: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tvar results = sup.apply(this, arguments);\r\n\t\t\tthis.discoverControlParent();\r\n\t\t\treturn results;\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* An alternative component update path that attempts to intelligently update only the\r\n\t* relevant portions of the component which have changed.\r\n\t*\r\n\t* @param {Object[]} props - An array of kind definitions to be set as the child components of\r\n\t*\tthis component.\r\n\t* @param {Object} [ext] - Additional properties to be supplied as defaults for components, when\r\n\t*\tbeing created or recreated. These properties have no bearing on the diff computation of the\r\n\t*\tchild components.\r\n\t* @param {module:enyo/UiComponent~UpdateComponentsOptions} [opts] - Additional options for how\r\n\t*\tthe update operation should behave.\r\n\t* @returns {Boolean} - Whether or not the component should be re-rendered.\r\n\t* @wip\r\n\t* @public\r\n\t*/\r\n\tupdateComponents: function (props, ext, opts) {\r\n\t\tvar allStatefulKeys = {},\r\n\t\t\tisChanged = this.computeComponentsDiff(props, allStatefulKeys),\r\n\t\t\tprop, controls, control, keys, key, idxKey, idxProp, kind;\r\n\r\n\t\tif (isChanged) {\r\n\t\t\tthis.destroyClientControls();\r\n\t\t\tthis.createComponents(props, ext);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tcontrols = this.getClientControls();\r\n\t\t\tfor (idxProp = 0; idxProp < props.length; idxProp++) {\r\n\t\t\t\tprop = props[idxProp];\r\n\t\t\t\tcontrol = controls[idxProp];\r\n\t\t\t\tkind = prop.kind || this.defaultKind;\r\n\t\t\t\tkeys = allStatefulKeys[idxProp];\r\n\r\n\t\t\t\tfor (idxKey = 0; idxKey < keys.length; idxKey++) { // for each key, determine if there is a change\r\n\t\t\t\t\tkey = keys[idxKey];\r\n\t\t\t\t\tif (prop[key] != control[key]) {\r\n\t\t\t\t\t\tif (opts && opts.silent) control[key] = prop[key];\r\n\t\t\t\t\t\telse control.set(key, prop[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcomputeComponentsDiff: function (comps, allStatefulKeys) {\r\n\t\tvar hash = this.computeComponentsHash(comps, allStatefulKeys),\r\n\t\t\tisChanged = false;\r\n\r\n\t\tif (this._compHash) isChanged = this._compHash != hash;\r\n\t\telse isChanged = true;\r\n\r\n\t\tthis._compHash = hash;\r\n\r\n\t\treturn isChanged;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcomputeComponentsHash: function (comps, allStatefulKeys) {\r\n\t\tvar keyCount = 0,\r\n\t\t\thash, str, filtered, chr, len, idx;\r\n\r\n\t\t// http://jsperf.com/json-parse-and-iteration-vs-array-map\r\n\t\tfiltered = comps.map(this.bindSafely(function (comp, itemIdx) {\r\n\t\t\tvar kind = comp.kind || this.defaultKind,\r\n\t\t\t\tkeys = UiComponent.findStatic(kind, 'statefulKeys'),\r\n\t\t\t\tobjKeys = Object.keys(comp),\r\n\t\t\t\tobj = {},\r\n\t\t\t\tidx, key, value;\r\n\r\n\t\t\tallStatefulKeys[itemIdx] = keys; // cache statefulKeys\r\n\r\n\t\t\tfor (idx = 0; idx < objKeys.length; idx++) {\r\n\t\t\t\tkey = objKeys[idx];\r\n\r\n\t\t\t\tif (keys.indexOf(key) == -1) { // ignore stateful keys\r\n\t\t\t\t\tvalue = comp[key];\r\n\t\t\t\t\tif (typeof value == 'function') value = (value.prototype && value.prototype.kindName) || value.toString();\r\n\t\t\t\t\tobj[key] = value;\r\n\t\t\t\t\tkeyCount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn obj;\r\n\t\t}));\r\n\r\n\t\t// Adapted from http://stackoverflow.com/a/7616484\r\n\t\tstr = JSON.stringify(filtered) + keyCount;\r\n\t\thash = 0;\r\n\r\n\t\tfor (idx = 0, len = str.length; idx < len; idx++) {\r\n\t\t\tchr = str.charCodeAt(idx);\r\n\t\t\thash = ((hash << 5) - hash) + chr;\r\n\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t}\r\n\r\n\t\treturn hash;\r\n\t},\r\n\r\n\t/**\r\n\t* Determines and sets the current [control's]{@link module:enyo/Control~Control} parent.\r\n\t*\r\n\t* @protected\r\n\t*/\r\n\tdiscoverControlParent: function () {\r\n\t\tthis.controlParent = this.$[this.controlParentName] || this.controlParent;\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tadjustComponentProps: kind.inherit(function (sup) {\r\n\t\treturn function(inProps) {\r\n\t\t\t// Components we create have us as a container by default.\r\n\t\t\tinProps.container = inProps.container || this;\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Containment\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcontainerChanged: function (container) {\r\n\t\tif (container) {\r\n\t\t\tcontainer.removeControl(this);\r\n\t\t}\r\n\t\tif (this.container) {\r\n\t\t\tthis.container.addControl(this, this.addBefore);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Parentage\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tparentChanged: function (oldParent) {\r\n\t\tif (oldParent && oldParent != this.parent) {\r\n\t\t\toldParent.removeChild(this);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether the [control]{@link module:enyo/Control~Control} is a descendant of\r\n\t* another control.\r\n\t*\r\n\t* Note: Oddly, a control is considered to be a descendant of itself.\r\n\t*\r\n\t* @method\r\n\t* @param {module:enyo/Control~Control} ancestor - The [control]{@link module:enyo/Control~Control} whose lineage\r\n\t*\twill be checked to determine whether the current control is a descendant.\r\n\t* @public\r\n\t*/\r\n\tisDescendantOf: function (ancestor) {\r\n\t\tvar p = this;\r\n\t\twhile (p && p!=ancestor) {\r\n\t\t\tp = p.parent;\r\n\t\t}\r\n\t\treturn ancestor && (p === ancestor);\r\n\t},\r\n\r\n\t/**\r\n\t* Returns all controls.\r\n\t*\r\n\t* @method\r\n\t* @returns {module:enyo/Control~Control[]} An [array]{@glossary Array} of [controls]{@link module:enyo/Control~Control}.\r\n\t* @public\r\n\t*/\r\n\tgetControls: function () {\r\n\t\treturn this.controls;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns all non-chrome controls.\r\n\t*\r\n\t* @method\r\n\t* @returns {module:enyo/Control~Control[]} An [array]{@glossary Array} of [controls]{@link module:enyo/Control~Control}.\r\n\t* @public\r\n\t*/\r\n\tgetClientControls: function () {\r\n\t\tvar results = [];\r\n\t\tfor (var i=0, cs=this.controls, c; (c=cs[i]); i++) {\r\n\t\t\tif (!c.isChrome) {\r\n\t\t\t\tresults.push(c);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn results;\r\n\t},\r\n\r\n\t/**\r\n\t* Destroys \"client controls\", the same set of [controls]{@link module:enyo/Control~Control} returned by\r\n\t* [getClientControls()]{@link module:enyo/UiComponent~UiComponent#getClientControls}.\r\n\t*\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tdestroyClientControls: function () {\r\n\t\tvar c$ = this.getClientControls();\r\n\t\tfor (var i=0, c; (c=c$[i]); i++) {\r\n\t\t\tc.destroy();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\taddControl: function (ctl, before) {\r\n\t\t// Called to add an already created control to the object's control list. It is\r\n\t\t// not used to create controls and should likely not be called directly.\r\n\t\t// It can be overridden to detect when controls are added.\r\n\t\tif (before !== undefined) {\r\n\t\t\tvar idx = (before === null) ? 0 : this.indexOfControl(before);\r\n\t\t\tthis.controls.splice(idx, 0, ctl);\r\n\t\t} else {\r\n\t\t\tthis.controls.push(ctl);\r\n\t\t}\r\n\t\t// When we add a Control, we also establish a parent.\r\n\t\tthis.addChild(ctl, before);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tremoveControl: function (ctl) {\r\n\t\t// Called to remove a control from the object's control list. As with addControl it\r\n\t\t// can be overridden to detect when controls are removed.\r\n\t\t// When we remove a Control, we also remove it from its parent.\r\n\t\tctl.setParent(null);\r\n\t\treturn utils.remove(ctl, this.controls);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tindexOfControl: function (ctl) {\r\n\t\treturn utils.indexOf(ctl, this.controls);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tindexOfClientControl: function (ctl) {\r\n\t\treturn utils.indexOf(ctl, this.getClientControls());\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tindexInContainer: function () {\r\n\t\treturn this.container.indexOfControl(this);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tclientIndexInContainer: function () {\r\n\t\treturn this.container.indexOfClientControl(this);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcontrolAtIndex: function (idx) {\r\n\t\treturn this.controls[idx];\r\n\t},\r\n\r\n\t/**\r\n\t* Determines what the following sibling [control]{@link module:enyo/Control~Control} is for the current\r\n\t* [control]{@link module:enyo/Control~Control}.\r\n\t*\r\n\t* @method\r\n\t* @returns {module:enyo/Control~Control | null} The [control]{@link module:enyo/Control~Control} that is the] following\r\n\t*\tsibling. If no following sibling exists, we return `null`.\r\n\t* @public\r\n\t*/\r\n\tgetNextControl: function () {\r\n\t\tvar comps = this.getParent().children,\r\n\t\t\tcomp,\r\n\t\t\tsibling,\r\n\t\t\ti;\r\n\r\n\t\tfor (i = comps.length - 1; i >= 0; i--) {\r\n\t\t\tcomp = comps[i];\r\n\t\t\tif (comp === this) return sibling ? sibling : null;\r\n\t\t\tif (comp.generated) sibling = comp;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/**\r\n\t* Children\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\taddChild: function (child, before) {\r\n\t\t// if before is undefined, add to the end of the child list.\r\n\t\t// If it's null, add to front of list, otherwise add before the\r\n\t\t// specified control.\r\n\t\t//\r\n\t\t// allow delegating the child to a different container\r\n\t\tif (this.controlParent /*&& !child.isChrome*/) {\r\n\t\t\t// this.controlParent might have a controlParent, and so on; seek the ultimate parent\r\n\t\t\tthis.controlParent.addChild(child, before);\r\n\t\t} else {\r\n\t\t\t// NOTE: addChild drives setParent.\r\n\t\t\t// It's the opposite for setContainer, where containerChanged (in Containable)\r\n\t\t\t// drives addControl.\r\n\t\t\t// Because of the way 'parent' is derived from 'container', this difference is\r\n\t\t\t// helpful for implementing controlParent.\r\n\t\t\t// By the same token, since 'parent' is derived from 'container', setParent is\r\n\t\t\t// not intended to be called by client code. Therefore, the lack of parallelism\r\n\t\t\t// should be private to this implementation.\r\n\t\t\t// Set the child's parent property to this\r\n\t\t\tchild.setParent(this);\r\n\t\t\t// track in children array\r\n\t\t\tif (before !== undefined) {\r\n\t\t\t\tvar idx = (before === null) ? 0 : this.indexOfChild(before);\r\n\t\t\t\tthis.children.splice(idx, 0, child);\r\n\t\t\t} else {\r\n\t\t\t\tthis.children.push(child);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tremoveChild: function (child) {\r\n\t\treturn utils.remove(child, this.children);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tindexOfChild: function (child) {\r\n\t\treturn utils.indexOf(child, this.children);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tlayoutKindChanged: function () {\r\n\t\tif (this.layout) {\r\n\t\t\tthis.layout.destroy();\r\n\t\t}\r\n\t\tthis.layout = kind.createFromKind(this.layoutKind, this);\r\n\t\tif (this.generated) {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tflow: function () {\r\n\t\tif (this.layout) {\r\n\t\t\tthis.layout.flow();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* CAVEAT: currently we use the entry point for both post-render layout work *and*\r\n\t* post-resize layout work.\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\treflow: function () {\r\n\t\tif (this.layout) {\r\n\t\t\tthis.layout.reflow();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Call after this [control]{@link module:enyo/Control~Control} has been resized to allow it to process the\r\n\t* size change. To respond to a resize, override `handleResize()` instead. Acts as syntactic\r\n\t* sugar for `waterfall('onresize')`.\r\n\t*\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tresize: function () {\r\n\t\tthis.waterfall('onresize');\r\n\t\tthis.waterfall('onpostresize');\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\thandleResize: function () {\r\n\t\t// FIXME: once we are in the business of reflowing layouts on resize, then we have an\r\n\t\t// inside/outside problem: some scenarios will need to reflow before child\r\n\t\t// controls reflow, and some will need to reflow after. Even more complex scenarios\r\n\t\t// have circular dependencies, and can require multiple passes or other resolution.\r\n\t\t// When we can rely on CSS to manage reflows we do not have these problems.\r\n\t\tthis.reflow();\r\n\t},\r\n\r\n\t/**\r\n\t* Sends a message to all of my descendants, but not myself. You can stop a\r\n\t* [waterfall]{@link module:enyo/Component~Component#waterfall} into [components]{@link module:enyo/Component~Component}\r\n\t* owned by a receiving [object]{@glossary Object} by returning a truthy value from the\r\n\t* {@glossary event} [handler]{@link module:enyo/Component~Component~EventHandler}.\r\n\t*\r\n\t* @method\r\n\t* @param {String} nom - The name of the {@glossary event}.\r\n\t* @param {Object} [event] - The event object to pass along.\r\n\t* @param {module:enyo/Component~Component} [sender=this] - The event's originator.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\twaterfallDown: function (nom, event, sender) {\r\n\t\tevent = event || {};\r\n\t\t// Note: Controls will generally be both in a $ hash and a child list somewhere.\r\n\t\t// Attempt to avoid duplicated messages by sending only to components that are not\r\n\t\t// UiComponent, as those components are guaranteed not to be in a child list.\r\n\t\t// May cause a problem if there is a scenario where a UiComponent owns a pure\r\n\t\t// Component that in turn owns Controls.\r\n\t\t//\r\n\t\t// waterfall to all pure components\r\n\t\tfor (var n in this.$) {\r\n\t\t\tif (!(this.$[n] instanceof UiComponent)) {\r\n\t\t\t\tthis.$[n].waterfall(nom, event, sender);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// waterfall to my children\r\n\t\tfor (var i=0, cs=this.children, c; (c=cs[i]); i++) {\r\n\t\t\tc.waterfall(nom, event, sender);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tgetBubbleTarget: function (nom, event) {\r\n\t\tif (event.delegate) return this.owner;\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\tthis.bubbleTarget\r\n\t\t\t\t|| (this.cachedBubble && this.cachedBubbleTarget[nom])\r\n\t\t\t\t|| this.parent\r\n\t\t\t\t|| this.owner\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tbubbleTargetChanged: function (was) {\r\n\t\tif (was && this.cachedBubble && this.cachedBubbleTarget) {\r\n\t\t\tfor (var n in this.cachedBubbleTarget) {\r\n\t\t\t\tif (this.cachedBubbleTarget[n] === was) delete this.cachedBubbleTarget[n];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n","/**\r\n* Mixin for adding WAI-ARIA attributes to controls\r\n*\r\n* @module enyo/AccessibilitySupport\r\n*/\r\n\r\nvar\r\n\tdispatcher = require('../dispatcher'),\r\n\tkind = require('../kind'),\r\n\tplatform = require('../platform'),\r\n\tutils = require('../utils');\r\n\r\nvar defaultObservers = [\r\n\t{from: 'accessibilityDisabled', method: function () {\r\n\t\tthis.setAriaAttribute('aria-hidden', this.accessibilityDisabled ? 'true' : null);\r\n\t}},\r\n\t{from: 'accessibilityLive', method: function () {\r\n\t\tvar live = this.accessibilityLive === true && 'assertive' || this.accessibilityLive || null;\r\n\t\tthis.setAriaAttribute('aria-live', live);\r\n\t}},\r\n\t{path: ['accessibilityAlert', 'accessibilityRole'], method: function () {\r\n\t\tvar role = this.accessibilityAlert && 'alert' || this.accessibilityRole || null;\r\n\t\tthis.setAriaAttribute('role', role);\r\n\t}},\r\n\t{path: ['content', 'accessibilityHint', 'accessibilityLabel', 'tabIndex'], method: function () {\r\n\t\tvar focusable = this.accessibilityLabel || this.content || this.accessibilityHint || false,\r\n\t\t\tprefix = this.accessibilityLabel || this.content || null,\r\n\t\t\tlabel = this.accessibilityHint && prefix && (prefix + ' ' + this.accessibilityHint) ||\r\n\t\t\t\t\tthis.accessibilityHint ||\r\n\t\t\t\t\tthis.accessibilityLabel ||\r\n\t\t\t\t\tnull;\r\n\r\n\t\tthis.setAriaAttribute('aria-label', label);\r\n\r\n\t\t// A truthy or zero tabindex will be set directly\r\n\t\tif (this.tabIndex || this.tabIndex === 0) {\r\n\t\t\tthis.setAriaAttribute('tabindex', this.tabIndex);\r\n\t\t}\r\n\t\t// The webOS browser will only read nodes with a non-null tabindex so if the node has\r\n\t\t// readable content, make it programmably focusable.\r\n\t\telse if (focusable && this.tabIndex === undefined && platform.webos) {\r\n\t\t\tthis.setAriaAttribute('tabindex', -1);\r\n\t\t}\r\n\t\t// Otherwise, remove it\r\n\t\telse {\r\n\t\t\tthis.setAriaAttribute('tabindex', null);\r\n\t\t}\r\n\t}}\r\n];\r\n\r\n/**\r\n* Prevents browser-initiated scrolling of contained controls into view when\r\n* those controls are explicitly focused.\r\n*\r\n* @private\r\n*/\r\nfunction preventScroll (node, rtl) {\r\n\tif (node) {\r\n\t\tdispatcher.listen(node, 'scroll', function () {\r\n\t\t\tnode.scrollTop = 0;\r\n\t\t\t// TODO: This probably won't work cross-browser, as the different\r\n\t\t\t// browser engines appear to treat scrollLeft differently in RTL.\r\n\t\t\t// See ENYO-2841.\r\n\t\t\tnode.scrollLeft = rtl ? node.scrollWidth : 0;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction updateAriaAttributes (all) {\r\n\tvar i, l, obs;\r\n\r\n\tfor (i = 0, l = this._ariaObservers.length; i < l; i++) {\r\n\t\tobs = this._ariaObservers[i];\r\n\t\tif ((all || obs.pending) && obs.method) {\r\n\t\t\tobs.method();\r\n\t\t\tobs.pending = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction registerAriaUpdate (obj) {\r\n\tvar fn;\r\n\tif (!obj.pending) {\r\n\t\tobj.pending = true;\r\n\t\tfn = this.bindSafely(updateAriaAttributes);\r\n\t\tif (!this.accessibilityDefer) {\r\n\t\t\tfn();\r\n\t\t} else {\r\n\t\t\tthis.startJob('updateAriaAttributes', fn, 16);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction toAriaAttribute (from, to) {\r\n\tvar value = this[from];\r\n\tthis.setAriaAttribute(to, value === undefined ? null : value);\r\n}\r\n\r\nfunction staticToAriaAttribute (to, value) {\r\n\tthis.setAriaAttribute(to, value);\r\n}\r\n\r\nfunction initAriaObservers (control) {\r\n\tvar conf = control._ariaObservers,\r\n\t\ti, l, fn;\r\n\r\n\tcontrol._ariaObservers = [];\r\n\tfor (i = 0, l = defaultObservers.length; i < l; i++) {\r\n\t\tinitAriaObserver(control, defaultObservers[i]);\r\n\t}\r\n\tif (conf) {\r\n\t\tfor (i = 0, l = conf.length; i < l; i++) {\r\n\t\t\tinitAriaObserver(control, conf[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t// setup disabled observer and kickoff first run of observers\r\n\tfn = updateAriaAttributes.bind(control, true);\r\n\tcontrol.addObserver('accessibilityDisabled', fn);\r\n\tfn();\r\n}\r\n\r\nfunction initAriaObserver (control, c) {\r\n\tvar\r\n\t\t// path can either source from 'path' or 'from' (for binding-style configs)\r\n\t\tpath = c.path || c.from,\r\n\r\n\t\t// method is either:\r\n\t\t// \t\t'method', if it exists, or\r\n\t\t// \t\tstaticToAriaAttribute if 'to' and 'value' exist - static binding-style config, or\r\n\t\t// \t\ttoAriaAttribute if a 'to' path exists - binding-style config\r\n\t\tmethod = c.method && control.bindSafely(c.method) ||\r\n\t\t\t\t!path && c.to && c.value !== undefined && control.bindSafely(staticToAriaAttribute, c.to, c.value) ||\r\n\t\t\t\tc.to && control.bindSafely(toAriaAttribute, path, c.to) ||\r\n\t\t\t\tnull,\r\n\r\n\t\t// import the relevant and pre-validated parts into the instance-level config\r\n\t\tconfig = {\r\n\t\t\tpath: path,\r\n\t\t\tmethod: method,\r\n\t\t\tpending: false\r\n\t\t},\r\n\r\n\t\t// pre-bind the register method as it's used multiple times when 'path' is an array\r\n\t\tfn = registerAriaUpdate.bind(control, config),\r\n\r\n\t\t// iterator\r\n\t\tl;\r\n\r\n\tcontrol._ariaObservers.push(config);\r\n\tif (utils.isArray(path)) {\r\n\t\tfor (l = path.length - 1; l >= 0; --l) {\r\n\t\t\tcontrol.addObserver(path[l], fn);\r\n\t\t}\r\n\t}\r\n\telse if (path) {\r\n\t\tcontrol.addObserver(path, fn);\r\n\t}\r\n}\r\n\r\n/**\r\n* @mixin\r\n*/\r\nvar AccessibilitySupport = {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.AccessibilitySupport',\r\n\r\n\t/**\r\n\t* `accessibilityLabel` is used for accessibility voice readout. If\r\n\t* `accessibilityLabel` is set, the screen reader will read the label when the\r\n\t* control is focused.\r\n\t*\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\taccessibilityLabel: '',\r\n\r\n\t/**\r\n\t* `accessibilityHint` is used to provide additional information regarding the\r\n\t* control. If `accessibilityHint` is set, the screen reader will read the\r\n\t* hint content when the control is focused.\r\n\t*\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\taccessibilityHint: '',\r\n\r\n\t/**\r\n\t* The `role` of the control. May be superseded by a truthy `accessibilityAlert` value.\r\n\t*\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\taccessibilityRole: '',\r\n\r\n\t/**\r\n\t* `accessibilityAlert` affects the handling of alert message or page\r\n\t* description content. If `true`, aria role will be set to \"alert\" and the\r\n\t* screen reader will automatically read the content of `accessibilityLabel`,\r\n\t* regardless of focus state; if `false` (the default), the label will be read\r\n\t* when the control receives focus. Note that if you use `accessibilityAlert`,\r\n\t* the previous role will be replaced with \"alert\" role.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\taccessibilityAlert: false,\r\n\r\n\t/**\r\n\t* `accessibilityLive` affects the handling of dynamic content that updates\r\n\t* without a page reload. If `true`, the screen reader will read the content of\r\n\t* `accessibilityLabel` when the content changes; if `false` (the default), the\r\n\t* label will be read when the control gains focus.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\taccessibilityLive: false,\r\n\r\n\t/**\r\n\t* `accessibilityDisabled` is used to prevent voice readout. If `true`, the\r\n\t* screen reader will not read the label for the control. Note that this is not\r\n\t* working on HTML form elements which can get focus without tabindex.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\taccessibilityDisabled: false,\r\n\r\n\t/**\r\n\t* When `true`, `onscroll` events will be observed and scrolling will be\r\n\t* prevented by resetting the node's `scrollTop` and `scrollLeft` values. This\r\n\t* prevents inadvertent layout issues introduced by the browser's scrolling\r\n\t* contained controls into view when focused.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\taccessibilityPreventScroll: false,\r\n\r\n\t/**\r\n\t* The `tabindex` of the control. When `undefined` on webOS, it will be set to\r\n\t* `-1` to enable screen reading. A value of `null` (or `undefined` on\r\n\t* non-webOS) ensures that no `tabindex` will be set.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default undefined\r\n\t* @public\r\n\t*/\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function (props) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tinitAriaObservers(this);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* If `accessibilityDisabled` is `false`, sets the specified node attribute;\r\n\t* otherwise, removes it.\r\n\t*\r\n\t* @param {String} name  Attribute name\r\n\t* @param {String} value Attribute value\r\n\t* @public\r\n\t*/\r\n\tsetAriaAttribute: function (name, value) {\r\n\t\t// if the control is disabled, don't set any aria properties except aria-hidden\r\n\t\tif (this.accessibilityDisabled && name != 'aria-hidden') {\r\n\t\t\tvalue = null;\r\n\t\t}\r\n\t\t// if the value is defined and non-null, cast it to a String\r\n\t\telse if (value !== undefined && value !== null) {\r\n\t\t\tvalue = String(value);\r\n\t\t}\r\n\t\t// prevent invalidating attributes unnecessarily by checking current value first. avoids\r\n\t\t// resetting values on alert-able properties (e.g. aria-valuenow).\r\n\t\tif (this.getAttribute(name) !== value) {\r\n\t\t\tthis.setAttribute(name, value);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tif (this.accessibilityPreventScroll) {\r\n\t\t\t\tpreventScroll(this.hasNode(), this.rtl);\r\n\t\t\t}\r\n\t\t};\r\n\t})\r\n};\r\n\r\nvar sup = kind.concatHandler;\r\nkind.concatHandler = function (ctor, props, instance) {\r\n\tsup.call(this, ctor, props, instance);\r\n\r\n\tvar proto = ctor.prototype || ctor,\r\n\t\tariaObservers = proto._ariaObservers && proto._ariaObservers.slice(),\r\n\t\tincoming = props.ariaObservers;\r\n\r\n\tif (incoming && incoming instanceof Array) {\r\n\t\tif (ariaObservers) {\r\n\t\t\tariaObservers.push.apply(ariaObservers, incoming);\r\n\t\t} else {\r\n\t\t\tariaObservers = incoming.slice();\r\n\t\t}\r\n\t}\r\n\r\n\tproto._ariaObservers = ariaObservers;\r\n};\r\n\r\nmodule.exports = AccessibilitySupport;","var\r\n\tdispatcher = require('../dispatcher'),\r\n\tutils = require('../utils'),\r\n\tready = require('../ready'),\r\n\tSignals = require('../Signals');\r\n\r\n/**\r\n* Normalizes and provides fullscreen support for [controls]{@link module:enyo/Control~Control},\r\n* based on the [fullscreen]{@glossary fullscreen} API.\r\n*\r\n* @module enyo/Control/fullscreen\r\n* @public\r\n*/\r\nmodule.exports = function (Control) {\r\n\tvar floatingLayer = Control.floatingLayer;\r\n\tvar fullscreen = {\r\n\t\t\r\n\t\t/**\r\n\t\t* Reference to the current fullscreen [control]{@link module:enyo/Control~Control}.\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\tfullscreenControl: null,\r\n\r\n\t\t/**\r\n\t\t* Reference to the current fullscreen element (fallback for platforms\r\n\t\t* without native support).\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\tfullscreenElement: null,\r\n\r\n\t\t/** \r\n\t\t* Reference to that [control]{@link module:enyo/Control~Control} that requested fullscreen.\r\n\t\t* \r\n\t\t* @private\r\n\t\t*/\r\n\t\trequestor: null,\r\n\r\n\t\t/** \r\n\t\t* Native accessor used to get reference to the current fullscreen element.\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\telementAccessor:\r\n\t\t\t('fullscreenElement' in document) ? 'fullscreenElement' :\r\n\t\t\t('mozFullScreenElement' in document) ? 'mozFullScreenElement' :\r\n\t\t\t('webkitFullscreenElement' in document) ? 'webkitFullscreenElement' :\r\n\t\t\tnull,\r\n\r\n\t\t/** \r\n\t\t* Native accessor used to request fullscreen.\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\trequestAccessor:\r\n\t\t\t('requestFullscreen' in document.documentElement) ? 'requestFullscreen' :\r\n\t\t\t('mozRequestFullScreen' in document.documentElement) ? 'mozRequestFullScreen' :\r\n\t\t\t('webkitRequestFullscreen' in document.documentElement) ? 'webkitRequestFullscreen' :\r\n\t\t\tnull,\r\n\r\n\t\t/** \r\n\t\t* Native accessor used to cancel fullscreen.\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\tcancelAccessor:\r\n\t\t\t('cancelFullScreen' in document) ? 'cancelFullScreen' :\r\n\t\t\t('mozCancelFullScreen' in document) ? 'mozCancelFullScreen' :\r\n\t\t\t('webkitCancelFullScreen' in document) ? 'webkitCancelFullScreen' :\r\n\t\t\tnull,\r\n\r\n\t\t/**\r\n\t\t* Determines whether the platform supports the [fullscreen]{@glossary fullscreen} API.\r\n\t\t* \r\n\t\t* @returns {Boolean} Returns `true` if platform supports all of the \r\n\t\t*\t[fullscreen]{@glossary fullscreen} API, `false` otherwise.\r\n\t\t* @public\r\n\t\t*/\r\n\t\tnativeSupport: function() {\r\n\t\t\treturn (this.elementAccessor !== null && this.requestAccessor !== null && this.cancelAccessor !== null);\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t* Normalizes `getFullscreenElement()`.\r\n\t\t*\r\n\t\t* @public\r\n\t\t*/\r\n\t\tgetFullscreenElement: function() {\r\n\t\t\treturn (this.nativeSupport()) ? document[this.elementAccessor] : this.fullscreenElement;\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t* Returns current fullscreen [control]{@link module:enyo/Control~Control}.\r\n\t\t*\r\n\t\t* @public\r\n\t\t*/\r\n\t\tgetFullscreenControl: function() {\r\n\t\t\treturn this.fullscreenControl;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Normalizes `requestFullscreen()`.\r\n\t\t*\r\n\t\t* @public\r\n\t\t*/\r\n\t\trequestFullscreen: function(ctl) {\r\n\t\t\tif (this.getFullscreenControl() || !(ctl.hasNode())) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.requestor = ctl;\r\n\r\n\t\t\t// Only use native request if platform supports all of the API\r\n\t\t\tif (this.nativeSupport()) {\r\n\t\t\t\tctl.hasNode()[this.requestAccessor]();\r\n\t\t\t} else {\r\n\t\t\t\tthis.fallbackRequestFullscreen();\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t* Normalizes `cancelFullscreen()`.\r\n\t\t*\r\n\t\t* @public\r\n\t\t*/\r\n\t\tcancelFullscreen: function() {\r\n\t\t\tif (this.nativeSupport()) {\r\n\t\t\t\tdocument[this.cancelAccessor]();\r\n\t\t\t} else {\r\n\t\t\t\tthis.fallbackCancelFullscreen();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t* Fallback support for setting fullscreen element (done by browser on platforms with\r\n\t\t* native support).\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\tsetFullscreenElement: function(node) {\r\n\t\t\tthis.fullscreenElement = node;\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t* Sets current fullscreen [control]{@link module:enyo/Control~Control}.\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\tsetFullscreenControl: function(ctl) {\r\n\t\t\tthis.fullscreenControl = ctl;\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t* Fallback fullscreen request for platforms without fullscreen support.\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\tfallbackRequestFullscreen: function() {\r\n\t\t\tvar control = this.requestor;\r\n\r\n\t\t\tif (!control) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Get before node to allow us to exit floating layer to the proper position\r\n\t\t\tcontrol.prevAddBefore = control.parent.controlAtIndex(control.indexInContainer() + 1);\r\n\r\n\t\t\t// Render floating layer if we need to\r\n\t\t\tif (!floatingLayer.hasNode()) {\r\n\t\t\t\tfloatingLayer.render();\r\n\t\t\t}\r\n\r\n\t\t\tcontrol.addClass('enyo-fullscreen');\r\n\t\t\tcontrol.appendNodeToParent(floatingLayer.hasNode());\r\n\t\t\tcontrol.resize();\r\n\r\n\t\t\tthis.setFullscreenControl(control);\r\n\t\t\tthis.setFullscreenElement(control.hasNode());\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t* Fallback cancel fullscreen for platforms without fullscreen support.\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\tfallbackCancelFullscreen: function() {\r\n\t\t\tvar control = this.fullscreenControl,\r\n\t\t\t\tbeforeNode,\r\n\t\t\t\tparentNode\r\n\t\t\t;\r\n\r\n\t\t\tif (!control) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Find beforeNode based on _this.addBefore_ and _this.prevAddBefore_\r\n\t\t\tbeforeNode = (control.prevAddBefore) ? control.prevAddBefore.hasNode() : null;\r\n\t\t\tparentNode = control.parent.hasNode();\r\n\t\t\tcontrol.prevAddBefore = null;\r\n\r\n\t\t\tcontrol.removeClass('enyo-fullscreen');\r\n\r\n\t\t\tif (!beforeNode) {\r\n\t\t\t\tcontrol.appendNodeToParent(parentNode);\r\n\t\t\t} else {\r\n\t\t\t\tcontrol.insertNodeInParent(parentNode, beforeNode);\r\n\t\t\t}\r\n\r\n\t\t\tcontrol.resize();\r\n\r\n\t\t\tthis.setFullscreenControl(null);\r\n\t\t\tthis.setFullscreenElement(null);\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t* Listens for fullscreen change {@glossary event} and broadcasts it as a\r\n\t\t* normalized event.\r\n\t\t*\r\n\t\t* @private\r\n\t\t*/\r\n\t\tdetectFullscreenChangeEvent: function() {\r\n\t\t\tthis.setFullscreenControl(this.requestor);\r\n\t\t\tthis.requestor = null;\r\n\r\n\t\t\t// Broadcast change\r\n\t\t\tSignals.send('onFullscreenChange');\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t* Normalizes platform-specific fullscreen change [events]{@glossary event}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tready(function() {\r\n\t\tdocument.addEventListener('webkitfullscreenchange', utils.bind(fullscreen, 'detectFullscreenChangeEvent'), false);\r\n\t\tdocument.addEventListener('mozfullscreenchange',    utils.bind(fullscreen, 'detectFullscreenChangeEvent'), false);\r\n\t\tdocument.addEventListener('fullscreenchange',       utils.bind(fullscreen, 'detectFullscreenChangeEvent'), false);\r\n\t});\r\n\r\n\t/**\r\n\t* If this platform doesn't have native support for fullscreen, add an escape handler to mimic \r\n\t* native behavior.\r\n\t*/\r\n\tif(!fullscreen.nativeSupport()) {\r\n\t\tdispatcher.features.push(\r\n\t\t\tfunction(e) {\r\n\t\t\t\tif (e.type === 'keydown' && e.keyCode === 27) {\r\n\t\t\t\t\tfullscreen.cancelFullscreen();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn fullscreen;\r\n};","var\r\n\tdispatcher = require('../dispatcher'),\r\n\tutils = require('../utils');\r\n\r\nvar\r\n\tgestureUtil = require('./util');\r\n\r\n/**\r\n* Enyo supports a cross-platform set of drag [events]{@glossary event}. These\r\n* events allow users to write a single set of event handlers for applications\r\n* that run on both mobile and desktop platforms.\r\n*\r\n* The following events are provided:\r\n*\r\n* * 'dragstart'\r\n* * 'dragfinish'\r\n* * 'drag'\r\n* * 'drop'\r\n* * 'dragover'\r\n* * 'dragout'\r\n* * 'hold'\r\n* * 'release'\r\n* * 'holdpulse'\r\n* * 'flick'\r\n*\r\n* For more information on these events, see the documentation on\r\n* [Event Handling]{@linkplain $dev-guide/key-concepts/event-handling.html} in\r\n* the Enyo Developer Guide.\r\n*\r\n* Used internally by {@link module:enyo/gesture}\r\n*\r\n* @module enyo/gesture/drag\r\n* @public\r\n*/\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tholdPulseDefaultConfig: {\r\n\t\tfrequency: 200,\r\n\t\tevents: [{name: 'hold', time: 200}],\r\n\t\tresume: false,\r\n\t\tpreventTap: false,\r\n\t\tmoveTolerance: 16,\r\n\t\tendHold: 'onMove'\r\n\t},\r\n\r\n\t/**\r\n\t* Call this method to specify the framework's 'holdPulse' behavior, which\r\n\t* determines the nature of the events generated when a user presses and holds\r\n\t* on a user interface element.\r\n\t*\r\n\t* By default, an `onhold` event fires after 200 ms. After that, an `onholdpulse`\r\n\t* event fires every 200 ms until the user stops holding, at which point a\r\n\t* `onrelease` event fires.\r\n\t*\r\n\t* To change the default behavior, call this method and pass it a holdPulse\r\n\t* configuration object. The holdPulse configuration object has a number of\r\n\t* properties.\r\n\t*\r\n\t* You can specify a set of custom hold events by setting the `events` property\r\n\t* to an array containing one or more objects. Each object specifies a custom\r\n\t* hold event, in the form of a `name` / `time` pair. Notes:\r\n\t*\r\n\t*  * Your custom event names should not include the 'on' prefix; that will be\r\n\t*    added automatically by the framework.\r\n\t*\r\n\t*  * Times should be specified in milliseconds.\r\n\t*\r\n\t*  * Your `events` array overrides the framework defaults entirely, so if you\r\n\t*    want the standard `hold` event to fire at 200 ms (in addition to whatever\r\n\t*    custom events you define), you'll need to redefine it yourself as part of\r\n\t*    your `events` array.\r\n\t*\r\n\t* Regardless of how many custom hold events you define, `onholdpulse` events\r\n\t* will start firing after the first custom hold event fires, and continue until\r\n\t* the user stops holding. Likewise, only one `onrelease` event will fire,\r\n\t* regardless of how many custom hold events you define.\r\n\t*\r\n\t* The`frequency` parameter determines not only how often `holdpulse` events are\r\n\t* sent, but the frequency with which the hold duration is measured. This means\r\n\t* that the value you set for `frequency` should always be a common factor of the\r\n\t* times you set for your custom hold events, to ensure accurate event timing.\r\n\t*\r\n\t* You can use the `endHold` property to specify the circumstances under which a\r\n\t* hold is considered to end. Set `endHold` to `onMove` (the default) if you want\r\n\t* the hold to end as soon as the user's finger or pointer moves. Set `endHold`\r\n\t* to `onLeave` if you want the hold to end only when the finger or pointer\r\n\t* leaves the element altogether. When specifying `onMove`, you can also provide\r\n\t* a `moveTolerance` value (default: `16`) that determines how tolerant you want\r\n\t* to be of small movements when deciding whether a hold has ended. The higher\r\n\t* the value, the further a user's finger or pointer may move without causing\r\n\t* the hold to end.\r\n\t*\r\n\t* The `resume` parameter (default: `false`) specifies whether a hold\r\n\t* that has ended due to finger / pointer movement should be resumed if the\r\n\t* user's finger or pointer moves back inside the tolerance threshold (in the\r\n\t* case of `endHold: onMove`) or back over the element (in the case of\r\n\t* `endHold: onLeave`).\r\n\t*\r\n\t* Finally, the `preventTap` paramenter (default: `false`) allows you to prevent\r\n\t* an `ontap` event from firing when the hold is released.\r\n\t*\r\n\t* Here is an example:\r\n\t*\r\n\t* ```\r\n\t* gesture.drag.configureHoldPulse({\r\n\t*     frequency: 100,\r\n\t*     events: [\r\n\t*         {name: 'hold', time: 200},\r\n\t*         {name: 'longpress', time: 500}\r\n\t*     ],\r\n\t*     endHold: 'onLeave',\r\n\t*     resume: true,\r\n\t*     preventTap: true\r\n\t* });\r\n\t* ```\r\n\t* For comparison, here are the out-of-the-box defaults:\r\n\t*\r\n\t* ```\r\n\t* gesture.drag.configureHoldPulse({\r\n\t*     frequency: 200,\r\n\t*     events: [\r\n\t*         {name: 'hold', time: 200}\r\n\t*     ],\r\n\t*     endHold: 'onMove',\r\n\t*     moveTolerance: 16,\r\n\t*     resume: false,\r\n\t*     preventTap: false\r\n\t* });\r\n\t* ```\r\n\t*\r\n\t* The settings you provide via this method will be applied globally, affecting\r\n\t* every Control. Note that you can also override the defaults on a case-by-case\r\n\t* basis by handling the `down` event for any Control and calling the\r\n\t* `configureHoldPulse` method exposed by the event itself. That method works\r\n\t* exactly like this one, except that the settings you provide will apply only to\r\n\t* holds on that particular Control.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tconfigureHoldPulse: function (config) {\r\n\t\t// TODO: Might be nice to do some validation, error handling\r\n\r\n\t\t// _holdPulseConfig represents the current, global `holdpulse` settings, if the default\r\n\t\t// settings have been overridden in some way.\r\n\t\tthis._holdPulseConfig = this._holdPulseConfig || utils.clone(this.holdPulseDefaultConfig, true);\r\n\t\tutils.mixin(this._holdPulseConfig, config);\r\n\t},\r\n\r\n\t/**\r\n\t* Resets the `holdPulse` behavior to the default settings.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tresetHoldPulseConfig: function () {\r\n\t\tthis._holdPulseConfig = null;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tholdPulseConfig: {},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttrackCount: 5,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tminFlick: 0.1,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tminTrack: 8,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdown: function(e) {\r\n\t\t// tracking if the mouse is down\r\n\t\t//enyo.log('tracking ON');\r\n\t\t// Note: 'tracking' flag indicates interest in mousemove, it's turned off\r\n\t\t// on mouseup\r\n\t\t// make sure to stop dragging in case the up event was not received.\r\n\t\tthis.stopDragging(e);\r\n\t\tthis.target = e.target;\r\n\t\tthis.startTracking(e);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmove: function(e) {\r\n\t\tif (this.tracking) {\r\n\t\t\tthis.track(e);\r\n\t\t\t// If the mouse is not down and we're tracking a drag, abort.\r\n\t\t\t// this error condition can occur on IE/Webkit after interaction with a scrollbar.\r\n\t\t\tif (!e.which) {\r\n\t\t\t\tthis.stopDragging(e);\r\n\t\t\t\tthis.endHold();\r\n\t\t\t\tthis.tracking = false;\r\n\t\t\t\t//enyo.log('gesture.drag: mouse must be down to drag.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (this.dragEvent) {\r\n\t\t\t\tthis.sendDrag(e);\r\n\t\t\t} else if (this.holdPulseConfig.endHold === 'onMove') {\r\n\t\t\t\tif (this.dy*this.dy + this.dx*this.dx >= this.holdPulseConfig.moveTolerance) { // outside of target\r\n\t\t\t\t\tif (this.holdJob) { // only stop/cancel hold job if it currently exists\r\n\t\t\t\t\t\tif (this.holdPulseConfig.resume) { // pause hold to potentially resume later\r\n\t\t\t\t\t\t\tthis.suspendHold();\r\n\t\t\t\t\t\t} else { // completely cancel hold\r\n\t\t\t\t\t\t\tthis.endHold();\r\n\t\t\t\t\t\t\tthis.sendDragStart(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.holdPulseConfig.resume && !this.holdJob) { // when moving inside target, only resume hold job if it was previously paused\r\n\t\t\t\t\tthis.resumeHold();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tup: function(e) {\r\n\t\tthis.endTracking(e);\r\n\t\tthis.stopDragging(e);\r\n\t\tthis.endHold();\r\n\t\tthis.target = null;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tenter: function(e) {\r\n\t\t// resume hold when re-entering original target when using 'onLeave' endHold value\r\n\t\tif (this.holdPulseConfig.resume && this.holdPulseConfig.endHold === 'onLeave' && this.target && e.target === this.target) {\r\n\t\t\tthis.resumeHold();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tleave: function(e) {\r\n\t\tif (this.dragEvent) {\r\n\t\t\tthis.sendDragOut(e);\r\n\t\t} else if (this.holdPulseConfig.endHold === 'onLeave') {\r\n\t\t\tif (this.holdPulseConfig.resume) { // pause hold to potentially resume later\r\n\t\t\t\tthis.suspendHold();\r\n\t\t\t} else { // completely cancel hold\r\n\t\t\t\tthis.endHold();\r\n\t\t\t\tthis.sendDragStart(e);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstopDragging: function(e) {\r\n\t\tif (this.dragEvent) {\r\n\t\t\tthis.sendDrop(e);\r\n\t\t\tvar handled = this.sendDragFinish(e);\r\n\t\t\tthis.dragEvent = null;\r\n\t\t\treturn handled;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmakeDragEvent: function(inType, inTarget, inEvent, inInfo) {\r\n\t\tvar adx = Math.abs(this.dx), ady = Math.abs(this.dy);\r\n\t\tvar h = adx > ady;\r\n\t\t// suggest locking if off-axis < 22.5 degrees\r\n\t\tvar l = (h ? ady/adx : adx/ady) < 0.414;\r\n\t\tvar e = {};\r\n\t\t// var e = {\r\n\t\te.type = inType;\r\n\t\te.dx = this.dx;\r\n\t\te.dy = this.dy;\r\n\t\te.ddx = this.dx - this.lastDx;\r\n\t\te.ddy = this.dy - this.lastDy;\r\n\t\te.xDirection = this.xDirection;\r\n\t\te.yDirection = this.yDirection;\r\n\t\te.pageX = inEvent.pageX;\r\n\t\te.pageY = inEvent.pageY;\r\n\t\te.clientX = inEvent.clientX;\r\n\t\te.clientY = inEvent.clientY;\r\n\t\te.horizontal = h;\r\n\t\te.vertical = !h;\r\n\t\te.lockable = l;\r\n\t\te.target = inTarget;\r\n\t\te.dragInfo = inInfo;\r\n\t\te.ctrlKey = inEvent.ctrlKey;\r\n\t\te.altKey = inEvent.altKey;\r\n\t\te.metaKey = inEvent.metaKey;\r\n\t\te.shiftKey = inEvent.shiftKey;\r\n\t\te.srcEvent = inEvent.srcEvent;\r\n\t\t// };\r\n\t\te.preventDefault = gestureUtil.preventDefault;\r\n\t\te.disablePrevention = gestureUtil.disablePrevention;\r\n\t\treturn e;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsendDragStart: function(e) {\r\n\t\t//enyo.log('dragstart');\r\n\t\tthis.dragEvent = this.makeDragEvent('dragstart', this.target, e);\r\n\t\tdispatcher.dispatch(this.dragEvent);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsendDrag: function(e) {\r\n\t\t//enyo.log('sendDrag to ' + this.dragEvent.target.id + ', over to ' + e.target.id);\r\n\t\t// send dragOver event to the standard event target\r\n\t\tvar synth = this.makeDragEvent('dragover', e.target, e, this.dragEvent.dragInfo);\r\n\t\tdispatcher.dispatch(synth);\r\n\t\t// send drag event to the drag source\r\n\t\tsynth.type = 'drag';\r\n\t\tsynth.target = this.dragEvent.target;\r\n\t\tdispatcher.dispatch(synth);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsendDragFinish: function(e) {\r\n\t\t//enyo.log('dragfinish');\r\n\t\tvar synth = this.makeDragEvent('dragfinish', this.dragEvent.target, e, this.dragEvent.dragInfo);\r\n\t\tsynth.preventTap = function() {\r\n\t\t\tif (e.preventTap) {\r\n\t\t\t\te.preventTap();\r\n\t\t\t}\r\n\t\t};\r\n\t\tdispatcher.dispatch(synth);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsendDragOut: function(e) {\r\n\t\tvar synth = this.makeDragEvent('dragout', e.target, e, this.dragEvent.dragInfo);\r\n\t\tdispatcher.dispatch(synth);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsendDrop: function(e) {\r\n\t\tvar synth = this.makeDragEvent('drop', e.target, e, this.dragEvent.dragInfo);\r\n\t\tsynth.preventTap = function() {\r\n\t\t\tif (e.preventTap) {\r\n\t\t\t\te.preventTap();\r\n\t\t\t}\r\n\t\t};\r\n\t\tdispatcher.dispatch(synth);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstartTracking: function(e) {\r\n\t\tthis.tracking = true;\r\n\t\t// note: use clientX/Y to be compatible with ie8\r\n\t\tthis.px0 = e.clientX;\r\n\t\tthis.py0 = e.clientY;\r\n\t\t// this.flickInfo = {startEvent: e, moves: []};\r\n\t\tthis.flickInfo = {};\r\n\t\tthis.flickInfo.startEvent = e;\r\n\t\t// FIXME: so we're trying to reuse objects where possible, should\r\n\t\t// do the same in scenarios like this for arrays\r\n\t\tthis.flickInfo.moves = [];\r\n\t\tthis.track(e);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttrack: function(e) {\r\n\t\tthis.lastDx = this.dx;\r\n\t\tthis.lastDy = this.dy;\r\n\t\tthis.dx = e.clientX - this.px0;\r\n\t\tthis.dy = e.clientY - this.py0;\r\n\t\tthis.xDirection = this.calcDirection(this.dx - this.lastDx, 0);\r\n\t\tthis.yDirection = this.calcDirection(this.dy - this.lastDy, 0);\r\n\t\t//\r\n\t\tvar ti = this.flickInfo;\r\n\t\tti.moves.push({\r\n\t\t\tx: e.clientX,\r\n\t\t\ty: e.clientY,\r\n\t\t\tt: utils.perfNow()\r\n\t\t});\r\n\t\t// track specified # of points\r\n\t\tif (ti.moves.length > this.trackCount) {\r\n\t\t\tti.moves.shift();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tendTracking: function() {\r\n\t\tthis.tracking = false;\r\n\t\tvar ti = this.flickInfo;\r\n\t\tvar moves = ti && ti.moves;\r\n\t\tif (moves && moves.length > 1) {\r\n\t\t\t// note: important to use up time to reduce flick\r\n\t\t\t// velocity based on time between move and up.\r\n\t\t\tvar l = moves[moves.length-1];\r\n\t\t\tvar n = utils.perfNow();\r\n\t\t\t// take the greatest of flick between each tracked move and last move\r\n\t\t\tfor (var i=moves.length-2, dt=0, x1=0, y1=0, x=0, y=0, sx=0, sy=0, m; (m=moves[i]); i--) {\r\n\t\t\t\t// this flick (this move - last move) / (this time - last time)\r\n\t\t\t\tdt = n - m.t;\r\n\t\t\t\tx1 = (l.x - m.x) / dt;\r\n\t\t\t\ty1 = (l.y - m.y) / dt;\r\n\t\t\t\t// establish flick direction\r\n\t\t\t\tsx = sx || (x1 < 0 ? -1 : (x1 > 0 ? 1 : 0));\r\n\t\t\t\tsy = sy || (y1 < 0 ? -1 : (y1 > 0 ? 1 : 0));\r\n\t\t\t\t// if either axis is a greater flick than previously recorded use this one\r\n\t\t\t\tif ((x1 * sx > x * sx) || (y1 * sy > y * sy)) {\r\n\t\t\t\t\tx = x1;\r\n\t\t\t\t\ty = y1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar v = Math.sqrt(x*x + y*y);\r\n\t\t\tif (v > this.minFlick) {\r\n\t\t\t\t// generate the flick using the start event so it has those coordinates\r\n\t\t\t\tthis.sendFlick(ti.startEvent, x, y, v);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.flickInfo = null;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcalcDirection: function(inNum, inDefault) {\r\n\t\treturn inNum > 0 ? 1 : (inNum < 0 ? -1 : inDefault);\r\n\t},\r\n\r\n\t/**\r\n\t* Translate the old format for holdPulseConfig to the new one, to\r\n\t* preserve backward compatibility.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tnormalizeHoldPulseConfig: function (oldOpts) {\r\n\t\tvar nOpts = utils.clone(oldOpts);\r\n\t\tnOpts.frequency = nOpts.delay;\r\n\t\tnOpts.events = [{name: 'hold', time: nOpts.delay}];\r\n\t\treturn nOpts;\r\n\t},\r\n\r\n\t/**\r\n\t* Method to override holdPulseConfig for a given gesture. This method isn't\r\n\t* accessed directly from gesture.drag, but exposed by the `down` event.\r\n\t* See `prepareHold()`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_configureHoldPulse: function(opts) {\r\n\t\tvar nOpts = (opts.delay === undefined) ?\r\n\t\t\topts :\r\n\t\t\tthis.normalizeHoldPulseConfig(opts);\r\n\t\tutils.mixin(this.holdPulseConfig, nOpts);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tprepareHold: function(e) {\r\n\t\t// quick copy as the prototype of the new overridable config\r\n\t\tthis.holdPulseConfig = utils.clone(this._holdPulseConfig || this.holdPulseDefaultConfig, true);\r\n\r\n\t\t// expose method for configuring holdpulse options\r\n\t\te.configureHoldPulse = this._configureHoldPulse.bind(this);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tbeginHold: function(e) {\r\n\t\tvar ce;\r\n\t\t// cancel any existing hold since it's possible in corner cases to get a down without an up\r\n\t\tthis.endHold();\r\n\t\tthis.holdStart = utils.perfNow();\r\n\t\tthis._holdJobFunction = utils.bind(this, 'handleHoldPulse');\r\n\t\t// clone the event to ensure it stays alive on IE upon returning to event loop\r\n\t\tce = this._holdJobEvent = utils.clone(e);\r\n\t\tce.srcEvent = utils.clone(e.srcEvent);\r\n\t\tce.downEvent = e;\r\n\t\tthis._pulsing = false;\r\n\t\tthis._unsent = utils.clone(this.holdPulseConfig.events);\r\n\t\tthis._unsent.sort(this.sortEvents);\r\n\t\tthis._next = this._unsent.shift();\r\n\t\tif (this._next) {\r\n\t\t\tthis.holdJob = setInterval(this._holdJobFunction, this.holdPulseConfig.frequency);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tresumeHold: function() {\r\n\t\tthis.handleHoldPulse();\r\n\t\tthis.holdJob = setInterval(this._holdJobFunction, this.holdPulseConfig.frequency);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsortEvents: function(a, b) {\r\n\t\t\tif (a.time < b.time) return -1;\r\n\t\t\tif (a.time > b.time) return 1;\r\n\t\t\treturn 0;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tendHold: function() {\r\n\t\tvar e = this._holdJobEvent;\r\n\t\tthis.suspendHold();\r\n\t\tif (e && this._pulsing) {\r\n\t\t\tthis.sendRelease(e);\r\n\t\t}\r\n\t\tthis._pulsing = false;\r\n\t\tthis._unsent = null;\r\n\t\tthis._holdJobFunction = null;\r\n\t\tthis._holdJobEvent = null;\r\n\t\tthis._next = null;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsuspendHold: function() {\r\n\t\tclearInterval(this.holdJob);\r\n\t\tthis.holdJob = null;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandleHoldPulse: function() {\r\n\t\tvar holdTime = utils.perfNow() - this.holdStart,\r\n\t\t\thje = this._holdJobEvent,\r\n\t\t\te;\r\n\t\tthis.maybeSendHold(hje, holdTime);\r\n\t\tif (this._pulsing) {\r\n\t\t\te = gestureUtil.makeEvent('holdpulse', hje);\r\n\t\t\te.holdTime = holdTime;\r\n\t\t\tdispatcher.dispatch(e);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmaybeSendHold: function(inEvent, inHoldTime) {\r\n\t\tvar n = this._next;\r\n\t\twhile (n && n.time <= inHoldTime) {\r\n\t\t\tvar e = gestureUtil.makeEvent(n.name, inEvent);\r\n\t\t\tif (!this._pulsing && this.holdPulseConfig.preventTap) {\r\n\t\t\t\tinEvent.downEvent.preventTap();\r\n\t\t\t}\r\n\t\t\tthis._pulsing = true;\r\n\t\t\tdispatcher.dispatch(e);\r\n\t\t\tn = this._next = this._unsent && this._unsent.shift();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsendRelease: function(inEvent) {\r\n\t\tvar e = gestureUtil.makeEvent('release', inEvent);\r\n\t\tdispatcher.dispatch(e);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsendFlick: function(inEvent, inX, inY, inV) {\r\n\t\tvar e = gestureUtil.makeEvent('flick', inEvent);\r\n\t\te.xVelocity = inX;\r\n\t\te.yVelocity = inY;\r\n\t\te.velocity = inV;\r\n\t\tdispatcher.dispatch(e);\r\n\t}\r\n};\r\n","var\r\n\tdispatcher = require('../dispatcher'),\r\n\tutils = require('../utils');\r\n\r\n/**\r\n* The extended {@glossary event} [object]{@glossary Object} that is provided when we\r\n* emulate iOS multitouch gesture events on non-iOS devices.\r\n*\r\n* @typedef {Object} module:enyo/gesture/touchGestures~EmulatedGestureEvent\r\n* @property {Number} pageX - The x-coordinate of the center point between fingers.\r\n* @property {Number} pageY - The y-coordinate of the center point between fingers.\r\n* @property {Number} rotation - The degrees of rotation from the beginning of the gesture.\r\n* @property {Number} scale - The percent change of distance between fingers.\r\n*/\r\n\r\n/**\r\n* @module enyo/gesture/touchGestures\r\n* @private\r\n*/\r\nmodule.exports = {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\torderedTouches: [],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgesture: null,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttouchstart: function (e) {\r\n\t\t// some devices can send multiple changed touches on start and end\r\n\t\tvar i,\r\n\t\t\tchangedTouches = e.changedTouches,\r\n\t\t\tlength = changedTouches.length;\r\n\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tvar id = changedTouches[i].identifier;\r\n\r\n\t\t\t// some devices can send multiple touchstarts\r\n\t\t\tif (utils.indexOf(id, this.orderedTouches) < 0) {\r\n\t\t\t\tthis.orderedTouches.push(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (e.touches.length >= 2 && !this.gesture) {\r\n\t\t\tvar p = this.gesturePositions(e);\r\n\r\n\t\t\tthis.gesture = this.gestureVector(p);\r\n\t\t\tthis.gesture.angle = this.gestureAngle(p);\r\n\t\t\tthis.gesture.scale = 1;\r\n\t\t\tthis.gesture.rotation = 0;\r\n\t\t\tvar g = this.makeGesture('gesturestart', e, {vector: this.gesture, scale: 1, rotation: 0});\r\n\t\t\tdispatcher.dispatch(g);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttouchend: function (e) {\r\n\t\t// some devices can send multiple changed touches on start and end\r\n\t\tvar i,\r\n\t\t\tchangedTouches = e.changedTouches,\r\n\t\t\tlength = changedTouches.length;\r\n\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tutils.remove(changedTouches[i].identifier, this.orderedTouches);\r\n\t\t}\r\n\r\n\t\tif (e.touches.length <= 1 && this.gesture) {\r\n\t\t\tvar t = e.touches[0] || e.changedTouches[e.changedTouches.length - 1];\r\n\r\n\t\t\t// gesture end sends last rotation and scale, with the x/y of the last finger\r\n\t\t\tdispatcher.dispatch(this.makeGesture('gestureend', e, {vector: {xcenter: t.pageX, ycenter: t.pageY}, scale: this.gesture.scale, rotation: this.gesture.rotation}));\r\n\t\t\tthis.gesture = null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttouchmove: function (e) {\r\n\t\tif (this.gesture) {\r\n\t\t\tvar g = this.makeGesture('gesturechange', e);\r\n\t\t\tthis.gesture.scale = g.scale;\r\n\t\t\tthis.gesture.rotation = g.rotation;\r\n\t\t\tdispatcher.dispatch(g);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfindIdentifiedTouch: function (touches, id) {\r\n\t\tfor (var i = 0, t; (t = touches[i]); i++) {\r\n\t\t\tif (t.identifier === id) {\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgesturePositions: function (e) {\r\n\t\tvar first = this.findIdentifiedTouch(e.touches, this.orderedTouches[0]);\r\n\t\tvar last = this.findIdentifiedTouch(e.touches, this.orderedTouches[this.orderedTouches.length - 1]);\r\n\t\tvar fx = first.pageX, lx = last.pageX, fy = first.pageY, ly = last.pageY;\r\n\t\t// center the first touch as 0,0\r\n\t\tvar x = lx - fx, y = ly - fy;\r\n\t\tvar h = Math.sqrt(x*x + y*y);\r\n\t\treturn {x: x, y: y, h: h, fx: fx, lx: lx, fy: fy, ly: ly};\r\n\t},\r\n\r\n\t/**\r\n\t* Finds rotation angle.\r\n\t* \r\n\t* @private\r\n\t*/\r\n\tgestureAngle: function (positions) {\r\n\t\tvar p = positions;\r\n\t\t// yay math!, rad -> deg\r\n\t\tvar a = Math.asin(p.y / p.h) * (180 / Math.PI);\r\n\t\t// fix for range limits of asin (-90 to 90)\r\n\t\t// Quadrants II and III\r\n\t\tif (p.x < 0) {\r\n\t\t\ta = 180 - a;\r\n\t\t}\r\n\t\t// Quadrant IV\r\n\t\tif (p.x > 0 && p.y < 0) {\r\n\t\t\ta += 360;\r\n\t\t}\r\n\t\treturn a;\r\n\t},\r\n\r\n\t/**\r\n\t* Finds bounding box.\r\n\t* \r\n\t* @private\r\n\t*/\r\n\tgestureVector: function (positions) {\r\n\t\t// the least recent touch and the most recent touch determine the bounding box of the gesture event\r\n\t\tvar p = positions;\r\n\t\t// center the first touch as 0,0\r\n\t\treturn {\r\n\t\t\tmagnitude: p.h,\r\n\t\t\txcenter: Math.abs(Math.round(p.fx + (p.x / 2))),\r\n\t\t\tycenter: Math.abs(Math.round(p.fy + (p.y / 2)))\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmakeGesture: function (type, e, cache) {\r\n\t\tvar vector, scale, rotation;\r\n\t\tif (cache) {\r\n\t\t\tvector = cache.vector;\r\n\t\t\tscale = cache.scale;\r\n\t\t\trotation = cache.rotation;\r\n\t\t} else {\r\n\t\t\tvar p = this.gesturePositions(e);\r\n\t\t\tvector = this.gestureVector(p);\r\n\t\t\tscale = vector.magnitude / this.gesture.magnitude;\r\n\t\t\t// gestureEvent.rotation is difference from the starting angle, clockwise\r\n\t\t\trotation = (360 + this.gestureAngle(p) - this.gesture.angle) % 360;\r\n\t\t}\r\n\t\tvar event = utils.clone(e);\r\n\t\treturn utils.mixin(event, {\r\n\t\t\ttype: type,\r\n\t\t\tscale: scale,\r\n\t\t\tpageX: vector.xcenter,\r\n\t\t\tpageY: vector.ycenter,\r\n\t\t\trotation: rotation\r\n\t\t});\r\n\t}\r\n};\r\n","/**\r\n* The enyo/History singleton is a specialized application history manager.\r\n* It is built on top of the standard HTML5 History API and centrally manages\r\n* interactions with that API to reduce the likelihood that \"competing\" uses\r\n* of the API within a single app will conflict, causing unpredictable behavior.\r\n*\r\n* CAUTION: This API is experimental. It is likely to change or to be removed\r\n* altogether in a future release.\r\n*\r\n* @module enyo/History\r\n* @wip\r\n*/\r\n\r\n/**\r\n* Passed to {@link module:enyo/History#push} to add a new history entry and passed as the first\r\n* argument to {@link module:enyo/History~HistoryEntry#handler} when the entry is popped. Additional\r\n* properties beyond those defined here may be included to provide additional data to the handler.\r\n*\r\n* @example\r\n* var\r\n* \tEnyoHistory = require('enyo/History');\r\n*\r\n* EnyoHistory.push({\r\n* \thandler: function (entry) {\r\n* \t\tconsole.log('Entry added at ', entry.time, 'and popped at', Date.now());\r\n* \t},\r\n* \ttime: Date.now()\r\n* });\r\n*\r\n* @typedef {Object} module:enyo/History~HistoryEntry\r\n* @property {Function|String} handler - Function called when this history entry is popped. May\r\n* \teither be a Function or the name of a function on `context`.\r\n* @property {Object} [context] - Context on which `handler` is bound\r\n* @property {String} [location] - When {@link module:enyo/History#isSupported} is `true`, updates\r\n* \tthe displayed URL. Must be within the same origin.\r\n*/\r\n\r\nvar\r\n\tdispatcher = require('enyo/dispatcher'),\r\n\tkind = require('enyo/kind'),\r\n\tutils = require('enyo/utils'),\r\n\tComponent = require('enyo/Component'),\r\n\tSignals = require('enyo/Signals');\r\n\r\nvar\r\n\t// App history, ordered from oldest to newest.\r\n\t_history = [],\r\n\r\n\t// History actions that were queued because a back operation was in progress. These will be\r\n\t// dequeued when the next popstate event is handled\r\n\t_queue = [],\r\n\r\n\t// Indicates the number of steps 'back' in history requested\r\n\t_popQueueCount = 0,\r\n\r\n\t// `true` if a push action has been enqueued\r\n\t_pushQueued = false,\r\n\r\n\t// Track if we're in the midst of handling a pop\r\n\t_processing = false,\r\n\r\n\t// If history were disabled or clear called during processing, we can't continue to process the\r\n\t// queue which will need to resume after the clear processes.\r\n\t_abortQueueProcessing = false,\r\n\r\n\t// `true` if the platform support the HTML5 History API\r\n\t_supports = !!global.history.pushState;\r\n\r\nvar EnyoHistory = module.exports = kind.singleton(\r\n\t/** @lends module:enyo/History~History.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Component,\r\n\r\n\t/**\r\n\t* When enabled, enyo/History will handle onpopstate events and notify controls when their\r\n\t* history entry is popped.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tenabled: true,\r\n\r\n\t/**\r\n\t* When true, the browser's history will be updated when history entries are added or removed. If\r\n\t* the platform does not support this feature, the value will always be false. The default is\r\n\t* true if supported by the platform and false otherwise.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @private\r\n\t*/\r\n\tupdateHistory: _supports,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcomponents: [\r\n\t\t{kind: Signals,  onkeyup: 'handleKeyUp'}\r\n\t],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tenabledChanged: function () {\r\n\t\t// reset private members\r\n\t\tif (!this.enabled) this.clear();\r\n\t},\r\n\r\n\t/**\r\n\t* Resets the value to false if the platform does not support the History API\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tupdateHistoryChanged: function () {\r\n\t\tthis.updateHistory = this.updateHistory && _supports;\r\n\t},\r\n\r\n\t// Public methods\r\n\r\n\t/**\r\n\t* Adds a new history entry\r\n\t*\r\n\t* @param  {module:enyo/History~HistoryEntry} entry Object describing the history entry\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tpush: function (entry) {\r\n\t\tif (this.enabled) {\r\n\t\t\tif (_popQueueCount) {\r\n\t\t\t\tthis.enqueuePush(entry);\r\n\t\t\t} else {\r\n\t\t\t\tthis.pushEntry(entry);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Asynchronously removes `count` entries from the history invoking the callback for each if it\r\n\t* exists.\r\n\t*\r\n\t* @param  {Number} count Number of entries to remove\r\n\t*\r\n\t* @oublic\r\n\t*/\r\n\tpop: function (count) {\r\n\t\tif (!this.enabled) return;\r\n\t\tthis.enqueuePop('pop', count);\r\n\t},\r\n\r\n\t/**\r\n\t* Asynchronously removes `count` entries from the history without invoking the callbacks for\r\n\t* each.\r\n\t*\r\n\t* @param  {Number} count Number of entries to remove\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tdrop: function (count) {\r\n\t\tif (!this.enabled) return;\r\n\t\tthis.enqueuePop('drop', count);\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the latest history entry without removing it.\r\n\t*\r\n\t* @return {module:enyo/History~HistoryEntry}\r\n\t* @public\r\n\t*/\r\n\tpeek: function () {\r\n\t\treturn _history[_history.length - 1];\r\n\t},\r\n\r\n\t/**\r\n\t* Clears all history entries without calling their respective handlers. When the\r\n\t* entries are popped, the internal history will be empty and the browser history will be\r\n\t* reset to the state when this module started tracking the history.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tclear: function () {\r\n\t\tvar ql = _queue.length,\r\n\t\t\thl = _history.length;\r\n\r\n\t\t_popQueueCount = 0;\r\n\t\t_pushQueued = false;\r\n\t\t_abortQueueProcessing = _processing;\r\n\t\t_processing = false;\r\n\t\tif (ql) _queue.splice(0, ql);\r\n\t\tif (hl) this.drop(hl);\r\n\t},\r\n\r\n\t/**\r\n\t* Returns `true` when enyo/History is currently handling a popstate event and invoking the\r\n\t* callbacks for any popped entries.\r\n\t*\r\n\t* @return {Boolean}\r\n\t* @public\r\n\t*/\r\n\tisProcessing: function () {\r\n\t\treturn _processing;\r\n\t},\r\n\r\n\t/**\r\n\t* Returns `true` when the HTML5 history API is supported by the platform\r\n\t*\r\n\t* @return {Boolean}\r\n\t* @public\r\n\t*/\r\n\tisSupported: function () {\r\n\t\treturn _supports;\r\n\t},\r\n\r\n\t// Private methods\r\n\r\n\t/**\r\n\t* Handles flushing the history action queus and processing each entry. When the queues are\r\n\t* empty and a popstate event occurs, this pops the next entry and processes it.\r\n\t*\r\n\t* @param  {Object} state Value of the state member of the PopStateEvent\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tprocessState: function (state) {\r\n\t\t_processing = true;\r\n\t\tif (_queue.length) {\r\n\t\t\tthis.processQueue();\r\n\t\t} else if (_history.length) {\r\n\t\t\tthis.processPopEntry(_history.pop());\r\n\t\t}\r\n\t\t_processing = false;\r\n\t},\r\n\r\n\t/**\r\n\t* Processes any queued actions\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tprocessQueue: function () {\r\n\t\tvar next, i, entries;\r\n\r\n\t\tthis.silencePushEntries();\r\n\r\n\t\twhile (_queue.length && !_abortQueueProcessing) {\r\n\t\t\tnext = _queue.shift();\r\n\r\n\t\t\tif (next.type === 'push') {\r\n\t\t\t\tthis.pushEntry(next.entry, next.silenced);\r\n\t\t\t} else {\r\n\t\t\t\t_popQueueCount -= next.count;\r\n\t\t\t\tentries = _history.splice(_history.length - next.count, next.count);\r\n\t\t\t\t// if a 'pop' was requested\r\n\t\t\t\tif (next.type == 'pop') {\r\n\t\t\t\t\t// iterate the requested number of history entries\r\n\t\t\t\t\tfor (i = entries.length - 1; i >= 0; --i) {\r\n\t\t\t\t\t\t// and call each handler if it exists\r\n\t\t\t\t\t\tthis.processPopEntry(entries[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// otherwise we just drop the entries and do nothing\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (_abortQueueProcessing) {\r\n\t\t\t_abortQueueProcessing = false;\r\n\t\t} else {\r\n\t\t\t_popQueueCount = 0;\r\n\t\t\t_pushQueued = false;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Marks any queued push entries as silenced that would be popped by a subsequent queued pop or\r\n\t* drop entry.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tsilencePushEntries: function () {\r\n\t\tvar i, next,\r\n\t\t\tsilence = 0;\r\n\r\n\t\tfor (i = _queue.length - 1; i >= 0; --i) {\r\n\t\t\tnext = _queue[i];\r\n\t\t\tif (next.type == 'push') {\r\n\t\t\t\tif (silence) {\r\n\t\t\t\t\tsilence -= 1;\r\n\t\t\t\t\tnext.silenced = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnext.silenced = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsilence += next.count;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Invokes the callback for a pop entry\r\n\t*\r\n\t* @param  {module:enyo/History~HistoryEntry} entry\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tprocessPopEntry: function (entry) {\r\n\t\tif (entry.handler) {\r\n\t\t\tutils.call(entry.context, entry.handler, [entry]);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Adds an pop or drop entry to the history queue\r\n\t*\r\n\t* @param  {String} type  History action type ('pop' or 'drop')\r\n\t* @param  {Number} [count] Number of actions to invoke. Defaults to 1.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tenqueuePop: function (type, count) {\r\n\t\tcount = count || 1;\r\n\t\tthis.addToQueue({type: type, count: count});\r\n\t\t// if we've only queued pop/drop events, we need to increment the number of entries to go\r\n\t\t// back. once a push is queued, the history must be managed in processState.\r\n\t\tif (!_pushQueued) {\r\n\t\t\t_popQueueCount += count;\r\n\t\t}\r\n\t\tif (_queue.length === 1) {\r\n\t\t\t// defer the actual 'back' action so pop() or drop() can be called multiple times in the\r\n\t\t\t// same frame. Otherwise, only the first go() would be observed.\r\n\t\t\tthis.startJob('history.go', function () {\r\n\t\t\t\t// If we are able to and supposed to update history and there are pending pops\r\n\t\t\t\tif (this.updateHistory && _popQueueCount > 0) {\r\n\t\t\t\t\t// go back that many entries\r\n\t\t\t\t\tglobal.history.go(-_popQueueCount);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// otherwise we'll start the processing\r\n\t\t\t\t\tthis.handlePop({\r\n\t\t\t\t\t\tstate: this.peek()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Adds a push entry to the history queue\r\n\t*\r\n\t* @param  {module:enyo/History~HistoryEntry} entry\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tenqueuePush: function (entry) {\r\n\t\t_pushQueued = true;\r\n\t\tthis.addToQueue({type: 'push', entry: entry});\r\n\t},\r\n\r\n\t/**\r\n\t* When entries are added while processing the queue, the new entries should be added at the top\r\n\t* of the queue rather than the end because the queue is processed FIFO and the assumption of\r\n\t* adding them mid-process is that they are being added at the point in the queue processing in\r\n\t* which they are called.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\taddToQueue: function (entry) {\r\n\t\tif (_processing) {\r\n\t\t\t_queue.unshift(entry);\r\n\t\t\tthis.silencePushEntries();\r\n\t\t} else {\r\n\t\t\t_queue.push(entry);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Adds an new entry to the _history and pushes the new state to global.history (if supported)\r\n\t*\r\n\t* @param  {module:enyo/History~HistoryEntry} entry\r\n\t* @param  {Boolean} silenced Prevents pushing the state onto history when `true`\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tpushEntry: function (entry, silenced) {\r\n\t\tvar id = entry.context && entry.context.id || 'anonymous',\r\n\t\t\tlocation = entry.location || '';\r\n\t\t_history.push(entry);\r\n\t\tif (this.updateHistory && !silenced) {\r\n\t\t\tglobal.history.pushState({id: id}, '', location);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* onpopstate handler\r\n\t*\r\n\t* @private\r\n\t*/\r\n\thandlePop: function (event) {\r\n\t\tif (this.enabled) {\r\n\t\t\tthis.processState(event.state);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* onkeyup handler\r\n\t*\r\n\t* @private\r\n\t*/\r\n\thandleKeyUp: function (sender, event) {\r\n\t\tvar current = this.peek();\r\n\t\tif (event.keySymbol == 'back' && current && current.context.getShowing()) {\r\n\t\t\tthis.pop();\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n});\r\n\r\ndispatcher.listen(global, 'popstate', EnyoHistory.handlePop.bind(EnyoHistory));","/**\r\n* @module enyo/gesture\r\n*/\r\n\r\n\r\nvar\r\n\tdispatcher = require('../dispatcher'),\r\n\tdom = require('../dom'),\r\n\tplatform = require('../platform'),\r\n\tutils = require('../utils');\r\n\r\nvar\r\n\tdrag = require('./drag'),\r\n\ttouchGestures = require('./touchGestures'),\r\n\tgestureUtil = require('./util');\r\n\r\n/**\r\n* Enyo supports a set of normalized events that work similarly across all supported platforms.\r\n* These events are provided so that users can write a single set of event handlers for\r\n* applications that run on both mobile and desktop platforms. They are needed because desktop\r\n* and mobile platforms handle basic input differently.\r\n*\r\n* For more information on normalized input events and their associated properties, see the\r\n* documentation on [Event Handling]{@linkplain $dev-guide/key-concepts/event-handling.html}\r\n* in the Enyo Developer Guide.\r\n*\r\n* @public\r\n*/\r\nvar gesture = module.exports = {\r\n\t/**\r\n\t* Handles \"down\" [events]{@glossary event}, including `mousedown` and `keydown`. This is\r\n\t* responsible for the press-and-hold key repeater.\r\n\t*\r\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\r\n\t* @public\r\n\t*/\r\n\tdown: function(evt) {\r\n\t\tvar e = gestureUtil.makeEvent('down', evt);\r\n\r\n\t\t// prepare for hold\r\n\t\tdrag.prepareHold(e);\r\n\r\n\t\t// enable prevention of tap event\r\n\t\te.preventTap = function() {\r\n\t\t\te._tapPrevented = true;\r\n\t\t};\r\n\r\n\t\tdispatcher.dispatch(e);\r\n\t\tthis.downEvent = e;\r\n\r\n\t\t// start hold, now that control has had a chance\r\n\t\t// to override the holdPulse configuration\r\n\t\tdrag.beginHold(e);\r\n\t},\r\n\r\n\t/**\r\n\t* Handles `mousemove` [events]{@glossary event}.\r\n\t*\r\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\r\n\t* @public\r\n\t*/\r\n\tmove: function(evt) {\r\n\t\tvar e = gestureUtil.makeEvent('move', evt);\r\n\t\t// include delta and direction v. down info in move event\r\n\t\te.dx = e.dy = e.horizontal = e.vertical = 0;\r\n\t\tif (e.which && this.downEvent) {\r\n\t\t\te.dx = evt.clientX - this.downEvent.clientX;\r\n\t\t\te.dy = evt.clientY - this.downEvent.clientY;\r\n\t\t\te.horizontal = Math.abs(e.dx) > Math.abs(e.dy);\r\n\t\t\te.vertical = !e.horizontal;\r\n\t\t}\r\n\t\tdispatcher.dispatch(e);\r\n\t},\r\n\r\n\t/**\r\n\t* Handles \"up\" [events]{@glossary event}, including `mouseup` and `keyup`.\r\n\t*\r\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\r\n\t* @public\r\n\t*/\r\n\tup: function(evt) {\r\n\t\tvar e = gestureUtil.makeEvent('up', evt);\r\n\r\n\t\t// We have added some logic to synchronize up and down events in certain scenarios (i.e.\r\n\t\t// clicking multiple buttons with a mouse) and to generally guard against any potential\r\n\t\t// asymmetry, but a full solution would be to maintain a map of up/down events as an\r\n\t\t// ideal solution, for future work.\r\n\t\te._tapPrevented = this.downEvent && this.downEvent._tapPrevented && this.downEvent.which == e.which;\r\n\t\te.preventTap = function() {\r\n\t\t\te._tapPrevented = true;\r\n\t\t};\r\n\r\n\t\tdispatcher.dispatch(e);\r\n\t\tif (!e._tapPrevented && this.downEvent && this.downEvent.which == 1) {\r\n\t\t\tvar target = this.findCommonAncestor(this.downEvent.target, evt.target);\r\n\r\n\t\t\t// the common ancestor of the down/up events is the target of the tap\r\n\t\t\tif(target) {\r\n\t\t\t\tif(this.supportsDoubleTap(target)) {\r\n\t\t\t\t\tthis.doubleTap(e, target);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.sendTap(e, target);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.downEvent && this.downEvent.which == e.which) {\r\n\t\t\tthis.downEvent = null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Handles `mouseover` [events]{@glossary event}.\r\n\t*\r\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\r\n\t* @public\r\n\t*/\r\n\tover: function(evt) {\r\n\t\tvar e = gestureUtil.makeEvent('enter', evt);\r\n\t\tdispatcher.dispatch(e);\r\n\t},\r\n\r\n\t/**\r\n\t* Handles `mouseout` [events]{@glossary event}.\r\n\t*\r\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\r\n\t* @public\r\n\t*/\r\n\tout: function(evt) {\r\n\t\tvar e = gestureUtil.makeEvent('leave', evt);\r\n\t\tdispatcher.dispatch(e);\r\n\t},\r\n\r\n\t/**\r\n\t* Generates `tap` [events]{@glossary event}.\r\n\t*\r\n\t* @param {Event} evt - The standard {@glossary event} [object]{glossary Object}.\r\n\t* @public\r\n\t*/\r\n\tsendTap: function(evt, target) {\r\n\t\tvar e = gestureUtil.makeEvent('tap', evt);\r\n\t\te.target = target;\r\n\t\tdispatcher.dispatch(e);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttapData: {\r\n\t\tid: null,\r\n\t\ttimer: null,\r\n\t\tstart: 0\r\n\t},\r\n\r\n\t/**\r\n\t* Global configuration for double tap support. If this is true, all tap events for Controls\r\n\t* that do not have {@link module:enyo/Control~Control#doubleTapEnabled} explicitly set to false will be\r\n\t* delayed by the {@link module:enyo/Control~Control#doubleTapInterval}.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default  false\r\n\t* @public\r\n\t*/\r\n\tdoubleTapEnabled: false,\r\n\r\n\t/**\r\n\t* Determines if the provided target node supports double tap events\r\n\t*\r\n\t* @param {Node} target\r\n\t* @return {Boolean}\r\n\t* @private\r\n\t*/\r\n\tsupportsDoubleTap: function(target) {\r\n\t\tvar obj = dispatcher.findDispatchTarget(target);\r\n\r\n\t\tif(obj) {\r\n\t\t\t// Control.doubleTapEnabled is a tri-value property. The default is 'inherit'\r\n\t\t\t// which takes its cue from gesture's doubleTapEnabled. Values of true or false\r\n\t\t\t// override the default. So, if the global is true, any truthy value on Control\r\n\t\t\t// results in true. If the global is false, only an explicit true on Control\r\n\t\t\t// results in true.\r\n\t\t\treturn this.doubleTapEnabled? !!obj.doubleTapEnabled : obj.doubleTapEnabled === true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdoubleTap: function(evt, t) {\r\n\t\tvar obj = dispatcher.findDispatchTarget(t);\r\n\r\n\t\tif(this.tapData.id !== obj.id) {\t// this is the first tap\r\n\t\t\tthis.resetTapData(true);\r\n\r\n\t\t\tthis.tapData.id = obj.id;\r\n\t\t\tthis.tapData.event = evt;\r\n\t\t\tthis.tapData.target = t;\r\n\t\t\tthis.tapData.timer = setTimeout(utils.bind(this, \"resetTapData\", true), obj.doubleTapInterval);\r\n\t\t\tthis.tapData.start = utils.perfNow();\r\n\t\t} else {\t\t\t\t\t\t\t// this is the double tap\r\n\t\t\tvar e2 = gestureUtil.makeEvent('doubletap', evt);\r\n\t\t\te2.target = t;\r\n\t\t\te2.tapInterval = utils.perfNow() - this.tapData.start;\r\n\t\t\tthis.resetTapData(false);\r\n\t\t\tdispatcher.dispatch(e2);\r\n\t\t}\r\n\t},\r\n\r\n\tresetTapData: function(sendTap) {\r\n\t\tvar data = this.tapData;\r\n\r\n\t\tif(sendTap && data.id) {\r\n\t\t\tthis.sendTap(data.event, data.target);\r\n\t\t}\r\n\r\n\t\tclearTimeout(data.timer);\r\n\t\tdata.id = data.start = data.event = data.target = data.timer = null;\r\n\t},\r\n\r\n\t/**\r\n\t* Given two [DOM nodes]{@glossary Node}, searches for a shared ancestor (looks up\r\n\t* the hierarchic [DOM]{@glossary DOM} tree of [nodes]{@glossary Node}). The shared\r\n\t* ancestor node is returned.\r\n\t*\r\n\t* @param {Node} controlA - Control one.\r\n\t* @param {Node} controlB - Control two.\r\n\t* @returns {(Node|undefined)} The shared ancestor.\r\n\t* @public\r\n\t*/\r\n\tfindCommonAncestor: function(controlA, controlB) {\r\n\t\tvar p = controlB;\r\n\t\twhile (p) {\r\n\t\t\tif (this.isTargetDescendantOf(controlA, p)) {\r\n\t\t\t\treturn p;\r\n\t\t\t}\r\n\t\t\tp = p.parentNode;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Given two controls, returns `true` if the `child` is inside the `parent`.\r\n\t*\r\n\t* @param {Node} child - The child to search for.\r\n\t* @param {Node} parent - The expected parent.\r\n\t* @returns {(Boolean|undefined)} `true` if the `child` is actually a child of `parent`.\r\n\t*/\r\n\tisTargetDescendantOf: function(child, parent) {\r\n\t\tvar c = child;\r\n\t\twhile(c) {\r\n\t\t\tif (c == parent) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tc = c.parentNode;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @todo I'd rather refine the public API of gesture rather than simply forwarding the internal\r\n\t*   drag module but this will work in the interim. - ryanjduffy\r\n\t*\r\n\t* Known Consumers:\r\n\t*  - Spotlight.onAcceleratedKey - (prepare|begin|end)Hold()\r\n\t*  - Moonstone - configureHoldPulse()\r\n\t*/\r\n\tdrag: drag\r\n};\r\n\r\n/**\r\n* Contains various methods for gesture events.\r\n*\r\n* @type {object}\r\n* @public\r\n*/\r\nmodule.exports.events = {\r\n\t/**\r\n\t* Shortcut to [gesture.down()]{@link module:enyo/gesture#down}.\r\n\t*\r\n\t* @memberof! module:enyo/gesture#\r\n\t* @method events.mousedown\r\n\t* @public\r\n\t*/\r\n\tmousedown: function(e) {\r\n\t\tgesture.down(e);\r\n\t},\r\n\r\n\t/**\r\n\t* Shortcut to [gesture.up()]{@link module:enyo/gesture#up}.\r\n\t*\r\n\t* @memberof! module:enyo/gesture#\r\n\t* @method events.mouseup\r\n\t* @public\r\n\t*/\r\n\tmouseup: function(e) {\r\n\t\tgesture.up(e);\r\n\t},\r\n\r\n\t/**\r\n\t* Shortcut to [gesture.move()]{@link module:enyo/gesture#move}.\r\n\t*\r\n\t* @memberof! module:enyo/gesture#\r\n\t* @method events.mousemove\r\n\t* @public\r\n\t*/\r\n\tmousemove:  function(e) {\r\n\t\tgesture.move(e);\r\n\t},\r\n\r\n\t/**\r\n\t* Shortcut to [gesture.over()]{@link module:enyo/gesture#over}.\r\n\t*\r\n\t* @memberof! module:enyo/gesture#\r\n\t* @method events.mouseover\r\n\t* @public\r\n\t*/\r\n\tmouseover:  function(e) {\r\n\t\tgesture.over(e);\r\n\t},\r\n\r\n\t/**\r\n\t* Shortcut to [gesture.out()]{@link module:enyo/gesture#out}.\r\n\t*\r\n\t* @memberof! module:enyo/gesture#\r\n\t* @method events.mouseout\r\n\t* @public\r\n\t*/\r\n\tmouseout:  function(e) {\r\n\t\tgesture.out(e);\r\n\t}\r\n};\r\n\r\n// Firefox mousewheel handling\r\ndom.requiresWindow(function() {\r\n\tif (document.addEventListener) {\r\n\t\tdocument.addEventListener('DOMMouseScroll', function(inEvent) {\r\n\t\t\tvar e = utils.clone(inEvent),\r\n\t\t\t\tisVertical = e.VERTICAL_AXIS == e.axis,\r\n\t\t\t\twheelDelta;\r\n\t\t\te.preventDefault = function() {\r\n\t\t\t\tinEvent.preventDefault();\r\n\t\t\t};\r\n\t\t\te.type = 'mousewheel';\r\n\r\n\t\t\twheelDelta = e.detail * -40;\r\n\t\t\te.wheelDeltaY = isVertical ? wheelDelta : 0;\r\n\t\t\te.wheelDeltaX = isVertical ? 0 : wheelDelta;\r\n\r\n\t\t\tdispatcher.dispatch(e);\r\n\t\t}, false);\r\n\t}\r\n});\r\n\r\n/**\r\n* @private\r\n*/\r\nvar handlers = {\r\n\ttouchstart: true,\r\n\ttouchmove: true,\r\n\ttouchend: true\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\ndispatcher.features.push(function (e) {\r\n\tvar type = e.type;\r\n\r\n\t// NOTE: beware of properties in gesture.events and drag inadvertently mapped to event types\r\n\tif (gesture.events[type]) {\r\n\t\tgesture.events[type](e);\r\n\t}\r\n\tif (!platform.gesture && platform.touch && handlers[type]) {\r\n\t\ttouchGestures[type](e);\r\n\t}\r\n\tif (drag[type]) {\r\n\t\tdrag[type](e);\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Router~Router} kind.\r\n* @module enyo/Router\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils'),\r\n\tready = require('./ready'),\r\n\tdispatcher = require('./dispatcher');\r\n\r\nvar\r\n\tController = require('./Controller'),\r\n\tEnyoHistory = require('./History');\r\n\r\n/**\r\n* Any instance of a router will be referenced here for the global hash change handler.\r\n*\r\n* @private\r\n*/\r\nvar listeners = [];\r\n\r\n/**\r\n* This is the intended global `window.hashchange` event handler. If another handler is\r\n* arbitrarily registered for this event, then it will not fire.\r\n*\r\n* @private\r\n*/\r\nvar hashDidChange = function (hash) {\r\n\tvar list = listeners;\r\n\tvar len = list.length;\r\n\tvar idx = 0;\r\n\tfor (; idx < len; ++idx) {\r\n\t\tlist[idx]._hashChanged(hash);\r\n\t}\r\n};\r\n\r\n/*\r\n* @private\r\n*/\r\nvar token = /\\:[a-zA-Z0-9]*/g;\r\n\r\n/*\r\n* @private\r\n*/\r\nvar prepare = function (str) {\r\n\treturn str[0] === '#'? str.slice(1): str;\r\n};\r\n\r\n/**\r\n* All of our actively-supported browsers support this method of registering\r\n* for `hashchange` events.\r\n*\r\n* @private\r\n*/\r\nready(function () {\r\n\tdispatcher.listen(global, 'hashchange', hashDidChange);\r\n});\r\n\r\n/**\r\n* {@link module:enyo/Router~Router} is a controller with the ability to interpret changes in\r\n* the URL and make changes to the URL in a manner that is compatible across\r\n* browsers. With defined route handling, the application state can be managed\r\n* more closely with respect to the location state of the browser. There may be\r\n* multiple router instances active at any one time. Routers only interact with\r\n* the hash portion of the browser location and will not force a reload of the\r\n* current page.\r\n*\r\n* [Routes]{@link module:enyo/Router~Router#routes} may be defined in several ways and\r\n* may be added at startup or [added programmatically]{@link module:enyo/Router~Router#addRoute}\r\n* at a later time.\r\n*\r\n* A route is a declarative hash with the following structure:\r\n*\r\n* ```\r\n* {path: 'some/path', handler: 'function', context: 'context'}\r\n* ```\r\n*\r\n* The `path` is a string that may be static (explicitly matched) or dynamic\r\n* (matched based on dynamic placeholders). Dynamic paths may name elements to\r\n* be matched, e.g.:\r\n*\r\n* ```\r\n* {path: ':user/:id'}\r\n* ```\r\n*\r\n* In this case, `handler` would be called with two parameters filled with\r\n* the values matched by that structure. It is important to note that a dynamic\r\n* route will apply the first match it finds, so care must be taken to ensure\r\n* that the correct route is matched (e.g., `/users/:user/:id` is more exact\r\n* because it includes the static `users` portion of the path).\r\n*\r\n* `handler` may be a function reference or a string that will be mapped to a\r\n* function. A check for the function's existence is conducted first on the\r\n* router, then on any provided context, and finally in the global scope. If a\r\n* context is provided, the function will be executed under that context\r\n* regardless of where the function was found.\r\n*\r\n* The `context` property may be an object, an instance, or a string that will\r\n* be mapped to an object, if possible.\r\n*\r\n* Note that, currently, only letters and numbers are supported in dynamic routes.\r\n* \r\n* @class Router\r\n* @extends module:enyo/Controller~Controller\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Router~Router.prototype */ {\r\n\r\n\tname: 'enyo.Router',\r\n\r\n\t// ...........................\r\n\t// PUBLIC PROPERTIES\r\n\r\n\t/**\r\n\t* If `true`, the router will respond to hash changes or internal events. If this flag is set\r\n\t* to `false`, it will stop responding. This may be changed at any time.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tlistening: true,\r\n\r\n\t/**\r\n\t* If `true`, the router will neither respond to hash changes in the browser\r\n\t* nor be able to trigger them. Instead, the router may be used internally to\r\n\t* maintain or trigger state changes in an application without changing\r\n\t* location.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tinternalOnly: false,\r\n\r\n\t/**\r\n\t* Set this to `true` to force the current browser location to a particular\r\n\t* path on startup. This flag will be ignored if\r\n\t* [triggerOnStart]{@link module:enyo/Router~Router#triggerOnStart} is `false`.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tdefaultPathOnStart: false,\r\n\r\n\t/**\r\n\t* The `defaultRoute` should have the same structure as a normal route (hash). It may be\r\n\t* arbitrarily assigned to this property or mixed into the\r\n\t* [routes]{@link module:enyo/Router~Router#routes} array with a special `default: true` flag set. For\r\n\t* any unmatched hash changes, this route will be executed and passed the path that was not\r\n\t* matched.\r\n\t*\r\n\t* @type {Object}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tdefaultRoute: null,\r\n\r\n\t/**\r\n\t* By default, when a router is created, it will attempt to trigger the correct route for the\r\n\t* current browser location. Set this flag to `false` to prevent this behavior.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\ttriggerOnStart: true,\r\n\r\n\t/**\r\n\t* The router will attempt to track history based on the events that have been generated\r\n\t* through it. This allows the usage of the browser's 'Back' and 'Forward' buttons.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tuseHistory: false,\r\n\r\n\t/**\r\n\t* The `routes` [array]{@glossary Array} specifies the handlers for\r\n\t* the current Router instance. Routes are string paths, static or dynamic,\r\n\t* that route particular `hashchange` events. They are defined in an array of\r\n\t* [hashes]{@glossary Object} with a `handler` (function name), `path`\r\n\t* (for static and dynamic paths), an optional `context` (for the `handler`),\r\n\t* or a `default` Boolean `true`|`false` value indicating whether the handler\r\n\t* should be used when no other route can handle the `hashchange` event.\r\n\t*\r\n\t* @example\r\n\t* routes: [\r\n\t*     {path: 'users/:userName', handler: 'loadUser'},\r\n\t*     {path: 'users', handler: 'usersIndex'},\r\n\t*     {path: 'about/moreDetail', handler: 'detailedAboutScreen'},\r\n\t*     {path: 'about', handler: 'aboutScreen'},\r\n\t*     {path: 'home', handler: 'homeScreen', default: true},\r\n\t*     {path: '', handler: 'handleBlankRoute'}\r\n\t* ]\r\n\t*\r\n\t* @type {Array}\r\n\t* @public\r\n\t*/\r\n\troutes: null,\r\n\r\n\t// ...........................\r\n\t// PROTECTED PROPERTIES\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\tkind: Controller,\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_staticRoutes: null,\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_dynamicRoutes: null,\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_current: '',\r\n\r\n\t// ...........................\r\n\t// COMPUTED PROPERTIES\r\n\r\n\tcomputed: [\r\n\t\t{method: 'location', path: '_current', config: {cached: true}},\r\n\t\t{method: 'defaultPath'}\r\n\t],\r\n\r\n\t/**\r\n\t* A computed property that returns the location as known by this router. This property\r\n\t* will be synchronized with [window.location.hash]{@glossary window.location}\r\n\t* unless the [internalOnly]{@link module:enyo/Router~Router#internalOnly} flag is set to `true`.\r\n\t* Passing a string to this property via `_set('location', 'mylocation')` will update the\r\n\t* inner location known by this router.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tlocation: function (loc) {\r\n\t\tif (loc) {\r\n\t\t\tloc = prepare(loc);\r\n\t\t\tif (!this.internalOnly) {\r\n\t\t\t\tutils.asyncMethod(this, 'trigger', {location: loc, change: true});\r\n\t\t\t} else {\r\n\t\t\t\tthis.set('_current', loc);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn prepare(this.get('_current'));\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the string for the default path, or an empty string if no default\r\n\t* path exists.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tdefaultPath: function () {\r\n\t\treturn this.defaultRoute ? this.defaultRoute.path: '';\r\n\t},\r\n\r\n\t// ...........................\r\n\t// PUBLIC METHODS\r\n\r\n\t/**\r\n\t* Triggers a change without necessarily requiring a change to occur. If\r\n\t* called without a parameter, it will force the route that matches the\r\n\t* current browser location to fire. If a string is passed in, this method\r\n\t* will trigger an internal-only event (i.e., the browser location will not\r\n\t* be changed). If it is passed a hash, the method will try to use a\r\n\t* `location` property while looking for optional `change` and `global`\r\n\t* properties.\r\n\t*\r\n\t* If the `change` property is present and `true`, it will force a\r\n\t* [location.hash]{@glossary window.location} change in the\r\n\t* browser (this is always global). If the `global` property is present and\r\n\t* `true` and `change` is not present or `false`, it will trigger an internal\r\n\t* event that all routers will respond to (not just this instance).\r\n\t*\r\n\t* @public\r\n\t*/\r\n\ttrigger: function (params) {\r\n\t\tif (!params) {\r\n\t\t\tparams = {location: this.get('_current')};\r\n\t\t} else if ('string' === typeof params) {\r\n\t\t\tparams = {location: params};\r\n\t\t}\r\n\t\tvar loc = params.location;\r\n\t\tvar isGlobal = params.global;\r\n\t\tvar change = params.change;\r\n\t\tvar current = this.get('location');\r\n\t\tif (change) {\r\n\t\t\tif (current !== loc) {\r\n\t\t\t\tif (EnyoHistory.isSupported()) {\r\n\t\t\t\t\tthis.addHistory(loc);\r\n\t\t\t\t\tthis._hashChanged(loc);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tglobal.location.hash = loc;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._hashChanged(loc);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (isGlobal) {\r\n\t\t\t\thashDidChange(loc);\r\n\t\t\t} else {\r\n\t\t\t\tthis._hashChanged(loc);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* In very rare circumstances, it may be useful to pass a path to the\r\n\t* [routes]{@link module:enyo/Router~Router#routes} without using\r\n\t* [trigger()]{@link module:enyo/Router~Router#trigger} or global hash changes with\r\n\t* `path` being a string that will be evaluated against the routes owned by\r\n\t* this router.\r\n\t*\r\n\t* @param {String} path - A path to test against this router's\r\n\t*\t[routes]{@link module:enyo/Router~Router#routes}.\r\n\t* @public\r\n\t*/\r\n\thandle: function (path) {\r\n\t\t// fast track is to check against static routes first\r\n\t\tif (this._handleStatic(path)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// then we check against dynamic paths in this simple scheme\r\n\t\telse if (this._handleDynamic(path)) {\r\n\t\t\t/* do nothing */\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._handleDefault(path);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* If history is enabled and some history exists, attempts to revert the\r\n\t* current known location to the previous one in the stack.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tback: function () {\r\n\t\tif (this.useHistory) {\r\n\t\t\tEnyoHistory.pop();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Arbitrarily adds history at the lowest (first) position in the stack. Returns callee for\r\n\t* chaining.\r\n\t*\r\n\t* @param {String} location - The location string to add to the history.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\taddHistory: function (location) {\r\n\t\tif (this.useHistory) {\r\n\t\t\tif (location[0] !== '#') location = '#' + location;\r\n\t\t\tEnyoHistory.push({context: this, handler: '_handlePopHistory', location: location});\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Clears any history the router has stored. Returns callee for chaining.\r\n\t*\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tclearHistory: function () {\r\n\t\tEnyoHistory.clear();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* May be used to programmatically add [routes]{@link module:enyo/Router~Router#routes}\r\n\t* to the router. `route` is a hash as described by the\r\n\t* [routes]{@link module:enyo/Router~Router#routes} array. Returns callee for chaining.\r\n\t*\r\n\t* @param {Object} route - The route to add.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\taddRoute: function (route) {\r\n\t\tvar statics = this._staticRoutes;\r\n\t\tvar dynamic = this._dynamicRoutes;\r\n\t\tvar regex;\r\n\t\tif (true === route['default']) {\r\n\t\t\tthis.defaultRoute = route;\r\n\t\t}\r\n\t\telse if (token.test(route.path)) {\r\n\t\t\ttoken.lastIndex = 0;\r\n\t\t\t// regex = new RegExp(route.path.replace(token, '([a-zA-Z0-9-]*)'));\r\n\t\t\tregex = new RegExp(route.path.replace(token, '([a-zA-Z0-9-.]*)'));\r\n\t\t\troute.regex = regex;\r\n\t\t\tdynamic.push(route);\r\n\t\t} else {\r\n\t\t\tstatics[route.path] = route;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// ...........................\r\n\t// PROTECTED METHODS\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tthis._staticRoutes = {};\r\n\t\t\tthis._dynamicRoutes = [];\r\n\t\t\tthis.routes = this.routes || [];\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t// make sure to initialize our routes prior\r\n\t\t\t// to registering for events\r\n\t\t\tthis._setupRoutes();\r\n\t\t\t// make sure we're up to date\r\n\t\t\tthis.set('_current', prepare(window.location.hash));\r\n\t\t\t// ok, register for events\r\n\t\t\tlisteners.push(this);\r\n\t\t\t// ok, if we need to go ahead and route our current\r\n\t\t\t// location, lets do it, but let create finish first\r\n\t\t\tif (this.triggerOnStart) {\r\n\t\t\t\tif (this.defaultPathOnStart) {\r\n\t\t\t\t\tutils.asyncMethod(this, 'trigger', {change: true, location: this.get('defaultPath')});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tutils.asyncMethod(this, 'trigger');\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tvar idx = utils.indexOf(this, listeners);\r\n\t\t\tif (!~idx) {\r\n\t\t\t\tlisteners.splice(idx, 1);\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_hashChanged: function (hash) {\r\n\t\tvar $hash = (function (prop) {\r\n\t\t\tif (!utils.isString(prop)) {\r\n\t\t\t\t// some browsers do not support the newUrl property\r\n\t\t\t\t// so we're forced to look at the current hash\r\n\t\t\t\tprop = prop.newUrl || global.location.hash;\r\n\t\t\t}\r\n\t\t\treturn prepare(prop);\r\n\t\t})(hash);\r\n\t\tif (this.listening) {\r\n\t\t\tthis.set('_current', $hash);\r\n\t\t\tthis.handle($hash);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_handlePopHistory: function (entry) {\r\n\t\tif (this.listening) {\r\n\t\t\tvar location = prepare(entry.location);\r\n\t\t\tthis.handle(location);\r\n\t\t}\r\n\t},\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_execHandler: function (context, handler, args, route) {\r\n\t\tvar $fn = handler;\r\n\t\tvar $ctx = 'string' === typeof context? utils.getPath.call(this, context): context;\r\n\t\t// if the handler is defined as a string, we need to determine if it is relative to the\r\n\t\t// router, relative to the owner, relative to the context, or a named function in the\r\n\t\t// global scope\r\n\t\tif ('string' === typeof handler) {\r\n\t\t\tif (typeof this[handler] === 'function') {\r\n\t\t\t\t$fn = this[handler];\r\n\t\t\t\t$ctx = $ctx || this;\r\n\t\t\t} else if (typeof this.owner[handler] === 'function') {\r\n\t\t\t\t$fn = this.owner[handler];\r\n\t\t\t\t$ctx = $ctx || this.owner;\r\n\t\t\t} else if (typeof $ctx[handler] === 'function') {\r\n\t\t\t\t$fn = $ctx[handler];\r\n\t\t\t}\r\n\t\t\tif ('function' === typeof $fn) {\r\n\t\t\t\t// in case we actually found it, let's not go hunting\r\n\t\t\t\t// next time\r\n\t\t\t\troute.handler = $fn;\r\n\t\t\t\troute.context = $ctx;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// if we have an actual handler, let's execute it now\r\n\t\tif ($fn && 'function' === typeof $fn) {\r\n\t\t\t$fn.apply($ctx, args);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t// otherwise we couldn't determine what we were supposed to\r\n\t\t// do here\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_handleStatic: function (path) {\r\n\t\tvar statics = this._staticRoutes;\r\n\t\tvar route;\r\n\t\tvar handler;\r\n\t\tvar context;\r\n\t\tif ((route = statics[path])) {\r\n\t\t\thandler = route.handler;\r\n\t\t\tcontext = route.context;\r\n\t\t\treturn this._execHandler(context, handler, [path], route);\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_handleDynamic: function (path) {\r\n\t\tvar dynamic = this._dynamicRoutes;\r\n\t\tvar regex;\r\n\t\tvar route;\r\n\t\tvar handler;\r\n\t\tvar context;\r\n\t\tvar matches;\r\n\t\tvar idx = 0;\r\n\t\tvar len = dynamic.length;\r\n\t\tfor (; idx < len; ++idx) {\r\n\t\t\troute = dynamic[idx];\r\n\t\t\tregex = route.regex;\r\n\t\t\tif ((matches = regex.exec(path))) {\r\n\t\t\t\t// we need to strip off the full match so we can\r\n\t\t\t\t// use the other matches as parameters\r\n\t\t\t\tmatches = matches.slice(1);\r\n\t\t\t\thandler = route.handler;\r\n\t\t\t\tcontext = route.context;\r\n\t\t\t\treturn this._execHandler(context, handler, matches, route);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_handleDefault: function (path) {\r\n\t\tvar route = this.defaultRoute || {};\r\n\t\tvar context = route.context;\r\n\t\tvar handler = route.handler;\r\n\t\treturn this._execHandler(context, handler, [path], route);\r\n\t},\r\n\r\n\t/*\r\n\t* @private\r\n\t*/\r\n\t_setupRoutes: function () {\r\n\t\tvar routes = this.routes;\r\n\t\tvar idx = 0;\r\n\t\tvar len = routes.length;\r\n\t\tvar route;\r\n\t\tfor (; idx < len; ++idx) {\r\n\t\t\troute = routes[idx];\r\n\t\t\tif (!route) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.addRoute(route);\r\n\t\t}\r\n\t},\r\n\r\n\t_currentChanged: function (was, is) {\r\n\t\tthis.log(was, is);\r\n\t}\r\n\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Control~Control} kind.\r\n* @module enyo/Control\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind'),\r\n\tutils = require('../utils'),\r\n\tplatform = require('../platform'),\r\n\tdispatcher = require('../dispatcher'),\r\n\toptions = require('../options'),\r\n\troots = require('../roots');\r\n\r\nvar\r\n\tAccessibilitySupport = require('../AccessibilitySupport'),\r\n\tUiComponent = require('../UiComponent'),\r\n\tHTMLStringDelegate = require('../HTMLStringDelegate'),\r\n\tDom = require('../dom');\r\n\r\nvar\r\n\tfullscreen = require('./fullscreen'),\r\n\tFloatingLayer = require('./floatingLayer');\r\n\r\n// While the namespace isn't needed here, gesture is required for ontap events for which Control\r\n// has a handler. Bringing them all in now for the time being.\r\nrequire('../gesture');\r\n\r\nvar nodePurgatory;\r\n\r\n/**\r\n* Called by `Control.teardownRender()`. In certain circumstances,\r\n* we need to temporarily keep a DOM node around after tearing down\r\n* because we're still acting on a stream of touch events emanating\r\n* from the node. See `Control.retainNode()` for more information.\r\n*\r\n* @private\r\n*/\r\nfunction storeRetainedNode (control) {\r\n\tvar p = getNodePurgatory(),\r\n\t\tn = control._retainedNode;\r\n\tif (n) {\r\n\t\tp.appendChild(n);\r\n\t}\r\n\tcontrol._retainedNode = null;\r\n}\r\n\r\n/**\r\n* Called (via a callback) when it's time to release a DOM node\r\n* that we've retained.\r\n*\r\n* @private\r\n*/\r\nfunction releaseRetainedNode (retainedNode) {\r\n\tvar p = getNodePurgatory();\r\n\tif (retainedNode) {\r\n\t\tp.removeChild(retainedNode);\r\n\t}\r\n}\r\n\r\n/**\r\n* Lazily add a hidden `<div>` to `document.body` to serve as a\r\n* container for retained DOM nodes.\r\n*\r\n* @private\r\n*/\r\nfunction getNodePurgatory () {\r\n\tvar p = nodePurgatory;\r\n\tif (!p) {\r\n\t\tp = nodePurgatory = document.createElement(\"div\");\r\n\t\tp.id = \"node_purgatory\";\r\n\t\tp.style.display = \"none\";\r\n\t\tdocument.body.appendChild(p);\r\n\t}\r\n\treturn p;\r\n}\r\n\r\n/**\r\n* {@link module:enyo/Control~Control} is a [component]{@link module:enyo/UiComponent~UiComponent} that controls\r\n* a [DOM]{@glossary DOM} [node]{@glossary Node} (i.e., an element in the user\r\n* interface). Controls are generally visible and the user often interacts with\r\n* them directly. While things like buttons and input boxes are obviously\r\n* controls, in Enyo, a control may be as simple as a text item or as complex\r\n* as an entire application. Both inherit the same basic core capabilities from\r\n* this kind.\r\n*\r\n* For more information, see the documentation on\r\n* [Controls]{@linkplain $dev-guide/key-concepts/controls.html} in the\r\n* Enyo Developer Guide.\r\n*\r\n* **If you make changes to `enyo/Control`, be sure to add or update the\r\n* appropriate unit tests.**\r\n*\r\n* @class Control\r\n* @extends module:enyo/UiComponent~UiComponent\r\n* @ui\r\n* @public\r\n*/\r\nvar Control = module.exports = kind(\r\n\t/** @lends module:enyo/Control~Control.prototype */ {\r\n\r\n\tname: 'enyo.Control',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: UiComponent,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmixins: options.accessibility ? [AccessibilitySupport] : null,\r\n\r\n\t/**\r\n\t* @type {String}\r\n\t* @default 'module:enyo/Control~Control'\r\n\t* @public\r\n\t*/\r\n\tdefaultKind: null, // set after the fact\r\n\r\n\t/**\r\n\t* The [DOM node]{@glossary DOM} tag name that should be created.\r\n\t*\r\n\t* @type {String}\r\n\t* @default 'div'\r\n\t* @public\r\n\t*/\r\n\ttag: 'div',\r\n\r\n\t/**\r\n\t* A [hash]{@glossary Object} of attributes to be applied to the created\r\n\t* [DOM]{@glossary DOM} node.\r\n\t*\r\n\t* @type {Object}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tattributes: null,\r\n\r\n\t/**\r\n\t* [Boolean]{@glossary Boolean} flag indicating whether this element should\r\n\t* \"fit\", or fill its container's size.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tfit: null,\r\n\r\n\t/**\r\n\t* [Boolean]{@glossary Boolean} flag indicating whether HTML is allowed in\r\n\t* this control's [content]{@link module:enyo/Control~Control#content} property. If `false`\r\n\t* (the default), HTML will be encoded into [HTML entities]{@glossary entity}\r\n\t* (e.g., `&lt;` and `&gt;`) for literal visual representation.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tallowHtml: false,\r\n\r\n\t/**\r\n\t* Mimics the HTML `style` attribute.\r\n\t*\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\tstyle: '',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkindStyle: '',\r\n\r\n\t/**\r\n\t* Mimics the HTML `class` attribute.\r\n\t*\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\tclasses: '',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkindClasses: '',\r\n\r\n\t/**\r\n\t* [Classes]{@link module:enyo/Control~Control#classes} that are applied to all controls.\r\n\t*\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\tcontrolClasses: '',\r\n\r\n\t/**\r\n\t* The text-based content of the Control. If the [allowHtml]{@link module:enyo/Control~Control#allowHtml}\r\n\t* flag is set to `true`, you may set this property to an HTML string.\r\n\t* @public\r\n\t*/\r\n\tcontent: '',\r\n\r\n\t/**\r\n\t* If true or 'inherit' and enyo/gesture#doubleTabEnabled == true, will fire a doubletap\r\n\t* event, and will temporarily suppress a single tap while waiting for a double tap.\r\n\t*\r\n\t* @type {String|Boolean}\r\n\t* @default 'inherit'\r\n\t* @public\r\n\t*/\r\n\tdoubleTapEnabled: 'inherit',\r\n\r\n\t/**\r\n\t* Time in milliseconds to wait to detect a double tap\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 300\r\n\t* @public\r\n\t*/\r\n\tdoubleTapInterval: 300,\r\n\r\n\t/**\r\n\t* If set to `true`, the [control]{@link module:enyo/Control~Control} will not be rendered until its\r\n\t* [showing]{@link module:enyo/Control~Control#showing} property has been set to `true`. This can be used\r\n\t* directly or is used by some widgets to control when children are rendered.\r\n\t*\r\n\t* It is important to note that setting this to `true` will _force_\r\n\t* [canGenerate]{@link module:enyo/Control~Control#canGenerate} and [showing]{@link module:enyo/Control~Control#showing}\r\n\t* to be `false`. Arbitrarily modifying the values of these properties prior to its initial\r\n\t* render may have unexpected results.\r\n\t*\r\n\t* Once a control has been shown/rendered with `renderOnShow` `true` the behavior will not\r\n\t* be used again.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\trenderOnShow: false,\r\n\r\n\t/**\r\n\t* @todo Find out how to document \"handlers\".\r\n\t* @public\r\n\t*/\r\n\thandlers: {\r\n\t\tontap: 'tap',\r\n\t\tonShowingChanged: 'showingChangedHandler'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstrictlyInternalEvents: {onenter: 1, onleave: 1},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tisInternalEvent: function (event) {\r\n\t\tvar rdt = dispatcher.findDispatchTarget(event.relatedTarget);\r\n\t\treturn rdt && rdt.isDescendantOf(this);\r\n\t},\r\n\r\n\t// .................................\r\n\t// DOM NODE MANIPULATION API\r\n\r\n\t/**\r\n\t* Gets the bounds for this control. The `top` and `left` properties returned\r\n\t* by this method represent the control's positional distance in pixels from\r\n\t* either A) the first parent of this control that is absolutely or relatively\r\n\t* positioned, or B) the `document.body`.\r\n\t*\r\n\t* This is a shortcut convenience method for {@link module:enyo/dom#getBounds}.\r\n\t*\r\n\t* @returns {Object} An [object]{@glossary Object} containing `top`, `left`,\r\n\t* `width`, and `height` properties.\r\n\t* @public\r\n\t*/\r\n\tgetBounds: function () {\r\n\t\tvar node = this.hasNode(),\r\n\t\t\tbounds = node && Dom.getBounds(node);\r\n\r\n\t\treturn bounds || {left: undefined, top: undefined, width: undefined, height: undefined};\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the absolute/relative position and/or size for this control. Values\r\n\t* of `null` or `undefined` for the `bounds` properties will be ignored. You\r\n\t* may optionally specify a `unit` (i.e., a valid CSS measurement unit) as a\r\n\t* [string]{@glossary String} to be applied to each of the position/size\r\n\t* assignments.\r\n\t*\r\n\t* @param {Object} bounds - An [object]{@glossary Object}, optionally\r\n\t* containing one or more of the following properties: `width`, `height`,\r\n\t* `top`, `right`, `bottom`, and `left`.\r\n\t* @param {String} [unit='px']\r\n\t* @public\r\n\t*/\r\n\tsetBounds: function (bounds, unit) {\r\n\t\tvar newStyle = '',\r\n\t\t\textents = ['width', 'height', 'left', 'top', 'right', 'bottom'],\r\n\t\t\ti = 0,\r\n\t\t\tval,\r\n\t\t\text;\r\n\r\n\t\t// if no unit is supplied, we default to pixels\r\n\t\tunit = unit || 'px';\r\n\r\n\t\tfor (; (ext = extents[i]); ++i) {\r\n\t\t\tval = bounds[ext];\r\n\t\t\tif (val || val === 0) {\r\n\t\t\t\tnewStyle += (ext + ':' + val + (typeof val == 'string' ? '' : unit) + ';');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.set('style', this.style + newStyle);\r\n\t},\r\n\r\n\t/**\r\n\t* Gets the bounds for this control. The `top` and `left` properties returned\r\n\t* by this method represent the control's positional distance in pixels from\r\n\t* `document.body`. To get the bounds relative to this control's parent(s),\r\n\t* use [getBounds()]{@link module:enyo/Control~Control#getBounds}.\r\n\t*\r\n\t* This is a shortcut convenience method for {@link module:enyo/dom#getAbsoluteBounds}.\r\n\t*\r\n\t* @returns {Object} An [object]{@glossary Object} containing `top`, `left`,\r\n\t* `width`, and `height` properties.\r\n\t* @public\r\n\t*/\r\n\tgetAbsoluteBounds: function () {\r\n\t\tvar node = this.hasNode(),\r\n\t\t\tbounds = node && Dom.getAbsoluteBounds(node);\r\n\r\n\t\treturn bounds || {\r\n\t\t\tleft: undefined,\r\n\t\t\ttop: undefined,\r\n\t\t\twidth: undefined,\r\n\t\t\theight: undefined,\r\n\t\t\tbottom: undefined,\r\n\t\t\tright: undefined\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t* Shortcut method to set [showing]{@link module:enyo/Control~Control#showing} to `true`.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tshow: function () {\r\n\t\tthis.set('showing', true);\r\n\t},\r\n\r\n\t/**\r\n\t* Shortcut method to set [showing]{@link module:enyo/Control~Control#showing} to `false`.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\thide: function () {\r\n\t\tthis.set('showing', false);\r\n\t},\r\n\r\n\t/**\r\n\t* Sets this control to be [focused]{@glossary focus}.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tfocus: function () {\r\n\t\tif (this.hasNode()) this.node.focus();\r\n\t},\r\n\r\n\t/**\r\n\t* [Blurs]{@glossary blur} this control. (The opposite of\r\n\t* [focus()]{@link module:enyo/Control~Control#focus}.)\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tblur: function () {\r\n\t\tif (this.hasNode()) this.node.blur();\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether this control currently has the [focus]{@glossary focus}.\r\n\t*\r\n\t* @returns {Boolean} Whether this control has focus. `true` if the control\r\n\t* has focus; otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\thasFocus: function () {\r\n\t\tif (this.hasNode()) return document.activeElement === this.node;\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether this control's [DOM node]{@glossary Node} has been created.\r\n\t*\r\n\t* @returns {Boolean} Whether this control's [DOM node]{@glossary Node} has\r\n\t* been created. `true` if it has been created; otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\thasNode: function () {\r\n\t\treturn this.generated && (this.node || this.findNodeById());\r\n\t},\r\n\r\n\t/**\r\n\t* Gets the requested property (`name`) from the control's attributes\r\n\t* [hash]{@glossary Object}, from its cache of node attributes, or, if it has\r\n\t* yet to be cached, from the [node]{@glossary Node} itself.\r\n\t*\r\n\t* @param {String} name - The attribute name to get.\r\n\t* @returns {(String|null)} The value of the requested attribute, or `null`\r\n\t* if there isn't a [DOM node]{@glossary Node} yet.\r\n\t* @public\r\n\t*/\r\n\tgetAttribute: function (name) {\r\n\t\tvar node;\r\n\r\n\t\t// TODO: This is a fixed API assuming that no changes will happen to the DOM that\r\n\t\t// do not use it...original implementation of this method used the node's own\r\n\t\t// getAttribute method every time it could but we really only need to do that if we\r\n\t\t// weren't the ones that set the value to begin with -- in slow DOM situations this\r\n\t\t// could still be faster but it needs to be verified\r\n\t\tif (this.attributes.hasOwnProperty(name)) return this.attributes[name];\r\n\t\telse {\r\n\t\t\tnode = this.hasNode();\r\n\r\n\t\t\t// we store the value so that next time we'll know what it is\r\n\t\t\t/*jshint -W093 */\r\n\t\t\treturn (this.attributes[name] = (node ? node.getAttribute(name) : null));\r\n\t\t\t/*jshint +W093 */\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Assigns an attribute to a control's [node]{@glossary Node}. Assigning\r\n\t* `name` a value of `null`, `false`, or the empty string `(\"\")` will remove\r\n\t* the attribute from the node altogether.\r\n\t*\r\n\t* @param {String} name - Attribute name to assign/remove.\r\n\t* @param {(String|Number|null)} value - The value to assign to `name`\r\n\t* @returns {this} Callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tsetAttribute: function (name, value) {\r\n\t\tvar attrs = this.attributes,\r\n\t\t\tnode = this.hasNode(),\r\n\t\t\tdelegate = this.renderDelegate || Control.renderDelegate;\r\n\r\n\t\tif (name) {\r\n\t\t\tattrs[name] = value;\r\n\r\n\t\t\tif (node) {\r\n\t\t\t\tif (value == null || value === false || value === '') {\r\n\t\t\t\t\tnode.removeAttribute(name);\r\n\t\t\t\t} else node.setAttribute(name, value);\r\n\t\t\t}\r\n\r\n\t\t\tdelegate.invalidate(this, 'attributes');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Reads the `name` property directly from the [node]{@glossary Node}. You\r\n\t* may provide a default (`def`) to use if there is no node yet.\r\n\t*\r\n\t* @param {String} name - The [node]{@glossary Node} property name to get.\r\n\t* @param {*} def - The default value to apply if there is no node.\r\n\t* @returns {String} The value of the `name` property, or `def` if the node\r\n\t* was not available.\r\n\t* @public\r\n\t*/\r\n\tgetNodeProperty: function (name, def) {\r\n\t\treturn this.hasNode() ? this.node[name] : def;\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the value of a property (`name`) directly on the [node]{@glossary Node}.\r\n\t*\r\n\t* @param {String} name - The [node]{@glossary Node} property name to set.\r\n\t* @param {*} value - The value to assign to the property.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tsetNodeProperty: function (name, value) {\r\n\t\tif (this.hasNode()) this.node[name] = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Appends additional content to this control.\r\n\t*\r\n\t* @param {String} content - The new string to add to the end of the `content`\r\n\t* property.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\taddContent: function (content) {\r\n\t\treturn this.set('content', this.get('content') + content);\r\n\t},\r\n\r\n\t// .................................\r\n\r\n\t// .................................\r\n\t// STYLE/CLASS API\r\n\r\n\t/**\r\n\t* Determines whether this control has the class `name`.\r\n\t*\r\n\t* @param {String} name - The name of the class (or classes) to check for.\r\n\t* @returns {Boolean} Whether the control has the class `name`.\r\n\t* @public\r\n\t*/\r\n\thasClass: function (name) {\r\n\t\treturn name && (' ' + this.classes + ' ').indexOf(' ' + name + ' ') > -1;\r\n\t},\r\n\r\n\t/**\r\n\t* Adds the specified class to this control's list of classes.\r\n\t*\r\n\t* @param {String} name - The name of the class to add.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\taddClass: function (name) {\r\n\t\tvar classes = this.classes || '';\r\n\r\n\t\t// NOTE: Because this method accepts a string and for efficiency does not wish to\r\n\t\t// parse it to determine if it is actually multiple classes we later pull a trick\r\n\t\t// to keep it normalized and synchronized with our attributes hash and the node's\r\n\t\tif (name && !this.hasClass(name)) {\r\n\r\n\t\t\t// this is hooked\r\n\t\t\tthis.set('classes', classes + (classes ? (' ' + name) : name));\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Removes the specified class from this control's list of classes.\r\n\t*\r\n\t* **Note: It is not advisable to pass a string of multiple, space-delimited\r\n\t* class names into this method. Instead, call the method once for each class\r\n\t* name that you want to remove.**\r\n\t*\r\n\t* @param {String} name - The name of the class to remove.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tremoveClass: function (name) {\r\n\t\tvar classes = this.classes;\r\n\r\n\t\tif (name) {\r\n\t\t\tthis.set('classes', (' ' + classes + ' ').replace(' ' + name + ' ', ' ').trim());\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Adds or removes the specified class conditionally, based on the state\r\n\t* of the `add` argument.\r\n\t*\r\n\t* @param {String} name - The name of the class to add or remove.\r\n\t* @param {Boolean} add - If `true`, `name` will be added as a class; if\r\n\t* `false`, it will be removed.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\taddRemoveClass: function (name, add) {\r\n\t\treturn name ? this[add ? 'addClass' : 'removeClass'](name) : this;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclassesChanged: function () {\r\n\t\tvar classes = this.classes,\r\n\t\t\tnode = this.hasNode(),\r\n\t\t\tattrs = this.attributes,\r\n\t\t\tdelegate = this.renderDelegate || Control.renderDelegate;\r\n\r\n\t\tif (node) {\r\n\t\t\tif (classes || this.kindClasses) {\r\n\t\t\t\tnode.setAttribute('class', classes || this.kindClasses);\r\n\t\t\t} else node.removeAttribute('class');\r\n\r\n\t\t\tthis.classes = classes = node.getAttribute('class');\r\n\t\t}\r\n\r\n\t\t// we need to update our attributes.class value and flag ourselves to be\r\n\t\t// updated\r\n\t\tattrs['class'] = classes;\r\n\r\n\t\t// we want to notify the delegate that the attributes have changed in case it wants\r\n\t\t// to handle this is some special way\r\n\t\tdelegate.invalidate(this, 'attributes');\r\n\t},\r\n\r\n\t/**\r\n\t* Applies a CSS style directly to the control. Use the `prop` argument to\r\n\t* specify the CSS property name you'd like to set, and `value` to specify\r\n\t* the desired value. Setting `value` to `null` will remove the CSS property\r\n\t* `prop` altogether.\r\n\t*\r\n\t* @param {String} prop - The CSS property to assign.\r\n\t* @param {(String|Number|null|undefined)} value - The value to assign to\r\n\t* `prop`. Setting a value of `null`, `undefined`, or the empty string `(\"\")`\r\n\t* will remove the property `prop` from the control.\r\n\t* @returns {this} Callee for chaining.\r\n\t* @public\r\n\t*/\r\n\tapplyStyle: function (prop, value) {\r\n\r\n\t\t// NOTE: This method deliberately avoids calling set('style', ...) for performance\r\n\t\t// as it will have already been parsed by the browser so we pass it on via the\r\n\t\t// notification system which is the same\r\n\r\n\t\t// TODO: Wish we could delay this potentially...\r\n\t\t// if we have a node we render the value immediately and update our style string\r\n\t\t// in the process to keep them synchronized\r\n\t\tvar node = this.hasNode(),\r\n\t\t\tstyle = this.style,\r\n\t\t\tdelegate = this.renderDelegate || Control.renderDelegate;\r\n\r\n\t\t// FIXME: This is put in place for a Firefox bug where setting a style value of a node\r\n\t\t// via its CSSStyleDeclaration object (by accessing its node.style property) does\r\n\t\t// not work when using a CSS property name that contains one or more dash, and requires\r\n\t\t// setting the property via the JavaScript-style property name. This fix should be\r\n\t\t// removed once this issue has been resolved in the Firefox mainline and its variants\r\n\t\t// (it is currently resolved in the 36.0a1 nightly):\r\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=1083457\r\n\t\tif (node && (platform.firefox < 35 || platform.firefoxOS || platform.androidFirefox)) {\r\n\t\t\tprop = prop.replace(/-([a-z])/gi, function(match, submatch) {\r\n\t\t\t\treturn submatch.toUpperCase();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (value !== null && value !== '' && value !== undefined) {\r\n\t\t\t// update our current cached value\r\n\t\t\tif (node) {\r\n\t\t\t\tnode.style[prop] = value;\r\n\r\n\t\t\t\t// cssText is an internal property used to help know when to sync and not\r\n\t\t\t\t// sync with the node in styleChanged\r\n\t\t\t\tthis.style = this.cssText = node.style.cssText;\r\n\r\n\t\t\t\t// otherwise we have to try and prepare it for the next time it is rendered we\r\n\t\t\t\t// will need to update it because it will not be synchronized\r\n\t\t\t} else this.set('style', style + (' ' + prop + ':' + value + ';'));\r\n\t\t} else {\r\n\r\n\t\t\t// in this case we are trying to clear the style property so if we have the node\r\n\t\t\t// we let the browser handle whatever the value should be now and otherwise\r\n\t\t\t// we have to parse it out of the style string and wait to be rendered\r\n\r\n\t\t\tif (node) {\r\n\t\t\t\tnode.style[prop] = '';\r\n\t\t\t\tthis.style = this.cssText = node.style.cssText;\r\n\r\n\t\t\t\t// we need to invalidate the style for the delegate\r\n\t\t\t\tdelegate.invalidate(this, 'style');\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// this is a rare case to nullify the style of a control that is not\r\n\t\t\t\t// rendered or does not have a node\r\n\t\t\t\tstyle = style.replace(new RegExp(\r\n\t\t\t\t\t// This looks a lot worse than it is. The complexity stems from needing to\r\n\t\t\t\t\t// match a url container that can have other characters including semi-\r\n\t\t\t\t\t// colon and also that the last property may/may-not end with one\r\n\t\t\t\t\t'\\\\s*' + prop + '\\\\s*:\\\\s*[a-zA-Z0-9\\\\ ()_\\\\-\\'\"%,]*(?:url\\\\(.*\\\\)\\\\s*[a-zA-Z0-9\\\\ ()_\\\\-\\'\"%,]*)?\\\\s*(?:;|;?$)',\r\n\t\t\t\t\t'gi'\r\n\t\t\t\t),'');\r\n\t\t\t\tthis.set('style', style);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// we need to invalidate the style for the delegate -- regardless of whether or\r\n\t\t// not the node exists to ensure that the tag is updated properly the next time\r\n\t\t// it is rendered\r\n\t\tdelegate.invalidate(this, 'style');\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Allows the addition of several CSS properties and values at once, via a\r\n\t* single string, similar to how the HTML `style` attribute works.\r\n\t*\r\n\t* @param {String} css - A string containing one or more valid CSS styles.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\taddStyles: function (css) {\r\n\t\tvar key,\r\n\t\t\tnewStyle = '';\r\n\r\n\t\tif (typeof css == 'object') {\r\n\t\t\tfor (key in css) newStyle += (key + ':' + css[key] + ';');\r\n\t\t} else newStyle = css || '';\r\n\r\n\t\tthis.set('style', this.style + newStyle);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstyleChanged: function () {\r\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\r\n\r\n\t\t// if the cssText internal string doesn't match then we know style was set directly\r\n\t\tif (this.cssText !== this.style) {\r\n\r\n\t\t\t// we need to render the changes and synchronize - this means that the style\r\n\t\t\t// property was set directly so we will reset it prepending it with the original\r\n\t\t\t// style (if any) for the kind and keeping whatever the browser is keeping\r\n\t\t\tif (this.hasNode()) {\r\n\t\t\t\tthis.node.style.cssText = this.kindStyle + (this.style || '');\r\n\t\t\t\t// now we store the parsed version\r\n\t\t\t\tthis.cssText = this.style = this.node.style.cssText;\r\n\t\t\t}\r\n\r\n\t\t\t// we need to ensure that the delegate has an opportunity to handle this change\r\n\t\t\t// separately if it needs to\r\n\t\t\tdelegate.invalidate(this, 'style');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves a control's CSS property value. This doesn't just pull the\r\n\t* assigned value of `prop`; it returns the browser's understanding of `prop`,\r\n\t* the \"computed\" value. If the control isn't been rendered yet, and you need\r\n\t* a default value (such as `0`), include it in the arguments as `def`.\r\n\t*\r\n\t* @param {String} prop - The property name to get.\r\n\t* @param {*} [def] - An optional default value, in case the control isn't\r\n\t* rendered yet.\r\n\t* @returns {(String|Number)} The computed value of `prop`, as the browser\r\n\t* sees it.\r\n\t* @public\r\n\t*/\r\n\tgetComputedStyleValue: function (prop, def) {\r\n\t\treturn this.hasNode() ? Dom.getComputedStyleValue(this.node, prop) : def;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfindNodeById: function () {\r\n\t\treturn this.id && (this.node = Dom.byId(this.id));\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tidChanged: function (was) {\r\n\t\tif (was) Control.unregisterDomEvents(was);\r\n\t\tif (this.id) {\r\n\t\t\tControl.registerDomEvents(this.id, this);\r\n\t\t\tthis.setAttribute('id', this.id);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcontentChanged: function () {\r\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\r\n\t\tdelegate.invalidate(this, 'content');\r\n\t},\r\n\r\n\t/**\r\n\t* If the control has been generated, re-flows the control.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tbeforeChildRender: function () {\r\n\t\t// if we are generated, we should flow before rendering a child;\r\n\t\t// if not, the render context isn't ready anyway\r\n\t\tif (this.generated) this.flow();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tshowingChanged: function (was) {\r\n\t\tvar nextControl;\r\n\t\t// if we are changing from not showing to showing we attempt to find whatever\r\n\t\t// our last known value for display was or use the default\r\n\t\tif (!was && this.showing) {\r\n\t\t\tthis.applyStyle('display', this._display || '');\r\n\r\n\t\t\t// note the check for generated and canGenerate as changes to canGenerate will force\r\n\t\t\t// us to ignore the renderOnShow value so we don't undo whatever the developer was\r\n\t\t\t// intending\r\n\t\t\tif (!this.generated && !this.canGenerate && this.renderOnShow) {\r\n\t\t\t\tnextControl = this.getNextControl();\r\n\t\t\t\tif (nextControl && !this.addBefore) this.addBefore = nextControl;\r\n\t\t\t\tthis.set('canGenerate', true);\r\n\t\t\t\tthis.render();\r\n\t\t\t}\r\n\r\n\t\t\tthis.sendShowingChangedEvent(was);\r\n\t\t}\r\n\r\n\t\t// if we are supposed to be hiding the control then we need to cache our current\r\n\t\t// display state\r\n\t\telse if (was && !this.showing) {\r\n\t\t\tthis.sendShowingChangedEvent(was);\r\n\t\t\t// we can't truly cache this because it _could_ potentially be set to multiple\r\n\t\t\t// values throughout its lifecycle although that seems highly unlikely...\r\n\t\t\tthis._display = this.hasNode() ? this.node.style.display : '';\r\n\t\t\tthis.applyStyle('display', 'none');\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trenderOnShowChanged: function () {\r\n\t\t// ensure that the default value assigned to showing is actually a boolean\r\n\t\t// and that it is only true if the renderOnShow is also false\r\n\t\tthis.showing = ((!!this.showing) && !this.renderOnShow);\r\n\t\t// we want to check and make sure that the canGenerate value is correct given\r\n\t\t// the state of renderOnShow\r\n\t\tthis.canGenerate = (this.canGenerate && !this.renderOnShow);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsendShowingChangedEvent: function (was) {\r\n\t\tvar waterfall = (was === true || was === false),\r\n\t\t\tparent = this.parent;\r\n\r\n\t\t// make sure that we don't trigger the waterfall when this method\r\n\t\t// is arbitrarily called during _create_ and it should only matter\r\n\t\t// that it changed if our parent's are all showing as well\r\n\t\tif (waterfall && (parent ? parent.getAbsoluteShowing(true) : true)) {\r\n\t\t\tthis.waterfall('onShowingChanged', {originator: this, showing: this.showing});\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Returns `true` if this control and all parents are showing.\r\n\t*\r\n\t* @param {Boolean} ignoreBounds - If `true`, it will not force a layout by retrieving\r\n\t*\tcomputed bounds and rely on the return from [showing]{@link module:enyo/Control~Control#showing}\r\n\t* exclusively.\r\n\t* @returns {Boolean} Whether the control is showing (visible).\r\n\t* @public\r\n\t*/\r\n\tgetAbsoluteShowing: function (ignoreBounds) {\r\n\t\tvar bounds = !ignoreBounds ? this.getBounds() : null,\r\n\t\t\tparent = this.parent;\r\n\r\n\t\tif (!this.generated || this.destroyed || !this.showing || (bounds &&\r\n\t\t\tbounds.height === 0 && bounds.width === 0)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (parent && parent.getAbsoluteShowing) {\r\n\r\n\t\t\t// we actually don't care what the parent says if it is the floating layer\r\n\t\t\tif (!this.parentNode || (this.parentNode !== Control.floatingLayer.hasNode())) {\r\n\t\t\t\treturn parent.getAbsoluteShowing(ignoreBounds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t* Handles the `onShowingChanged` event that is waterfalled by controls when\r\n\t* their `showing` value is modified. If the control is not showing itself\r\n\t* already, it will not continue the waterfall. Overload this method to\r\n\t* provide additional handling for this event.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tshowingChangedHandler: function (sender, event) {\r\n\t\t// If we have deferred a reflow, do it now...\r\n\t\tif (this.showing && this._needsReflow) {\r\n\t\t\tthis.reflow();\r\n\t\t}\r\n\r\n\t\t// Then propagate `onShowingChanged` if appropriate\r\n\t\treturn sender === this ? false : !this.showing;\r\n\t},\r\n\r\n\t/**\r\n\t* Overriding reflow() so that we can take `showing` into\r\n\t* account and defer reflowing accordingly.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\treflow: function () {\r\n\t\tif (this.layout) {\r\n\t\t\tthis._needsReflow = this.showing ? this.layout.reflow() : true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfitChanged: function () {\r\n\t\tthis.parent.reflow();\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether we are in fullscreen mode or not.\r\n\t*\r\n\t* @returns {Boolean} Whether we are currently in fullscreen mode.\r\n\t* @public\r\n\t*/\r\n\tisFullscreen: function () {\r\n\t\treturn (this.hasNode() && this.node === Control.Fullscreen.getFullscreenElement());\r\n\t},\r\n\r\n\t/**\r\n\t* Requests that this control be displayed fullscreen (like a video\r\n\t* container). If the request is granted, the control fills the screen and\r\n\t* `true` is returned; if the request is denied, the control is not resized\r\n\t* and `false` is returned.\r\n\t*\r\n\t* @returns {Boolean} `true` on success; otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\trequestFullscreen: function () {\r\n\t\tif (!this.hasNode()) return false;\r\n\r\n\t\tif (Control.Fullscreen.requestFullscreen(this)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t* Ends fullscreen mode for this control.\r\n\t*\r\n\t* @returns {Boolean} If the control was in fullscreen mode before this\r\n\t* method was called, it is taken out of that mode and `true` is returned;\r\n\t* otherwise, `false` is returned.\r\n\t* @public\r\n\t*/\r\n\tcancelFullscreen: function() {\r\n\t\tif (this.isFullscreen()) {\r\n\t\t\tControl.Fullscreen.cancelFullscreen();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t// .................................\r\n\r\n\t// .................................\r\n\t// RENDER-SCHEME API\r\n\r\n\t/**\r\n\t* Indicates whether the control is allowed to be generated, i.e., rendered\r\n\t* into the [DOM]{@glossary DOM} tree.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tcanGenerate: true,\r\n\r\n\t/**\r\n\t* Indicates whether the control is visible.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tshowing: true,\r\n\r\n\t/**\r\n\t* The [node]{@glossary Node} that this control will be rendered into.\r\n\t*\r\n\t* @type {module:enyo/Control~Control}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\trenderDelegate: null,\r\n\r\n\t/**\r\n\t* Indicates whether the control has been generated yet.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @private\r\n\t*/\r\n\tgenerated: false,\r\n\r\n\t/**\r\n\t* Forces the control to be rendered. You should use this sparingly, as it\r\n\t* can be costly, but it may be necessary in cases where a control or its\r\n\t* contents have been updated surreptitiously.\r\n\t*\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\trender: function () {\r\n\r\n\t\t// prioritize the delegate set for this control otherwise use the default\r\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\r\n\r\n\t\t// the render delegate acts on the control\r\n\t\tdelegate.render(this);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* Takes this control and drops it into a (new/different)\r\n\t* [DOM node]{@glossary Node}. This will replace any existing nodes in the\r\n\t* target `parentNode`.\r\n\t*\r\n\t* @param {Node} parentNode - The new parent of this control.\r\n\t* @param {Boolean} preventRooting - If `true`, this control will not be treated as a root\r\n\t*\tview and will not be added to the set of roots.\r\n\t* @returns {this} The callee for chaining.\r\n\t* @public\r\n\t*/\r\n\trenderInto: function (parentNode, preventRooting) {\r\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate,\r\n\t\t\tnoFit = this.fit === false;\r\n\r\n\t\t// attempt to retrieve the parentNode\r\n\t\tparentNode = Dom.byId(parentNode);\r\n\r\n\t\t// teardown in case of previous render\r\n\t\tdelegate.teardownRender(this);\r\n\r\n\t\tif (parentNode == document.body && !noFit) this.setupBodyFitting();\r\n\t\telse if (this.fit) this.addClass('enyo-fit enyo-clip');\r\n\r\n\t\t// for IE10 support, we want full support over touch actions in enyo-rendered areas\r\n\t\tthis.addClass('enyo-no-touch-action');\r\n\r\n\t\t// add css to enable hw-accelerated scrolling on non-android platforms\r\n\t\t// ENYO-900, ENYO-901\r\n\t\tthis.setupOverflowScrolling();\r\n\r\n\t\t// if there are unflushed body classes we flush them now...\r\n\t\tDom.flushBodyClasses();\r\n\r\n\t\t// we inject this as a root view because, well, apparently that is just an assumption\r\n\t\t// we've been making...\r\n\t\tif (!preventRooting) {\r\n\t\t\troots.addToRoots(this);\r\n\t\t}\r\n\r\n\t\t// now let the delegate render it the way it needs to\r\n\t\tdelegate.renderInto(this, parentNode);\r\n\r\n\t\tDom.updateScaleFactor();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* A function that fires after the control has rendered. This performs a\r\n\t* reflow.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\trendered: function () {\r\n\t\tvar child,\r\n\t\t\ti = 0;\r\n\r\n\t\t// CAVEAT: Currently we use one entry point ('reflow') for\r\n\t\t// post-render layout work *and* post-resize layout work.\r\n\t\tthis.reflow();\r\n\r\n\t\tfor (; (child = this.children[i]); ++i) {\r\n\t\t\tif (child.generated) child.rendered();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* You should generally not need to call this method in your app code.\r\n\t* It is used internally by some Enyo UI libraries to handle a rare\r\n\t* issue that sometimes arises when using a virtualized list or repeater\r\n\t* on a touch device.\r\n\t*\r\n\t* This issue occurs when a gesture (e.g. a drag) originates with a DOM\r\n\t* node that ends up being destroyed in mid-gesture as the list updates.\r\n\t* When the node is destroyed, the stream of DOM events representing the\r\n\t* gesture stops, causing the associated action to stop or otherwise\r\n\t* fail.\r\n\t*\r\n\t* You can prevent this problem from occurring by calling `retainNode`\r\n\t* on the {@link module:enyo/Control~Control} from which the gesture originates. Doing\r\n\t* so will cause Enyo to keep the DOM node around (hidden from view)\r\n\t* until you explicitly release it. You should call `retainNode` in the\r\n\t* event handler for the event that starts the gesture.\r\n\t*\r\n\t* `retainNode` returns a function that you must call when the gesture\r\n\t* ends to release the node. Make sure you call this function to avoid\r\n\t* \"leaking\" the DOM node (failing to remove it from the DOM).\r\n\t*\r\n\t* @param {Node} node - Optional. Defaults to the node associated with\r\n\t* the Control (`Control.node`). You can generally omit this parameter\r\n\t* when working with {@link module:enyo/DataList~DataList} or {@link module:enyo/DataGridList~DataGridList},\r\n\t* but should generally pass in the event's target node (`event.target`)\r\n\t* when working with {@link module:layout/List~List}. (Because {@link module:layout/List~List} is\r\n\t* based on the Flyweight pattern, the event's target node is often not\r\n\t* the node currently associated with the Control at the time the event\r\n\t* occurs.)\r\n\t* @returns {Function} Keep a reference to this function and call it\r\n\t* to release the node when the gesture has ended.\r\n\t* @public\r\n\t*/\r\n\tretainNode: function(node) {\r\n\t\tvar control = this,\r\n\t\t\tretainedNode = this._retainedNode = (node || this.hasNode());\r\n\t\treturn function() {\r\n\t\t\tif (control && (control._retainedNode == retainedNode)) {\r\n\t\t\t\tcontrol._retainedNode = null;\r\n\t\t\t} else {\r\n\t\t\t\treleaseRetainedNode(retainedNode);\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t* If a Control needs to do something before it and its children's DOM nodes\r\n\t* are torn down, it can implement this lifecycle method, which is called automatically\r\n\t* by the framework and takes no arguments.\r\n\t*\r\n\t* @type {Function}\r\n\t* @protected\r\n\t*/\r\n\tbeforeTeardown: null,\r\n\r\n\t/**\r\n\t* @param {Boolean} [cache] - Whether or not we are tearing down as part of a destroy\r\n\t*\toperation, or if we are just caching. If `true`, the `showing` and `canGenerate`\r\n\t*\tproperties of the control will not be reset.\r\n\t* @private\r\n\t*/\r\n\tteardownRender: function (cache) {\r\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\r\n\r\n\t\tif (this._retainedNode) {\r\n\t\t\tstoreRetainedNode(this);\r\n\t\t}\r\n\r\n\t\tdelegate.teardownRender(this, cache);\r\n\r\n\t\t// if the original state was set with renderOnShow true then we need to reset these\r\n\t\t// values as well to coordinate the original intent\r\n\t\tif (this.renderOnShow && !cache) {\r\n\t\t\tthis.set('showing', false);\r\n\t\t\tthis.set('canGenerate', false);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tteardownChildren: function () {\r\n\t\tvar delegate = this.renderDelegate || Control.renderDelegate;\r\n\r\n\t\tdelegate.teardownChildren(this);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\taddNodeToParent: function () {\r\n\t\tvar pn;\r\n\r\n\t\tif (this.node) {\r\n\t\t\tpn = this.getParentNode();\r\n\t\t\tif (pn) {\r\n\t\t\t\tif (this.addBefore !== undefined) {\r\n\t\t\t\t\tthis.insertNodeInParent(pn, this.addBefore && this.addBefore.hasNode());\r\n\t\t\t\t} else this.appendNodeToParent(pn);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tappendNodeToParent: function(parentNode) {\r\n\t\tparentNode.appendChild(this.node);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tinsertNodeInParent: function(parentNode, beforeNode) {\r\n\t\tparentNode.insertBefore(this.node, beforeNode || parentNode.firstChild);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tremoveNodeFromDom: function() {\r\n\t\tvar node = this.hasNode();\r\n\t\tif (node) {\r\n\t\t\tDom.removeNode(node);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetParentNode: function () {\r\n\t\treturn this.parentNode || (this.parent && (\r\n\t\t\tthis.parent.hasNode() || this.parent.getParentNode())\r\n\t\t);\r\n\t},\r\n\r\n\t// .................................\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function (props) {\r\n\t\t\tvar attrs = props && props.attributes;\r\n\r\n\t\t\t// ensure that we both keep an instance copy of defined attributes but also\r\n\t\t\t// update the hash with any additional instance definitions at runtime\r\n\t\t\tthis.attributes = this.attributes ? utils.clone(this.attributes) : {};\r\n\t\t\tif (attrs) {\r\n\t\t\t\tutils.mixin(this.attributes, attrs);\r\n\t\t\t\tdelete  props.attributes;\r\n\t\t\t}\r\n\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function (props) {\r\n\t\t\tvar classes;\r\n\r\n\t\t\t// initialize the styles for this instance\r\n\t\t\tthis.style = this.kindStyle + this.style;\r\n\r\n\t\t\t// set initial values based on renderOnShow\r\n\t\t\tthis.renderOnShowChanged();\r\n\r\n\t\t\t// super initialization\r\n\t\t\tsup.apply(this, arguments);\r\n\r\n\t\t\t// ensure that if we aren't showing -> true then the correct style\r\n\t\t\t// is applied - note that there might be issues with this because we are\r\n\t\t\t// trying not to have to parse out any other explicit display value during\r\n\t\t\t// initialization and we can't check because we haven't rendered yet\r\n\t\t\tif (!this.showing) this.style += ' display: none;';\r\n\r\n\t\t\t// try and make it so we only need to call the method once during\r\n\t\t\t// initialization and only then when we have something to add\r\n\t\t\tclasses = this.kindClasses;\r\n\t\t\tif (classes && this.classes) classes += (' ' + this.classes);\r\n\t\t\telse if (this.classes) classes = this.classes;\r\n\r\n\t\t\t// if there are known classes needed to be applied from the kind\r\n\t\t\t// definition and the instance definition (such as a component block)\r\n\t\t\tthis.classes = this.attributes['class'] = classes ? classes.trim() : classes;\r\n\r\n\t\t\t// setup the id for this control if we have one\r\n\t\t\tthis.idChanged();\r\n\t\t\tthis.contentChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Destroys the control and removes it from the [DOM]{@glossary DOM}. Also\r\n\t* removes the control's ability to receive bubbled events.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\t// if the control has been rendered we ensure it is removed from the DOM\r\n\t\t\tthis.removeNodeFromDom();\r\n\r\n\t\t\t// ensure no other bubbled events can be dispatched to this control\r\n\t\t\tdispatcher.$[this.id] = null;\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdispatchEvent: kind.inherit(function (sup) {\r\n\t\treturn function (name, event, sender) {\r\n\t\t\t// prevent dispatch and bubble of events that are strictly internal (e.g.\r\n\t\t\t// enter/leave)\r\n\t\t\tif (this.strictlyInternalEvents[name] && this.isInternalEvent(event)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\taddChild: kind.inherit(function (sup) {\r\n\t\treturn function (control) {\r\n\t\t\tcontrol.addClass(this.controlClasses);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tremoveChild: kind.inherit(function (sup) {\r\n\t\treturn function (control) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tcontrol.removeClass(this.controlClasses);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tset: kind.inherit(function (sup) {\r\n\t\treturn function (path, value, opts) {\r\n\t\t\t// this should be updated if a better api for hooking becomes available but for\r\n\t\t\t// now we just do this directly to ensure that the showing value is actually\r\n\t\t\t// a boolean\r\n\t\t\tif (path == 'showing') {\r\n\t\t\t\treturn sup.call(this, path, !! value, opts);\r\n\t\t\t} else return sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t// .................................\r\n\t// BACKWARDS COMPATIBLE API, LEGACY METHODS AND PUBLIC PROPERTY\r\n\t// METHODS OR PROPERTIES THAT PROBABLY SHOULD NOT BE HERE BUT ARE ANYWAY\r\n\r\n\t/**\r\n\t* Apparently used by Ares 2 still but we have the property embedded in the kind...\r\n\t*\r\n\t* @deprecated\r\n\t* @private\r\n\t*/\r\n\tisContainer: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trtl: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsetupBodyFitting: function () {\r\n\t\tDom.applyBodyFit();\r\n\t\tthis.addClass('enyo-fit enyo-clip');\r\n\t},\r\n\r\n\t/*\r\n\t* If the platform is Android or Android-Chrome, don't include the css rule\r\n\t* `-webkit-overflow-scrolling: touch`, as it is not supported in Android and leads to\r\n\t* overflow issues (ENYO-900 and ENYO-901). Similarly, BB10 has issues repainting\r\n\t* out-of-viewport content when `-webkit-overflow-scrolling` is used (ENYO-1396).\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tsetupOverflowScrolling: function () {\r\n\t\tif(platform.android || platform.androidChrome || platform.blackberry) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tDom.addBodyClass('webkitOverflowScrolling');\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the control's directionality based on its content, or an optional `stringInstead`.\r\n\t*\r\n\t* @param {String} [stringInstead] An alternate string for consideration may be sent instead,\r\n\t*\tin-case the string to test the directionality of the control is stored in `this.value`,\r\n\t*\tor some other property, for example.\r\n\t* @private\r\n\t*/\r\n\tdetectTextDirectionality: function (stringInstead) {\r\n\t\t// If an argument was supplied at all, use it, even if it's undefined.\r\n\t\t// Values that are null or undefined, or are numbers, arrays, and some objects are safe\r\n\t\t// to be tested.\r\n\t\tvar str = (arguments.length) ? stringInstead : this.content;\r\n\t\tif (str || str === 0) {\r\n\t\t\tthis.rtl = utils.isRtl(str);\r\n\t\t\tthis.applyStyle('direction', this.rtl ? 'rtl' : 'ltr');\r\n\t\t} else {\r\n\t\t\tthis.applyStyle('direction', null);\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// .................................\r\n\r\n\t// .................................\r\n\t// DEPRECATED\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetTag: function () {\r\n\t\treturn this.tag;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetTag: function (tag) {\r\n\t\tvar was = this.tag;\r\n\r\n\t\tif (tag && typeof tag == 'string') {\r\n\t\t\tthis.tag = tag;\r\n\t\t\tif (was !== tag) this.notify('tag', was, tag);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetAttributes: function () {\r\n\t\treturn this.attributes;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetAttributes: function (attrs) {\r\n\t\tvar was = this.attributes;\r\n\r\n\t\tif (typeof attrs == 'object') {\r\n\t\t\tthis.attributes = attrs;\r\n\t\t\tif (attrs !== was) this.notify('attributes', was, attrs);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetClasses: function () {\r\n\t\treturn this.classes;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetClasses: function (classes) {\r\n\t\tvar was = this.classes;\r\n\r\n\t\tthis.classes = classes;\r\n\t\tif (was != classes) this.notify('classes', was, classes);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetStyle: function () {\r\n\t\treturn this.style;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetStyle: function (style) {\r\n\t\tvar was = this.style;\r\n\r\n\t\tthis.style = style;\r\n\t\tif (was != style) this.notify('style', was, style);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetContent: function () {\r\n\t\treturn this.content;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetContent: function (content) {\r\n\t\tvar was = this.content;\r\n\t\tthis.content = content;\r\n\r\n\t\tif (was != content) this.notify('content', was, content);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetShowing: function () {\r\n\t\treturn this.showing;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetShowing: function (showing) {\r\n\t\tvar was = this.showing;\r\n\r\n\t\t// force the showing property to always be a boolean value\r\n\t\tthis.showing = !! showing;\r\n\r\n\t\tif (was != showing) this.notify('showing', was, showing);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetAllowHtml: function () {\r\n\t\treturn this.allowHtml;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetAllowHtml: function (allow) {\r\n\t\tvar was = this.allowHtml;\r\n\t\tthis.allowHtml = !! allow;\r\n\r\n\t\tif (was !== allow) this.notify('allowHtml', was, allow);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetCanGenerate: function () {\r\n\t\treturn this.canGenerate;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetCanGenerate: function (can) {\r\n\t\tvar was = this.canGenerate;\r\n\t\tthis.canGenerate = !! can;\r\n\r\n\t\tif (was !== can) this.notify('canGenerate', was, can);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetFit: function () {\r\n\t\treturn this.fit;\r\n\t},\r\n\r\n\t/**\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetFit: function (fit) {\r\n\t\tvar was = this.fit;\r\n\t\tthis.fit = !! fit;\r\n\r\n\t\tif (was !== fit) this.notify('fit', was, fit);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t* @ares\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tgetIsContainer: function () {\r\n\t\treturn this.isContainer;\r\n\t},\r\n\r\n\t/**\r\n\t* @ares\r\n\t* @deprecated\r\n\t* @public\r\n\t*/\r\n\tsetIsContainer: function (isContainer) {\r\n\t\tvar was = this.isContainer;\r\n\t\tthis.isContainer = !! isContainer;\r\n\r\n\t\tif (was !== isContainer) this.notify('isContainer', was, isContainer);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// .................................\r\n\r\n});\r\n\r\n/**\r\n* @static\r\n* @public\r\n*/\r\nkind.setDefaultCtor(Control);\r\n\r\n/**\r\n* @static\r\n* @public\r\n*/\r\nControl.renderDelegate = HTMLStringDelegate;\r\n\r\n/**\r\n* @private\r\n*/\r\nControl.registerDomEvents = function (id, control) {\r\n\tdispatcher.$[id] = control;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nControl.unregisterDomEvents = function (id) {\r\n\tdispatcher.$[id] = null;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nControl.normalizeCssStyleString = function (style) {\r\n\treturn style ? (\r\n\t\t(\";\" + style)\r\n\t\t// add a semi-colon if it's not the last character (also trim possible unnecessary whitespace)\r\n\t\t.replace(/([^;])\\s*$/, \"$1;\")\r\n\t\t// ensure we have one space after each colon or semi-colon\r\n\t\t.replace(/\\s*;\\s*([\\w-]+)\\s*:\\s*/g, \"; $1: \")\r\n\t\t// remove first semi-colon and space\r\n\t\t.substr(2).trim()\r\n\t) : \"\";\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nControl.concat = function (ctor, props, instance) {\r\n\tvar proto = ctor.prototype || ctor,\r\n\t\tattrs,\r\n\t\tstr;\r\n\r\n\tif (props.classes) {\r\n\t\tif (instance) {\r\n\t\t\tstr = (proto.classes ? (proto.classes + ' ') : '') + props.classes;\r\n\t\t\tproto.classes = str;\r\n\t\t} else {\r\n\t\t\tstr = (proto.kindClasses || '') + (proto.classes ? (' ' + proto.classes) : '');\r\n\t\t\tproto.kindClasses = str;\r\n\t\t\tproto.classes = props.classes;\r\n\t\t}\r\n\t\tdelete props.classes;\r\n\t}\r\n\r\n\tif (props.style) {\r\n\t\tif (instance) {\r\n\t\t\tstr = (proto.style ? proto.style : '') + props.style;\r\n\t\t\tproto.style = Control.normalizeCssStyleString(str);\r\n\t\t} else {\r\n\t\t\tstr = proto.kindStyle ? proto.kindStyle : '';\r\n\t\t\tstr += proto.style ? (';' + proto.style) : '';\r\n\t\t\tstr += props.style;\r\n\r\n\t\t\t// moved it all to kindStyle so that it will be available whenever instanced\r\n\t\t\tproto.kindStyle = Control.normalizeCssStyleString(str);\r\n\t\t}\r\n\t\tdelete props.style;\r\n\t}\r\n\r\n\tif (props.attributes) {\r\n\t\tattrs = proto.attributes;\r\n\t\tproto.attributes = attrs ? utils.mixin({}, [attrs, props.attributes]) : props.attributes;\r\n\t\tdelete props.attributes;\r\n\t}\r\n};\r\n\r\nControl.prototype.defaultKind = Control;\r\n\r\n// Control has to be *completely* set up before creating the floating layer setting up the\r\n// fullscreen object because fullscreen depends on floating layer which depends on Control.\r\n\r\n/**\r\n* @static\r\n* @public\r\n*/\r\nControl.FloatingLayer = FloatingLayer(Control);\r\n\r\n/**\r\n* @static\r\n* @public\r\n*/\r\nControl.floatingLayer = new Control.FloatingLayer({id: 'floatingLayer'});\r\n\r\n/**\r\n* @static\r\n* @public\r\n*/\r\nControl.Fullscreen = fullscreen(Control);\r\n","/**\r\n* This module has no exports. It merely extends {@link module:enyo/gesture} to enable touch events.\r\n*\r\n* @private\r\n* @module enyo/touch\r\n*/\r\nrequire('enyo');\r\n\r\nvar\r\n\tutils = require('./utils'),\r\n\tgesture = require('./gesture'),\r\n\tdispatcher = require('./dispatcher'),\r\n\tplatform = require('./platform');\r\n\r\nvar\r\n\tDom = require('./dom'),\r\n\tJob = require('./job');\r\n\r\nfunction dispatch (e) {\r\n\treturn dispatcher.dispatch(e);\r\n}\r\n\r\n/**\r\n* @private\r\n*/\r\nDom.requiresWindow(function() {\r\n\r\n\t/**\r\n\t* Add touch-specific gesture feature\r\n\t* \r\n\t* @private\r\n\t*/\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tvar oldevents = gesture.events;\r\n\t\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tgesture.events.touchstart = function (e) {\r\n\t\t// for duration of this touch, only handle touch events.  Old event\r\n\t\t// structure will be restored during touchend.\r\n\t\tgesture.events = touchGesture;\r\n\t\tgesture.events.touchstart(e);\r\n\t};\r\n\t\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tvar touchGesture = {\r\n\r\n\t\t/**\r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\t_touchCount: 0,\r\n\r\n\t\t/**\r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\ttouchstart: function (e) {\r\n\t\t\tthis._touchCount += e.changedTouches.length;\r\n\t\t\tthis.excludedTarget = null;\r\n\t\t\tvar event = this.makeEvent(e);\r\n\t\t\t//store the finger which generated the touchstart event\r\n\t\t\tthis.currentIdentifier = event.identifier;\r\n\t\t\tgesture.down(event);\r\n\t\t\t// generate a new event object since over is a different event\r\n\t\t\tevent = this.makeEvent(e);\r\n\t\t\tthis.overEvent = event;\r\n\t\t\tgesture.over(event);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\ttouchmove: function (e) {\r\n\t\t\tJob.stop('resetGestureEvents');\r\n\t\t\t// NOTE: allow user to supply a node to exclude from event\r\n\t\t\t// target finding via the drag event.\r\n\t\t\tvar de = gesture.drag.dragEvent;\r\n\t\t\tthis.excludedTarget = de && de.dragInfo && de.dragInfo.node;\r\n\t\t\tvar event = this.makeEvent(e);\r\n\t\t\t// do not generate the move event if this touch came from a different\r\n\t\t\t// finger than the starting touch\r\n\t\t\tif (this.currentIdentifier !== event.identifier) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tgesture.move(event);\r\n\t\t\t// prevent default document scrolling if enyo.bodyIsFitting == true\r\n\t\t\t// avoid window scrolling by preventing default on this event\r\n\t\t\t// note: this event can be made unpreventable (native scrollers do this)\r\n\t\t\tif (Dom.bodyIsFitting) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\t// synthesize over and out (normally generated via mouseout)\r\n\t\t\tif (this.overEvent && this.overEvent.target != event.target) {\r\n\t\t\t\tthis.overEvent.relatedTarget = event.target;\r\n\t\t\t\tevent.relatedTarget = this.overEvent.target;\r\n\t\t\t\tgesture.out(this.overEvent);\r\n\t\t\t\tgesture.over(event);\r\n\t\t\t}\r\n\t\t\tthis.overEvent = event;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\ttouchend: function (e) {\r\n\t\t\tgesture.up(this.makeEvent(e));\r\n\t\t\t// NOTE: in touch land, there is no distinction between\r\n\t\t\t// a pointer enter/leave and a drag over/out.\r\n\t\t\t// While it may make sense to send a leave event when a touch\r\n\t\t\t// ends, it does not make sense to send a dragout.\r\n\t\t\t// We avoid this by processing out after up, but\r\n\t\t\t// this ordering is ad hoc.\r\n\t\t\tgesture.out(this.overEvent);\r\n\t\t\t// reset the event handlers back to the mouse-friendly ones after\r\n\t\t\t// a short timeout. We can't do this directly in this handler\r\n\t\t\t// because it messes up Android to handle the mouseup event.\r\n\t\t\t// FIXME: for 2.1 release, conditional on platform being\r\n\t\t\t// desktop Chrome, since we're seeing issues in PhoneGap with this\r\n\t\t\t// code.\r\n\t\t\tthis._touchCount -= e.changedTouches.length;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Use `mouseup()` after touches are done to reset {@glossary event} handling \r\n\t\t* back to default; this works as long as no one did a `preventDefault()` on\r\n\t\t* the touch events.\r\n\t\t* \r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\tmouseup: function () {\r\n\t\t\tif (this._touchCount === 0) {\r\n\t\t\t\tthis.sawMousedown = false;\r\n\t\t\t\tgesture.events = oldevents;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\tmakeEvent: function (e) {\r\n\t\t\tvar event = utils.clone(e.changedTouches[0]);\r\n\t\t\tevent.srcEvent = e;\r\n\t\t\tevent.target = this.findTarget(event);\r\n\t\t\t// normalize \"mouse button\" info\r\n\t\t\tevent.which = 1;\r\n\t\t\t//enyo.log(\"target for \" + inEvent.type + \" at \" + e.pageX + \", \" + e.pageY + \" is \" + (e.target ? e.target.id : \"none\"));\r\n\t\t\treturn event;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\tcalcNodeOffset: function (node) {\r\n\t\t\tif (node.getBoundingClientRect) {\r\n\t\t\t\tvar o = node.getBoundingClientRect();\r\n\t\t\t\treturn {\r\n\t\t\t\t\tleft: o.left,\r\n\t\t\t\t\ttop: o.top,\r\n\t\t\t\t\twidth: o.width,\r\n\t\t\t\t\theight: o.height\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\tfindTarget: function (e) {\r\n\t\t\treturn document.elementFromPoint(e.clientX, e.clientY);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* NOTE: Will find only 1 element under the touch and will fail if an element is \r\n\t\t* positioned outside the bounding box of its parent.\r\n\t\t* \r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\tfindTargetTraverse: function (node, x, y) {\r\n\t\t\tvar n = node || document.body;\r\n\t\t\tvar o = this.calcNodeOffset(n);\r\n\t\t\tif (o && n != this.excludedTarget) {\r\n\t\t\t\tvar adjX = x - o.left;\r\n\t\t\t\tvar adjY = y - o.top;\r\n\t\t\t\t//enyo.log(\"test: \" + n.id + \" (left: \" + o.left + \", top: \" + o.top + \", width: \" + o.width + \", height: \" + o.height + \")\");\r\n\t\t\t\tif (adjX>0 && adjY>0 && adjX<=o.width && adjY<=o.height) {\r\n\t\t\t\t\t//enyo.log(\"IN: \" + n.id + \" -> [\" + adjX + \",\" + adjY + \" in \" + o.width + \"x\" + o.height + \"] (children: \" + n.childNodes.length + \")\");\r\n\t\t\t\t\tvar target;\r\n\t\t\t\t\tfor (var n$=n.childNodes, i=n$.length-1, c; (c=n$[i]); i--) {\r\n\t\t\t\t\t\ttarget = this.findTargetTraverse(c, x, y);\r\n\t\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\t\treturn target;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn n;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* @ignore\r\n\t\t* @private\r\n\t\t*/\r\n\t\tconnect: function () {\r\n\t\t\tutils.forEach(['touchstart', 'touchmove', 'touchend', 'gesturestart', 'gesturechange', 'gestureend'], function(e) {\r\n\t\t\t\t// on iOS7 document.ongesturechange is never called\r\n\t\t\t\tdocument.addEventListener(e, dispatch, false);\r\n\t\t\t});\r\n\r\n\t\t\tif (platform.androidChrome <= 18 || platform.silk === 2) {\r\n\t\t\t\t// HACK: on Chrome for Android v18 on devices with higher density displays,\r\n\t\t\t\t// document.elementFromPoint expects screen coordinates, not document ones\r\n\t\t\t\t// bug also appears on Kindle Fire HD\r\n\t\t\t\tthis.findTarget = function(e) {\r\n\t\t\t\t\treturn document.elementFromPoint(e.screenX, e.screenY);\r\n\t\t\t\t};\r\n\t\t\t} else if (!document.elementFromPoint) {\r\n\t\t\t\tthis.findTarget = function(e) {\r\n\t\t\t\t\treturn this.findTargetTraverse(null, e.clientX, e.clientY);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\ttouchGesture.connect();\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Image~Image} kind.\r\n* @module enyo/Image\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind'),\r\n\tri = require('../resolution'),\r\n\tdispatcher = require('../dispatcher'),\r\n\tpath = require('../pathResolver');\r\nvar\r\n\tControl = require('../Control');\r\n\r\n/**\r\n* Fires when the [image]{@link module:enyo/Image~Image} has loaded.\r\n*\r\n* @event module:enyo/Image~Image#onload\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when there has been an error while loading the [image]{@link module:enyo/Image~Image}.\r\n*\r\n* @event module:enyo/Image~Image#onerror\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/Image~Image} implements an HTML [&lt;img&gt;]{@glossary img} element and, optionally,\r\n* [bubbles]{@link module:enyo/Component~Component#bubble} the [onload]{@link module:enyo/Image~Image#onload} and\r\n* [onerror]{@link module:enyo/Image~Image#onerror} [events]{@glossary event}. Image dragging is suppressed by\r\n* default, so as not to interfere with touch interfaces.\r\n*\r\n* When [sizing]{@link module:enyo/Image~Image#sizing} is used, the control will not have a natural size and must be\r\n* manually sized using CSS `height` and `width`. Also, when [placeholder]{@link module:enyo/Image~Image#placeholder} is used\r\n* without `sizing`, you may wish to specify the size, as the image will not have a\r\n* natural size until the image loads, causing the placeholder to not be visible.\r\n*\r\n* {@link module:enyo/Image~Image} also has support for multi-resolution images. If you are developing assets\r\n* for specific screen sizes, HD (720p), FHD (1080p), UHD (4k), for example, you may provide\r\n* specific image assets in a hash/object format to the `src` property, instead of the usual\r\n* string. The image sources will be used automatically when the screen resolution is less than\r\n* or equal to those screen types. For more informaton on our resolution support, and how to\r\n* enable this feature, see the documentation for {@link module:enyo/resolution}.\r\n*\r\n* ```\r\n* // Take advantage of the multi-rez mode\r\n* var\r\n* \tkind = require('enyo/kind'),\r\n* \tImage = require('enyo/Image');\r\n*\r\n* {kind: Image, src: {\r\n*\t'hd': 'http://lorempixel.com/64/64/city/1/',\r\n*\t'fhd': 'http://lorempixel.com/128/128/city/1/',\r\n*\t'uhd': 'http://lorempixel.com/256/256/city/1/'\r\n* }, alt: 'Multi-rez'},\r\n*\r\n* // Standard string `src`\r\n* {kind: Image, src: 'http://lorempixel.com/128/128/city/1/', alt: 'Large'}\r\n* ```\r\n*\r\n* @class Image\r\n* @extends module:enyo/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Image~Image.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.Image',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* When `true`, no [onload]{@link module:enyo/Image~Image#onload} or\r\n\t* [onerror]{@link module:enyo/Image~Image#onerror} {@glossary event} handlers will be\r\n\t* created.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tnoEvents: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/Image~Image.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Maps to the `src` attribute of an [&lt;img&gt; tag]{@glossary img}. This also supports\r\n\t\t* a multi-resolution hash object. For more details and examples, see the description of\r\n\t\t* {@link module:enyo/Image~Image} above, or the documentation for {@link module:enyo/resolution}.\r\n\t\t*\r\n\t\t* @type {String|module:enyo/resolution#selectSrc~src}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tsrc: '',\r\n\r\n\t\t/**\r\n\t\t* Maps to the `alt` attribute of an [&lt;img&gt; tag]{@glossary img}.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\talt: '',\r\n\r\n\t\t/**\r\n\t\t* By default, the [image]{@link module:enyo/Image~Image} is rendered using an `<img>` tag.\r\n\t\t* When this property is set to `'cover'` or `'constrain'`, the image will be\r\n\t\t* rendered using a `<div>`, utilizing `background-image` and `background-size`.\r\n\t\t*\r\n\t\t* Set this property to `'contain'` to letterbox the image in the available\r\n\t\t* space, or `'cover'` to cover the available space with the image (cropping the\r\n\t\t* larger dimension).  Note that when `sizing` is set, the control must be\r\n\t\t* explicitly sized.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tsizing: '',\r\n\r\n\t\t/**\r\n\t\t* When [sizing]{@link module:enyo/Image~Image#sizing} is used, this property sets the positioning of\r\n\t\t* the [image]{@link module:enyo/Image~Image} within the bounds, corresponding to the\r\n\t\t* [`background-position`]{@glossary backgroundPosition} CSS property.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default 'center'\r\n\t\t* @public\r\n\t\t*/\r\n\t\tposition: 'center',\r\n\r\n\t\t/**\r\n\t\t* Provides a default image displayed while the URL specified by `src` is loaded or when that\r\n\t\t* image fails to load.\r\n\t\t*\r\n\t\t* Note that the placeholder feature is not designed for use with images that contain transparent\r\n\t\t* or semi-transparent pixels. Specifically, for performance reasons, the placeholder image is not\r\n\t\t* removed when the image itself loads, but is simply covered by the image. This means that the\r\n\t\t* placeholder will show through any transparent or semi-transparent pixels in the image.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tplaceholder: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttag: 'img',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclasses: 'enyo-image',\r\n\r\n\t/**\r\n\t* `src` copied here to avoid overwriting the user-provided value when loading values\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_src: null,\r\n\r\n\t/**\r\n\t* @type {Object}\r\n\t* @property {Boolean} draggable - This attribute will take one of the following\r\n\t*\t[String]{@glossary String} values: 'true', 'false' (the default), or 'auto'.\r\n\t* Setting Boolean `false` will remove the attribute.\r\n\t* @public\r\n\t*/\r\n\tattributes: {\r\n\t\tdraggable: 'false'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tonerror: 'handleError'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tobservers: [\r\n\t\t{method: 'updateSource', path: ['_src', 'placeholder']}\r\n\t],\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tif (this.noEvents) {\r\n\t\t\t\tdelete this.attributes.onload;\r\n\t\t\t\tdelete this.attributes.onerror;\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.altChanged();\r\n\t\t\tthis.sizingChanged();\r\n\t\t\tthis.srcChanged();\r\n\t\t\tthis.positionChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Cache the value of user-provided `src` value in `_src`\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tsrcChanged: function () {\r\n\t\tthis.set('_src', this.src);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\taltChanged: function () {\r\n\t\tthis.setAttribute('alt', this.alt);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsizingChanged: function (was) {\r\n\t\tthis.tag = this.sizing ? 'div' : 'img';\r\n\t\tthis.addRemoveClass('sized', !!this.sizing);\r\n\t\tif (was) {\r\n\t\t\tthis.removeClass(was);\r\n\t\t}\r\n\t\tif (this.sizing) {\r\n\t\t\tthis.addClass(this.sizing);\r\n\t\t}\r\n\t\tthis.updateSource();\r\n\t\tif (this.generated) {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpositionChanged: function () {\r\n\t\tif (this.sizing) {\r\n\t\t\tthis.applyStyle('background-position', this.position);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandleError: function () {\r\n\t\tif (this.placeholder) {\r\n\t\t\tthis.set('_src', null);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Updates the Image's src or background-image based on the values of _src and placeholder\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tupdateSource: function (was, is, prop) {\r\n\t\tvar src = ri.selectSrc(this._src),\r\n\t\t\tsrcUrl = src ? 'url(\\'' + path.rewrite(src) + '\\')' : null,\r\n\t\t\tplUrl = this.placeholder ? 'url(\\'' + path.rewrite(this.placeholder) + '\\')' : null,\r\n\t\t\turl;\r\n\r\n\t\tif (this.sizing) {\r\n\t\t\t// use either both urls, src, placeholder, or 'none', in that order\r\n\t\t\turl = srcUrl && plUrl && (srcUrl + ',' + plUrl) || srcUrl || plUrl || 'none';\r\n\t\t\tthis.applyStyle('background-image', url);\r\n\t\t} else {\r\n\t\t\t// when update source\r\n\t\t\tif (!prop || prop == 'placeholder') {\r\n\t\t\t\tthis.applyStyle('background-image', plUrl);\r\n\t\t\t}\r\n\t\t\tthis.setAttribute('src', src);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @fires module:enyo/Image~Image#onload\r\n\t* @fires module:enyo/Image~Image#onerror\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tdispatcher.makeBubble(this, 'load', 'error');\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @lends module:enyo/Image~Image\r\n\t* @private\r\n\t*/\r\n\tstatics: {\r\n\t\t/**\r\n\t\t* A globally accessible data URL that describes a simple\r\n\t\t* placeholder image that may be used in samples and applications\r\n\t\t* until final graphics are provided. As an SVG image, it will\r\n\t\t* expand to fill the desired width and height set in the style.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @public\r\n\t\t*/\r\n\t\tplaceholder:\r\n\t\t\t'data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC' +\r\n\t\t\t'9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIj48cmVjdCB3aWR0aD0iMTAw' +\r\n\t\t\t'JSIgaGVpZ2h0PSIxMDAlIiBzdHlsZT0ic3Ryb2tlOiAjNDQ0OyBzdHJva2Utd2lkdGg6IDE7IGZpbGw6ICNhYW' +\r\n\t\t\t'E7IiAvPjxsaW5lIHgxPSIwIiB5MT0iMCIgeDI9IjEwMCUiIHkyPSIxMDAlIiBzdHlsZT0ic3Ryb2tlOiAjNDQ0' +\r\n\t\t\t'OyBzdHJva2Utd2lkdGg6IDE7IiAvPjxsaW5lIHgxPSIxMDAlIiB5MT0iMCIgeDI9IjAiIHkyPSIxMDAlIiBzdH' +\r\n\t\t\t'lsZT0ic3Ryb2tlOiAjNDQ0OyBzdHJva2Utd2lkdGg6IDE7IiAvPjwvc3ZnPg=='\r\n\t},\r\n\r\n\t// Accessibility\r\n\r\n\t/**\r\n\t* @default img\r\n\t* @type {String}\r\n\t* @see enyo/AccessibilitySupport~AccessibilitySupport#accessibilityRole\r\n\t* @public\r\n\t*/\r\n\taccessibilityRole: 'img'\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Input~Input} kind.\r\n* @module enyo/Input\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind'),\r\n\tutils = require('../utils'),\r\n\tdispatcher = require('../dispatcher'),\r\n\tplatform = require('../platform');\r\nvar\r\n\tControl = require('../Control');\r\n\r\n/**\r\n* Fires immediately when the text changes.\r\n*\r\n* @event module:enyo/Input~Input#oninput\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when the text has changed and the [input]{@link module:enyo/Input~Input} subsequently loses\r\n* focus.\r\n*\r\n* @event module:enyo/Input~Input#onchange\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when the [input]{@link module:enyo/Input~Input} is disabled or enabled.\r\n*\r\n* @event module:enyo/Input~Input#onDisabledChange\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/Input~Input} implements an HTML [&lt;input&gt;]{@glossary input} element\r\n* with cross-platform support for change [events]{@glossary event}.\r\n*\r\n* You may listen for [oninput]{@link module:enyo/Input~Input#oninput} and\r\n* [onchange]{@link module:enyo/Input~Input#onchange} [DOM events]{@glossary DOMEvent} from\r\n* this [control]{@link module:enyo/Control~Control} to know when the text inside has been modified.\r\n*\r\n* For more information, see the documentation on\r\n* [Text Fields]{@linkplain $dev-guide/building-apps/controls/text-fields.html}\r\n* in the Enyo Developer Guide.\r\n*\r\n* @class Input\r\n* @extends module:enyo/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Input~Input.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.Input',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/Input~Input.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Value of the [input]{@link module:enyo/Input~Input}. Use this property only to initialize the\r\n\t\t* value. Call `getValue()` and `setValue()` to manipulate the value at runtime.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tvalue: '',\r\n\r\n\t\t/**\r\n\t\t* Text to display when the [input]{@link module:enyo/Input~Input} is empty\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tplaceholder: '',\r\n\r\n\t\t/**\r\n\t\t* Type of [input]{@link module:enyo/Input~Input}; if not specified, it's treated as `'text'`.\r\n\t\t* This may be anything specified for the `type` attribute in the HTML\r\n\t\t* specification, including `'url'`, `'email'`, `'search'`, or `'number'`.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\ttype: '',\r\n\r\n\t\t/**\r\n\t\t* When `true`, prevents input into the [control]{@link module:enyo/Control~Control}. This maps\r\n\t\t* to the `disabled` DOM attribute.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tdisabled: false,\r\n\r\n\t\t/**\r\n\t\t* When `true`, the contents of the [input]{@link module:enyo/Input~Input} will be selected\r\n\t\t* when the input gains focus.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tselectOnFocus: false\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonDisabledChange: ''\r\n\t},\r\n\r\n\t/**\r\n\t* Set to `true` to focus this [control]{@link module:enyo/Control~Control} when it is rendered.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tdefaultFocus: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttag: 'input',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclasses: 'enyo-input',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tonfocus: 'focused',\r\n\t\toninput: 'input',\r\n\t\tonclear: 'clear',\r\n\t\tondragstart: 'dragstart'\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tif (platform.ie) {\r\n\t\t\t\tthis.handlers.onkeyup = 'iekeyup';\r\n\t\t\t}\r\n\t\t\tif (platform.windowsPhone) {\r\n\t\t\t\tthis.handlers.onkeydown = 'iekeydown';\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.placeholderChanged();\r\n\t\t\t// prevent overriding a custom attribute with null\r\n\t\t\tif (this.type) {\r\n\t\t\t\tthis.typeChanged();\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tdispatcher.makeBubble(this, 'focus', 'blur');\r\n\t\t\tthis.disabledChanged();\r\n\t\t\tif (this.defaultFocus) {\r\n\t\t\t\tthis.focus();\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttypeChanged: function () {\r\n\t\tthis.setAttribute('type', this.type);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tplaceholderChanged: function () {\r\n\t\tthis.setAttribute('placeholder', this.placeholder);\r\n\t\tthis.valueChanged();\r\n\t},\r\n\r\n\t/**\r\n\t* @fires module:enyo/Input~Input#onDisabledChange\r\n\t* @private\r\n\t*/\r\n\tdisabledChanged: function () {\r\n\t\tthis.setAttribute('disabled', this.disabled);\r\n\t\tthis.bubble('onDisabledChange');\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tvalueChanged: function () {\r\n\t\tvar node = this.hasNode(),\r\n\t\t\tattrs = this.attributes;\r\n\t\tif (node) {\r\n\t\t\tif (node.value !== this.value) {\r\n\t\t\t\tnode.value = this.value;\r\n\t\t\t}\r\n\t\t\t// we manually update the cached value so that the next time the\r\n\t\t\t// attribute is requested or the control is re-rendered it will\r\n\t\t\t// have the correct value - this is because calling setAttribute()\r\n\t\t\t// in some cases does not receive an appropriate response from the\r\n\t\t\t// browser\r\n\t\t\tattrs.value = this.value;\r\n\t\t} else {\r\n\t\t\tthis.setAttribute('value', this.value);\r\n\t\t}\r\n\t\tthis.detectTextDirectionality((this.value || this.value === 0) ? this.value : this.get('placeholder'));\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tiekeyup: function (sender, e) {\r\n\t\tvar ie = platform.ie, kc = e.keyCode;\r\n\t\t// input event fails to fire on backspace and delete keys in ie 9\r\n\t\tif (ie == 9 && (kc == 8 || kc == 46)) {\r\n\t\t\tthis.bubble('oninput', e);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tiekeydown: function (sender, e) {\r\n\t\tvar wp = platform.windowsPhone, kc = e.keyCode, dt = e.dispatchTarget;\r\n\t\t// onchange event fails to fire on enter key for Windows Phone 8, so we force blur\r\n\t\tif (wp <= 8 && kc == 13 && this.tag == 'input' && dt.hasNode()) {\r\n\t\t\tdt.node.blur();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclear: function () {\r\n\t\tthis.setValue('');\r\n\t},\r\n\r\n\t// note: we disallow dragging of an input to allow text selection on all platforms\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdragstart: function () {\r\n\t\treturn this.hasFocus();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfocused: function () {\r\n\t\tif (this.selectOnFocus) {\r\n\t\t\tutils.asyncMethod(this, 'selectContents');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tselectContents: function () {\r\n\t\tvar n = this.hasNode();\r\n\r\n\t\tif (n && n.setSelectionRange) {\r\n\t\t\tn.setSelectionRange(0, n.value.length);\r\n\t\t} else if (n && n.createTextRange) {\r\n\t\t\tvar r = n.createTextRange();\r\n\t\t\tr.expand('textedit');\r\n\t\t\tr.select();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tinput: function () {\r\n\t\tvar val = this.getNodeProperty('value');\r\n\t\tthis.setValue(val);\r\n\t},\r\n\r\n\t// Accessibility\r\n\r\n\t/**\r\n\t* @default textbox\r\n\t* @type {String}\r\n\t* @see enyo/AccessibilitySupport~AccessibilitySupport#accessibilityRole\r\n\t* @public\r\n\t*/\r\n\taccessibilityRole: 'textbox',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tariaObservers: [\r\n\t\t{path: 'disabled', to: 'aria-disabled'}\r\n\t]\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Image~Image} kind.\r\n* @module enyo/Image\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind'),\r\n\tri = require('../resolution'),\r\n\tdispatcher = require('../dispatcher'),\r\n\tpath = require('../pathResolver');\r\nvar\r\n\tControl = require('../Control');\r\n\r\n/**\r\n* Fires when the [image]{@link module:enyo/Image~Image} has loaded.\r\n*\r\n* @event module:enyo/Image~Image#onload\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when there has been an error while loading the [image]{@link module:enyo/Image~Image}.\r\n*\r\n* @event module:enyo/Image~Image#onerror\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/Image~Image} implements an HTML [&lt;img&gt;]{@glossary img} element and, optionally,\r\n* [bubbles]{@link module:enyo/Component~Component#bubble} the [onload]{@link module:enyo/Image~Image#onload} and\r\n* [onerror]{@link module:enyo/Image~Image#onerror} [events]{@glossary event}. Image dragging is suppressed by\r\n* default, so as not to interfere with touch interfaces.\r\n*\r\n* When [sizing]{@link module:enyo/Image~Image#sizing} is used, the control will not have a natural size and must be\r\n* manually sized using CSS `height` and `width`. Also, when [placeholder]{@link module:enyo/Image~Image#placeholder} is used\r\n* without `sizing`, you may wish to specify the size, as the image will not have a\r\n* natural size until the image loads, causing the placeholder to not be visible.\r\n*\r\n* {@link module:enyo/Image~Image} also has support for multi-resolution images. If you are developing assets\r\n* for specific screen sizes, HD (720p), FHD (1080p), UHD (4k), for example, you may provide\r\n* specific image assets in a hash/object format to the `src` property, instead of the usual\r\n* string. The image sources will be used automatically when the screen resolution is less than\r\n* or equal to those screen types. For more informaton on our resolution support, and how to\r\n* enable this feature, see the documentation for {@link module:enyo/resolution}.\r\n*\r\n* ```\r\n* // Take advantage of the multi-rez mode\r\n* var\r\n* \tkind = require('enyo/kind'),\r\n* \tImage = require('enyo/Image');\r\n*\r\n* {kind: Image, src: {\r\n*\t'hd': 'http://lorempixel.com/64/64/city/1/',\r\n*\t'fhd': 'http://lorempixel.com/128/128/city/1/',\r\n*\t'uhd': 'http://lorempixel.com/256/256/city/1/'\r\n* }, alt: 'Multi-rez'},\r\n*\r\n* // Standard string `src`\r\n* {kind: Image, src: 'http://lorempixel.com/128/128/city/1/', alt: 'Large'}\r\n* ```\r\n*\r\n* @class Image\r\n* @extends module:enyo/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Image~Image.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.Image',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* When `true`, no [onload]{@link module:enyo/Image~Image#onload} or\r\n\t* [onerror]{@link module:enyo/Image~Image#onerror} {@glossary event} handlers will be\r\n\t* created.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tnoEvents: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/Image~Image.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Maps to the `src` attribute of an [&lt;img&gt; tag]{@glossary img}. This also supports\r\n\t\t* a multi-resolution hash object. For more details and examples, see the description of\r\n\t\t* {@link module:enyo/Image~Image} above, or the documentation for {@link module:enyo/resolution}.\r\n\t\t*\r\n\t\t* @type {String|module:enyo/resolution#selectSrc~src}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tsrc: '',\r\n\r\n\t\t/**\r\n\t\t* Maps to the `alt` attribute of an [&lt;img&gt; tag]{@glossary img}.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\talt: '',\r\n\r\n\t\t/**\r\n\t\t* By default, the [image]{@link module:enyo/Image~Image} is rendered using an `<img>` tag.\r\n\t\t* When this property is set to `'cover'` or `'constrain'`, the image will be\r\n\t\t* rendered using a `<div>`, utilizing `background-image` and `background-size`.\r\n\t\t*\r\n\t\t* Set this property to `'contain'` to letterbox the image in the available\r\n\t\t* space, or `'cover'` to cover the available space with the image (cropping the\r\n\t\t* larger dimension).  Note that when `sizing` is set, the control must be\r\n\t\t* explicitly sized.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tsizing: '',\r\n\r\n\t\t/**\r\n\t\t* When [sizing]{@link module:enyo/Image~Image#sizing} is used, this property sets the positioning of\r\n\t\t* the [image]{@link module:enyo/Image~Image} within the bounds, corresponding to the\r\n\t\t* [`background-position`]{@glossary backgroundPosition} CSS property.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default 'center'\r\n\t\t* @public\r\n\t\t*/\r\n\t\tposition: 'center',\r\n\r\n\t\t/**\r\n\t\t* Provides a default image displayed while the URL specified by `src` is loaded or when that\r\n\t\t* image fails to load.\r\n\t\t*\r\n\t\t* Note that the placeholder feature is not designed for use with images that contain transparent\r\n\t\t* or semi-transparent pixels. Specifically, for performance reasons, the placeholder image is not\r\n\t\t* removed when the image itself loads, but is simply covered by the image. This means that the\r\n\t\t* placeholder will show through any transparent or semi-transparent pixels in the image.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tplaceholder: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttag: 'img',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclasses: 'enyo-image',\r\n\r\n\t/**\r\n\t* `src` copied here to avoid overwriting the user-provided value when loading values\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_src: null,\r\n\r\n\t/**\r\n\t* @type {Object}\r\n\t* @property {Boolean} draggable - This attribute will take one of the following\r\n\t*\t[String]{@glossary String} values: 'true', 'false' (the default), or 'auto'.\r\n\t* Setting Boolean `false` will remove the attribute.\r\n\t* @public\r\n\t*/\r\n\tattributes: {\r\n\t\tdraggable: 'false'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tonerror: 'handleError'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tobservers: [\r\n\t\t{method: 'updateSource', path: ['_src', 'placeholder']}\r\n\t],\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tif (this.noEvents) {\r\n\t\t\t\tdelete this.attributes.onload;\r\n\t\t\t\tdelete this.attributes.onerror;\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.altChanged();\r\n\t\t\tthis.sizingChanged();\r\n\t\t\tthis.srcChanged();\r\n\t\t\tthis.positionChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Cache the value of user-provided `src` value in `_src`\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tsrcChanged: function () {\r\n\t\tthis.set('_src', this.src);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\taltChanged: function () {\r\n\t\tthis.setAttribute('alt', this.alt);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsizingChanged: function (was) {\r\n\t\tthis.tag = this.sizing ? 'div' : 'img';\r\n\t\tthis.addRemoveClass('sized', !!this.sizing);\r\n\t\tif (was) {\r\n\t\t\tthis.removeClass(was);\r\n\t\t}\r\n\t\tif (this.sizing) {\r\n\t\t\tthis.addClass(this.sizing);\r\n\t\t}\r\n\t\tthis.updateSource();\r\n\t\tif (this.generated) {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpositionChanged: function () {\r\n\t\tif (this.sizing) {\r\n\t\t\tthis.applyStyle('background-position', this.position);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandleError: function () {\r\n\t\tif (this.placeholder) {\r\n\t\t\tthis.set('_src', null);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Updates the Image's src or background-image based on the values of _src and placeholder\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tupdateSource: function (was, is, prop) {\r\n\t\tvar src = ri.selectSrc(this._src),\r\n\t\t\tsrcUrl = src ? 'url(\\'' + path.rewrite(src) + '\\')' : null,\r\n\t\t\tplUrl = this.placeholder ? 'url(\\'' + path.rewrite(this.placeholder) + '\\')' : null,\r\n\t\t\turl;\r\n\r\n\t\tif (this.sizing) {\r\n\t\t\t// use either both urls, src, placeholder, or 'none', in that order\r\n\t\t\turl = srcUrl && plUrl && (srcUrl + ',' + plUrl) || srcUrl || plUrl || 'none';\r\n\t\t\tthis.applyStyle('background-image', url);\r\n\t\t} else {\r\n\t\t\t// when update source\r\n\t\t\tif (!prop || prop == 'placeholder') {\r\n\t\t\t\tthis.applyStyle('background-image', plUrl);\r\n\t\t\t}\r\n\t\t\tthis.setAttribute('src', src);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @fires module:enyo/Image~Image#onload\r\n\t* @fires module:enyo/Image~Image#onerror\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tdispatcher.makeBubble(this, 'load', 'error');\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @lends module:enyo/Image~Image\r\n\t* @private\r\n\t*/\r\n\tstatics: {\r\n\t\t/**\r\n\t\t* A globally accessible data URL that describes a simple\r\n\t\t* placeholder image that may be used in samples and applications\r\n\t\t* until final graphics are provided. As an SVG image, it will\r\n\t\t* expand to fill the desired width and height set in the style.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @public\r\n\t\t*/\r\n\t\tplaceholder:\r\n\t\t\t'data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC' +\r\n\t\t\t'9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIj48cmVjdCB3aWR0aD0iMTAw' +\r\n\t\t\t'JSIgaGVpZ2h0PSIxMDAlIiBzdHlsZT0ic3Ryb2tlOiAjNDQ0OyBzdHJva2Utd2lkdGg6IDE7IGZpbGw6ICNhYW' +\r\n\t\t\t'E7IiAvPjxsaW5lIHgxPSIwIiB5MT0iMCIgeDI9IjEwMCUiIHkyPSIxMDAlIiBzdHlsZT0ic3Ryb2tlOiAjNDQ0' +\r\n\t\t\t'OyBzdHJva2Utd2lkdGg6IDE7IiAvPjxsaW5lIHgxPSIxMDAlIiB5MT0iMCIgeDI9IjAiIHkyPSIxMDAlIiBzdH' +\r\n\t\t\t'lsZT0ic3Ryb2tlOiAjNDQ0OyBzdHJva2Utd2lkdGg6IDE7IiAvPjwvc3ZnPg=='\r\n\t},\r\n\r\n\t// Accessibility\r\n\r\n\t/**\r\n\t* @default img\r\n\t* @type {String}\r\n\t* @see enyo/AccessibilitySupport~AccessibilitySupport#accessibilityRole\r\n\t* @public\r\n\t*/\r\n\taccessibilityRole: 'img'\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/ScrollStrategy~ScrollStrategy} kind.\r\n* @module enyo/ScrollStrategy\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tdispatcher = require('./dispatcher');\r\n\r\nvar\r\n\tControl = require('./Control');\r\n\r\n/**\r\n* {@link module:enyo/ScrollStrategy~ScrollStrategy} is a helper [kind]{@glossary kind} that implements a default \r\n* scrolling strategy for an {@link module:enyo/Scroller~Scroller}.\r\n* \r\n* `enyo/ScrollStrategy` is not typically created in application code. Instead, it is specified \r\n* as the value of the [strategyKind]{@link module:enyo/Scroller~Scroller#strategyKind} property of an\r\n* `enyo/Scroller` or {@link module:layout/List~List}, or is used by the framework implicitly.\r\n*\r\n* @class ScrollStrategy\r\n* @protected\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/ScrollStrategy~ScrollStrategy.prototype */ {\r\n\r\n\tname: 'enyo.ScrollStrategy',\r\n\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttag: null,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished: \r\n\t\t/** @lends module:enyo/ScrollStrategy~ScrollStrategy.prototype */ {\r\n\t\t\r\n\t\t/**\r\n\t\t* Specifies how to vertically scroll.  Acceptable values are `'scroll'`, `'auto'`,\r\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\r\n\t\t* scroll strategy.\r\n\t\t* \r\n\t\t* @type {String}\r\n\t\t* @default 'default'\r\n\t\t* @public\r\n\t\t*/\r\n\t\tvertical: 'default',\r\n\t\t\r\n\t\t/**\r\n\t\t* Specifies how to horizontally scroll.  Acceptable values are `'scroll'`, `'auto'`,\r\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\r\n\t\t* scroll strategy.\r\n\t\t* \r\n\t\t* @type {String}\r\n\t\t* @default 'default'\r\n\t\t* @public\r\n\t\t*/\r\n\t\thorizontal: 'default',\r\n\t\t\r\n\t\t/**\r\n\t\t* The horizontal scroll position.\r\n\t\t* \r\n\t\t* @type {Number}\r\n\t\t* @default 0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tscrollLeft: 0,\r\n\t\t\r\n\t\t/**\r\n\t\t* The vertical scroll position.\r\n\t\t* \r\n\t\t* @type {Number}\r\n\t\t* @default 0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tscrollTop: 0,\r\n\t\t\r\n\t\t/**\r\n\t\t* Maximum height of the scroll content.\r\n\t\t* \r\n\t\t* @type {Number}\r\n\t\t* @default null\r\n\t\t* @public\r\n\t\t*/\r\n\t\tmaxHeight: null,\r\n\t\t\r\n\t\t/**\r\n\t\t* Indicates whether mouse wheel may be used to move the [scroller]{@link module:enyo/Scroller~Scroller}.\r\n\t\t* \r\n\t\t* @type {Boolean}\r\n\t\t* @default true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tuseMouseWheel: true\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonScrollStart: '',\r\n\t\tonScrollStop: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tondragstart: 'dragstart',\r\n\t\tondragfinish: 'dragfinish',\r\n\t\tondown: 'down',\r\n\t\tonmove: 'move',\r\n\t\tonmousewheel: 'mousewheel',\r\n\t\tonscroll: 'domScroll'\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.horizontalChanged();\r\n\t\t\tthis.verticalChanged();\r\n\t\t\tthis.maxHeightChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tdispatcher.makeBubble(this.container, 'scroll');\r\n\t\t\tthis.scrollNode = this.calcScrollNode();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tteardownRender: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.scrollNode = null;\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcalcScrollNode: function () {\r\n\t\treturn this.container.hasNode();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thorizontalChanged: function () {\r\n\t\tthis.container.applyStyle('overflow-x', this.horizontal == 'default' ? 'auto' : this.horizontal);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tverticalChanged: function () {\r\n\t\tthis.container.applyStyle('overflow-y', this.vertical == 'default' ? 'auto' : this.vertical);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmaxHeightChanged: function () {\r\n\t\tthis.container.applyStyle('max-height', this.maxHeight);\r\n\t},\r\n\r\n\t/** \r\n\t* Scrolls to the specified position.\r\n\t*\r\n\t* @param {Number} x - The `x` position in pixels.\r\n\t* @param {Number} y - The `y` position in pixels.\r\n\t* @public\r\n\t*/\r\n\tscrollTo: function (x, y) {\r\n\t\tif (this.scrollNode) {\r\n\t\t\tthis.setScrollLeft(x);\r\n\t\t\tthis.setScrollTop(y);\r\n\t\t}\r\n\t},\r\n\r\n\t/** \r\n\t* Ensures that the given node is visible in the [scroller's]{@link module:enyo/Scroller~Scroller} viewport.\r\n\t*\r\n\t* @param {Node} node - The node to make visible in the [scroller's]{@link module:enyo/Scroller~Scroller}\r\n\t*\tviewport.\r\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\r\n\t*\tscroller.\r\n\t* @public\r\n\t*/\r\n\tscrollToNode: function (node, alignWithTop) {\r\n\t\tif (this.scrollNode) {\r\n\t\t\tvar sb = this.getScrollBounds();\r\n\t\t\tvar n = node;\r\n\t\t\tvar b = {height: n.offsetHeight, width: n.offsetWidth, top: 0, left: 0};\r\n\t\t\twhile (n && n.parentNode && n.id != this.scrollNode.id) {\r\n\t\t\t\tb.top += n.offsetTop;\r\n\t\t\t\tb.left += n.offsetLeft;\r\n\t\t\t\tn = n.parentNode;\r\n\t\t\t}\r\n\t\t\t// By default, the element is scrolled to align with the top of the scroll area.\r\n\t\t\tthis.setScrollTop(Math.min(sb.maxTop, alignWithTop === false ? b.top - sb.clientHeight + b.height : b.top));\r\n\t\t\tthis.setScrollLeft(Math.min(sb.maxLeft, alignWithTop === false ? b.left - sb.clientWidth + b.width : b.left));\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Scrolls the given [control]{@link module:enyo/Control~Control} into view.\r\n\t*\r\n\t* @param {module:enyo/Control~Control} ctl - The [control]{@link module:enyo/Control~Control} to make visible in the\r\n\t*\t[scroller's]{@link module:enyo/Scroller~Scroller} viewport.\r\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\r\n\t*\tscroller.\r\n\t* @public\r\n\t*/\r\n\tscrollIntoView: function (ctl, alignWithTop) {\r\n\t\tif (ctl.hasNode()) {\r\n\t\t\tctl.node.scrollIntoView(alignWithTop);\r\n\t\t}\r\n\t},\r\n\tisInView: function(inNode) {\r\n\t\tvar sb = this.getScrollBounds();\r\n\t\tvar ot = inNode.offsetTop;\r\n\t\tvar oh = inNode.offsetHeight;\r\n\t\tvar ol = inNode.offsetLeft;\r\n\t\tvar ow = inNode.offsetWidth;\r\n\t\treturn (ot >= sb.top && ot + oh <= sb.top + sb.clientHeight) && (ol >= sb.left && ol + ow <= sb.left + sb.clientWidth);\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the vertical scroll position.\r\n\t*\r\n\t* @param {Number} top - The vertical scroll position in pixels.\r\n\t* @public\r\n\t*/\r\n\tsetScrollTop: function (top) {\r\n\t\tthis.scrollTop = top;\r\n\t\tif (this.scrollNode) {\r\n\t\t\tthis.scrollNode.scrollTop = this.scrollTop;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the horizontal scroll position.\r\n\t*\r\n\t* @param {Number} left - The horizontal scroll position in pixels.\r\n\t* @public\r\n\t*/\r\n\tsetScrollLeft: function (left) {\r\n\t\tthis.scrollLeft = left;\r\n\t\tif (this.scrollNode) {\r\n\t\t\tthis.scrollNode.scrollLeft = this.scrollLeft;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the horizontal scroll position.\r\n\t*\r\n\t* @returns {Number} The horizontal scroll position in pixels.\r\n\t* @public\r\n\t*/\r\n\tgetScrollLeft: function () {\r\n\t\treturn this.scrollNode ? this.scrollNode.scrollLeft : this.scrollLeft;\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the vertical scroll position.\r\n\t*\r\n\t* @returns {Number} The vertical scroll position in pixels.\r\n\t* @private\r\n\t*/\r\n\tgetScrollTop: function () {\r\n\t\treturn this.scrollNode ? this.scrollNode.scrollTop : this.scrollTop;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_getScrollBounds: function () {\r\n\t\tvar s = this.getScrollSize(), cn = this.container.hasNode();\r\n\t\tvar b = {\r\n\t\t\tleft: this.getScrollLeft(),\r\n\t\t\ttop: this.getScrollTop(),\r\n\t\t\tclientHeight: cn ? cn.clientHeight : 0,\r\n\t\t\tclientWidth: cn ? cn.clientWidth : 0,\r\n\t\t\theight: s.height,\r\n\t\t\twidth: s.width\r\n\t\t};\r\n\t\tb.maxLeft = Math.max(0, b.width - b.clientWidth);\r\n\t\tb.maxTop = Math.max(0, b.height - b.clientHeight);\r\n\t\treturn b;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetScrollSize: function () {\r\n\t\tvar n = this.scrollNode;\r\n\t\treturn {width: n ? n.scrollWidth : 0, height: n ? n.scrollHeight : 0};\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the scroll boundaries of the [scroller]{@link module:enyo/Scroller~Scroller}.\r\n\t* \r\n\t* @returns {module:enyo/Scroller~Scroller~BoundaryObject} An [object]{@glossary Object} describing the\r\n\t*\tscroll boundaries.\r\n\t* @public\r\n\t*/\r\n\tgetScrollBounds: function () {\r\n\t\treturn this._getScrollBounds();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcalcStartInfo: function () {\r\n\t\tvar sb = this.getScrollBounds();\r\n\t\tvar y = this.getScrollTop(), x = this.getScrollLeft();\r\n\t\tthis.canVertical = sb.maxTop > 0 && this.vertical != 'hidden';\r\n\t\tthis.canHorizontal = sb.maxLeft > 0 && this.horizontal != 'hidden';\r\n\t\tthis.startEdges = {\r\n\t\t\ttop: y === 0,\r\n\t\t\tbottom: y === sb.maxTop,\r\n\t\t\tleft: x === 0,\r\n\t\t\tright: x === sb.maxLeft\r\n\t\t};\r\n\t},\r\n\r\n\t// NOTE: down, move, and drag handlers are needed only for native touch scrollers\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tshouldDrag: function (e) {\r\n\t\tvar requestV = e.vertical;\r\n\t\treturn (requestV && this.canVertical  || !requestV && this.canHorizontal) /*&& !this.isOobVerticalScroll(event)*/;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdragstart: function (sender, e) {\r\n\t\tthis.dragging = this.shouldDrag(e);\r\n\t\tif (this.dragging) {\r\n\t\t\treturn this.preventDragPropagation;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdragfinish: function (sender, e) {\r\n\t\tif (this.dragging) {\r\n\t\t\tthis.dragging = false;\r\n\t\t\te.preventTap();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Avoid allowing scroll when starting at a vertical boundary to prevent iOS from window \r\n\t* scrolling.\r\n\t* \r\n\t* @private\r\n\t*/\r\n\tdown: function (sender, e) {\r\n\t\tif (this.isScrolling()) {\r\n\t\t\te.preventTap();\r\n\t\t}\r\n\t\tthis.calcStartInfo();\r\n\t},\r\n\r\n\t/**\r\n\t* NOTE: Mobile native [scrollers]{@link module:enyo/Scroller~Scroller} need `touchmove`. Indicate this by \r\n\t* setting the `requireTouchmove` property to `true`.\r\n\t* \r\n\t* @private\r\n\t*/\r\n\tmove: function (sender, e) {\r\n\t\tif (e.which && (this.canVertical && e.vertical || this.canHorizontal && e.horizontal)) {\r\n\t\t\te.disablePrevention();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmousewheel: function (sender, e) {\r\n\t\t//* We disable mouse wheel scrolling by preventing the default\r\n\t\tif (!this.useMouseWheel) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdomScroll: function(sender, e) {\r\n\t\tif (!this._scrolling) {\r\n\t\t\tthis.doScrollStart();\r\n\t\t}\r\n\t\tthis._scrolling = true;\r\n\t\tthis.startJob('stopScrolling', function() {\r\n\t\t\tthis._scrolling = false;\r\n\t\t\tthis.doScrollStop();\r\n\t\t}, 100);\r\n\t},\r\n\r\n\t/**\r\n\t* @public\r\n\t*/\r\n\tisScrolling: function() {\r\n\t\treturn this._scrolling;\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Option~Option} kind.\r\n* @module enyo/Option\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind');\r\nvar\r\n\tControl = require('./Control');\r\n\r\n/**\r\n* {@link module:enyo/Option~Option} implements the [options]{@glossary option} in an\r\n* {@link module:enyo/Select~Select} [control]{@link module:enyo/Control~Control}.\r\n*\r\n* @class Option\r\n* @extends module:enyo/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Option~Option.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.Option',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished: {\r\n\t\t/** @lends module:enyo/Option~Option.prototype */\r\n\r\n\t\t/**\r\n\t\t* Value of the [option]{@link module:enyo/Option~Option}.\r\n\t\t* \r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @public\r\n\t\t*/\r\n\t\tvalue: '',\r\n\r\n\t\t/**\r\n\t\t* Set to `true` if this [option]{@link module:enyo/Option~Option} is selected (default is `false`).\r\n\t\t* \r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tselected: false\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttag: 'option',\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.valueChanged();\r\n\t\t\tthis.selectedChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tvalueChanged: function () {\r\n\t\tthis.setAttribute('value', this.value);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tselectedChanged: function () {\r\n\t\tthis.setAttribute('selected', this.selected);\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/ScrollThumb~ScrollThumb} kind.\r\n* @module enyo/ScrollThumb\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind');\r\n\r\nvar\r\n\tControl = require('../Control'),\r\n\tDom = require('../dom');\r\n\r\n/**\r\n* {@link module:enyo/ScrollThumb~ScrollThumb} is a helper [kind]{@glossary kind} used by \r\n* {@link module:enyo/TouchScrollStrategy~TouchScrollStrategy} and {@link module:enyo/TranslateScrollStrategy~TranslateScrollStrategy} to\r\n* display a small visual scroll indicator.\r\n* \r\n* `enyo/ScrollThumb` is not typically created in application code.\r\n*\r\n* @class ScrollThumb\r\n* @protected\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/ScrollThumb~ScrollThumb.prototype */ {\r\n\t\r\n\tname: 'enyo.ScrollThumb',\r\n\t\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* The orientation of the scroll indicator bar; 'v' for vertical or 'h' for horizontal.\r\n\t* \r\n\t* @type {String}\r\n\t* @default 'v'\r\n\t* @public\r\n\t*/\r\n\taxis: 'v',\r\n\r\n\t/**\r\n\t* Minimum size of the indicator.\r\n\t* \r\n\t* @private\r\n\t*/\r\n\tminSize: 4,\r\n\r\n\t/**\r\n\t* Size of the indicator's corners.\r\n\t* \r\n\t* @private\r\n\t*/\r\n\tcornerSize: 6,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclasses: 'enyo-thumb',\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tvar v = this.axis == 'v';\r\n\t\t\tthis.dimension = v ? 'height' : 'width';\r\n\t\t\tthis.offset = v ? 'top' : 'left';\r\n\t\t\tthis.translation = v ? 'translateY' : 'translateX';\r\n\t\t\tthis.positionMethod = v ? 'getScrollTop' : 'getScrollLeft';\r\n\t\t\tthis.sizeDimension = v ? 'clientHeight' : 'clientWidth';\r\n\t\t\tthis.addClass('enyo-' + this.axis + 'thumb');\r\n\t\t\tthis.transform = Dom.canTransform();\r\n\t\t\tif (Dom.canAccelerate()) {\r\n\t\t\t\tDom.transformValue(this, 'translateZ', 0);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/** \r\n\t* Syncs the scroll indicator bar to the [scroller]{@link module:enyo/Scroller~Scroller} size and position,\r\n\t* as determined by the passed-in scroll strategy.\r\n\t*\r\n\t* @param {module:enyo/ScrollStrategy~ScrollStrategy} strategy - The scroll strategy to be synced with.\r\n\t* @public\r\n\t*/\r\n\tsync: function (strategy) {\r\n\t\tthis.scrollBounds = strategy._getScrollBounds();\r\n\t\tthis.update(strategy);\r\n\t},\r\n\r\n\t/**\r\n\t* Updates the scroll indicator bar based on the scroll bounds of the strategy, the available\r\n\t* scroll area, and whether there is overscrolling. If the scroll indicator bar is not\r\n\t* needed, it will be not be displayed.\r\n\t* \r\n\t* @param {module:enyo/ScrollStrategy~ScrollStrategy} strategy - The scroll strategy to update from.\r\n\t* @public\r\n\t*/\r\n\tupdate: function (strategy) {\r\n\t\tif (this.showing) {\r\n\t\t\tvar d = this.dimension, o = this.offset;\r\n\t\t\tvar bd = this.scrollBounds[this.sizeDimension], sbd = this.scrollBounds[d];\r\n\t\t\tvar overs = 0, overp = 0, over = 0;\r\n\t\t\tif (bd >= sbd) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (strategy.isOverscrolling()) {\r\n\t\t\t\tover = strategy.getOverScrollBounds()['over' + o];\r\n\t\t\t\tovers = Math.abs(over);\r\n\t\t\t\toverp = Math.max(over, 0);\r\n\t\t\t}\r\n\t\t\tvar sbo = strategy[this.positionMethod]() - over;\r\n\t\t\t// calc size & position\r\n\t\t\tvar bdc = bd - this.cornerSize;\r\n\t\t\tvar s = Math.floor((bd * bd / sbd) - overs);\r\n\t\t\ts = Math.max(this.minSize, s);\r\n\t\t\tvar p = Math.floor((bdc * sbo / sbd) + overp);\r\n\t\t\tp = Math.max(0, Math.min(bdc - this.minSize, p));\r\n\t\t\t// apply thumb styling\r\n\t\t\tthis.needed = s < bd;\r\n\t\t\tif (this.needed && this.hasNode()) {\r\n\t\t\t\tif (this._pos !== p) {\r\n\t\t\t\t\tthis._pos = p;\r\n\t\t\t\t\tif(!this.transform) {\r\n\t\t\t\t\t\t//adjust top/left for browsers that don't support translations\r\n\t\t\t\t\t\tif(this.axis=='v') {\r\n\t\t\t\t\t\t\tthis.setBounds({top:p + 'px'});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.setBounds({left:p + 'px'});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tDom.transformValue(this, this.translation, p + 'px');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this._size !== s) {\r\n\t\t\t\t\tthis._size = s;\r\n\t\t\t\t\tthis.applyStyle(d, s + 'px');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* We implement `setShowing()` and cancel the [delayHide()]{@link module:enyo/ScrollThumb~ScrollThumb#delayHide} \r\n\t* because [showing]{@link module:enyo/Control~Control#showing} is not changed while we execute\r\n\t* `delayHide()`.\r\n\t*\r\n\t* @param {Boolean} showing - If `true`, displays the {@link module:enyo/ScrollThumb~ScrollThumb} if appropriate;\r\n\t*\totherwise, hides the ScrollThumb.\r\n\t* @public\r\n\t*/\r\n\tsetShowing: function (showing) {\r\n\t\tif (showing && showing != this.showing) {\r\n\t\t\tif (this.scrollBounds[this.sizeDimension] >= this.scrollBounds[this.dimension]) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.hasNode()) {\r\n\t\t\tthis.cancelDelayHide();\r\n\t\t}\r\n\t\tif (showing != this.showing) {\r\n\t\t\tvar last = this.showing;\r\n\t\t\tthis.showing = showing;\r\n\t\t\tthis.showingChanged(last);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Delays automatic hiding of the {@link module:enyo/ScrollThumb~ScrollThumb}.\r\n\t*\r\n\t* @param {Number} delay - The number of milliseconds to delay hiding of the\r\n\t*\t{@link module:enyo/ScrollThumb~ScrollThumb}.\r\n\t* @public\r\n\t*/\r\n\tdelayHide: function (delay) {\r\n\t\tif (this.showing) {\r\n\t\t\tthis.startJob('hide', this.hide, delay || 0);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Cancels any pending [delayHide()]{@link module:enyo/ScrollThumb~ScrollThumb#delayHide} jobs.\r\n\t* \r\n\t* @public\r\n\t*/\r\n\tcancelDelayHide: function () {\r\n\t\tthis.stopJob('hide');\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/DataRepeater~DataRepeater} kind.\r\n* @module enyo/DataRepeater\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils');\r\nvar\r\n\tControl = require('./Control'),\r\n\tRepeaterChildSupport = require('./RepeaterChildSupport');\r\n\r\nfunction at (idx) {\r\n\treturn this[idx];\r\n}\r\n\r\nfunction arrayFilter (record) {\r\n\treturn record[this.selectionProperty];\r\n}\r\n\r\nfunction modelFilter (record) {\r\n\treturn record.get(this.selectionProperty);\r\n}\r\n\r\n/**\r\n* {@link module:enyo/DataRepeater~DataRepeater} iterates over the items in an {@link module:enyo/Collection~Collection} to\r\n* repeatedly render and synchronize records (instances of {@link module:enyo/Model~Model}) to its\r\n* own children. For any record in the collection, a new child will be rendered in\r\n* the repeater. If the record is destroyed, the child will be destroyed. These\r\n* [controls]{@link module:enyo/Control~Control} will automatically update when properties on the\r\n* underlying records are modified if they have been bound using\r\n* [bindings]{@link module:enyo/Binding~Binding}.\r\n*\r\n* @class DataRepeater\r\n* @extends module:enyo/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nvar DataRepeater = module.exports = kind(\r\n\t/** @lends module:enyo/DataRepeater~DataRepeater.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.DataRepeater',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* Set this to `true` to enable selection support. Note that selection stores a\r\n\t* reference to the [model]{@link module:enyo/Model~Model} that is selected, via the\r\n\t* [selected]{@link module:enyo/DataRepeater~DataRepeater#selected} method.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tselection: true,\r\n\r\n\t/**\r\n\t* Specifies the type of selection (if enabled), that we want to enable. The possible values\r\n\t* are 'single', 'multi', and 'group'. The default is 'single' selection mode, which enables\r\n\t* selection and deselection of a single item at a time. The 'multi' selection mode allows\r\n\t* multiple children to be selected simultaneously, while the 'group' selection mode allows\r\n\t* group-selection behavior such that only one child may be selected at a time and, once a\r\n\t* child is selected, it cannot be deselected via user input. The child may still be\r\n\t* deselected via the selection API methods.\r\n\t*\r\n\t* @type {String}\r\n\t* @default 'single'\r\n\t* @public\r\n\t*/\r\n\tselectionType: 'single',\r\n\r\n\t/**\r\n\t* Set this to `true` to allow multiple children to be selected simultaneously.\r\n\t*\r\n\t* @deprecated since version 2.6\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tmultipleSelection: false,\r\n\r\n\t/**\r\n\t* Set this to `true` to allow group-selection behavior such that only one child\r\n\t* may be selected at a time and, once a child is selected, it cannot be\r\n\t* deselected via user input. The child may still be deselected via the selection\r\n\t* API methods. Note that setting this property to `true` will set the\r\n\t* [multipleSelection]{@link module:enyo/DataRepeater~DataRepeater#multipleSelection} property to\r\n\t* `false`.\r\n\t*\r\n\t* @deprecated since version 2.6\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\tgroupSelection: false,\r\n\r\n\t/**\r\n\t* This class will be applied to the [repeater]{@link module:enyo/DataRepeater~DataRepeater} when\r\n\t* [selection]{@link module:enyo/DataRepeater~DataRepeater#selection} is enabled. It will also be\r\n\t* applied if [multipleSelection]{@link module:enyo/DataRepeater~DataRepeater#multipleSelection}\r\n\t* is `true`.\r\n\t*\r\n\t* @type {String}\r\n\t* @default 'selection-enabled'\r\n\t* @public\r\n\t*/\r\n\tselectionClass: 'selection-enabled',\r\n\r\n\t/**\r\n\t* This class will be applied to the [repeater]{@link module:enyo/DataRepeater~DataRepeater} when\r\n\t* [selectionType]{@link module:enyo/DataRepeater~DataRepeater#selectionType} is `multi`.\r\n\t* When that is the case, the [selectionClass]{@link module:enyo/DataRepeater~DataRepeater#selectionClass}\r\n\t* will also be applied.\r\n\t*\r\n\t* @type {String}\r\n\t* @default 'multiple-selection-enabled'\r\n\t* @public\r\n\t*/\r\n\tmultipleSelectionClass: 'multiple-selection-enabled',\r\n\r\n\t/**\r\n\t* In cases where selection should be detected from the state of the\r\n\t* [model]{@link module:enyo/Model~Model}, this property should be set to the property on\r\n\t* the model that the [repeater]{@link module:enyo/DataRepeater~DataRepeater} should observe for\r\n\t* changes. If the model changes, the repeater will reflect the change without\r\n\t* having to interact directly with the model. Note that this property must be\r\n\t* part of the model's schema, or else its changes will not be detected\r\n\t* properly.\r\n\t*\r\n\t* @type {String}\r\n\t* @default ''\r\n\t* @public\r\n\t*/\r\n\tselectionProperty: '',\r\n\r\n\t/**\r\n\t* Set this to a space-delimited string of [events]{@glossary event} or an\r\n\t* [array]{@glossary Array} that can trigger the selection of a particular\r\n\t* child. To prevent selection entirely, set\r\n\t* [selection]{@link module:enyo/DataRepeater~DataRepeater#selection} to `false`.\r\n\t*\r\n\t* @type {String}\r\n\t* @default 'ontap'\r\n\t* @public\r\n\t*/\r\n\tselectionEvents: 'ontap',\r\n\r\n\t/**\r\n\t* Use this [hash]{@glossary Object} to define default [binding]{@link module:enyo/Binding~Binding}\r\n\t* properties for **all** children (even children of children) of this\r\n\t* [repeater]{@link module:enyo/DataRepeater~DataRepeater}. This can eliminate the need to write the\r\n\t* same paths over and over. You may also use any binding macros. Any property\r\n\t* defined here will be superseded by the same property if defined for an individual\r\n\t* binding.\r\n\t*\r\n\t* @type {Object}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tchildBindingDefaults: null,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tinitComponents: function () {\r\n\t\tthis.initContainer();\r\n\t\tvar components = this.kindComponents || this.components || [],\r\n\t\t\towner = this.getInstanceOwner(),\r\n\t\t\tprops = this.defaultProps? utils.clone(this.defaultProps, true): (this.defaultProps = {});\r\n\t\t// ensure that children know who their binding owner is\r\n\t\tprops.bindingTransformOwner = this;\r\n\t\tprops.bindingDefaults = this.childBindingDefaults;\r\n\t\tif (components) {\r\n\t\t\t// if there are multiple components in the components block they will become nested\r\n\t\t\t// children of the default kind set for the repeater\r\n\t\t\tif (components.length > 1) {\r\n\t\t\t\tprops.components = components;\r\n\t\t\t}\r\n\t\t\t// if there is only one child, the properties will be the default kind of the repeater\r\n\t\t\telse {\r\n\t\t\t\tutils.mixin(props, components[0]);\r\n\t\t\t}\r\n\t\t\tprops.repeater = this;\r\n\t\t\tprops.owner = owner;\r\n\t\t\tprops.mixins = props.mixins? props.mixins.concat(this.childMixins): this.childMixins;\r\n\t\t}\r\n\r\n\t\tthis.defaultProps = props;\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tthis._selection = [];\r\n\t\t\t// we need to initialize our selectionEvents array\r\n\t\t\tvar se = this.selectionEvents;\r\n\t\t\tthis.selectionEvents = (typeof se == 'string'? se.split(' '): se);\r\n\t\t\t// we need to pre-bind these methods so they can easily be added\r\n\t\t\t// and removed as listeners later\r\n\t\t\tvar h = this._handlers = utils.clone(this._handlers);\r\n\t\t\tfor (var e in h) {\r\n\t\t\t\th[e] = this.bindSafely(h[e]);\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.collectionChanged();\r\n\t\t\t// Converting deprecated selection properties to our current selection API\r\n\t\t\tthis.selectionType = this.multipleSelection ? (this.groupSelection ? 'group' : 'multi') : this.selectionType;\r\n\t\t\tthis.selectionTypeChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgroupSelectionChanged: function () {\r\n\t\tthis.set('selectionType', this.groupSelection ? 'group' : 'single');\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmultipleSelectionChanged: function () {\r\n\t\tthis.set('selectionType', this.multipleSelection ? 'multi' : 'single');\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tselectionTypeChanged: function (was) {\r\n\t\t// Synchronizing our deprecated properties\r\n\t\tthis.groupSelection = this.selectionType == 'group';\r\n\t\tthis.multipleSelection = this.selectionType == 'multi';\r\n\r\n\t\tif (was == 'multi') {\r\n\t\t\tif (this._selection.length > 1) {\r\n\t\t\t\tthis.deselectAll();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.selectionChanged();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tselectionChanged: function () {\r\n\t\tthis.addRemoveClass(this.selectionClass, this.selection);\r\n\t\tthis.addRemoveClass(this.multipleSelectionClass, this.selectionType == 'multi' && this.selection);\r\n\t},\r\n\r\n\t/**\r\n\t* Destroys any existing children in the [repeater]{@link module:enyo/DataRepeater~DataRepeater} and creates all\r\n\t* new children based on the current [data]{@link module:enyo/Repeater~Repeater#data}.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\treset: function () {\r\n\t\t// use the facaded dataset because this could be any\r\n\t\t// collection of records\r\n\t\tvar dd = this.get('data');\r\n\t\t// destroy the client controls we might already have\r\n\t\tthis.destroyClientControls();\r\n\t\t// and now we create new ones for each new record we have\r\n\t\tfor (var i=0, r; (r=dd.at(i)); ++i) {\r\n\t\t\tthis.add(r, i);\r\n\t\t}\r\n\t\tthis.hasReset = true;\r\n\t},\r\n\t/**\r\n\t* Refreshes each [control]{@link module:enyo/Control~Control} in the dataset.\r\n\t*\r\n\t* @param {Boolean} immediate - If `true`, refresh will occur immediately; otherwise,\r\n\t* it will be queued up as a job.\r\n\t* @public\r\n\t*/\r\n\trefresh: function (immediate) {\r\n\t\tif (!this.hasReset) { return this.reset(); }\r\n\t\tvar refresh = this.bindSafely(function () {\r\n\t\t\tvar dd = this.get('data'),\r\n\t\t\t\tcc = this.getClientControls();\r\n\t\t\tfor (var i=0, c, d; (d=dd.at(i)); ++i) {\r\n\t\t\t\tc = cc[i];\r\n\t\t\t\tif (c) {\r\n\t\t\t\t\tc.set('model', d);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.add(d, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.prune();\r\n\t\t});\r\n\r\n\t\t// refresh is used as the event handler for\r\n\t\t// collection resets so checking for truthy isn't\r\n\t\t// enough. it must be true.\r\n\t\tif(immediate === true) {\r\n\t\t\trefresh();\r\n\t\t} else {\r\n\t\t\tthis.startJob('refreshing', refresh, 16);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tvar dd;\r\n\r\n\t\t\tsup.apply(this, arguments);\r\n\r\n\t\t\tdd = this.get('data');\r\n\r\n\t\t\tif (dd && dd.length) {\r\n\t\t\t\tthis.reset();\r\n\t\t\t}\r\n\t\t\tthis.hasRendered = true;\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Adds a [record]{@link module:enyo/Model~Model} at a particular index.\r\n\t*\r\n\t* @param {module:enyo/Model~Model} rec - The [record]{@link module:enyo/Model~Model} to add.\r\n\t* @param {Number} idx - The index at which the record should be added.\r\n\t* @public\r\n\t*/\r\n\tadd: function (rec, idx) {\r\n\t\tvar c = this.createComponent({model: rec, index: idx});\r\n\t\tif (this.generated && !this.batching) {\r\n\t\t\tc.render();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Removes the [record]{@link module:enyo/Model~Model} at a particular index.\r\n\t*\r\n\t* @param {Number} idx - The index of the [record]{@link module:enyo/Model~Model} to be removed.\r\n\t* @public\r\n\t*/\r\n\tremove: function (idx) {\r\n\t\tvar controls = this.getClientControls()\r\n\t\t\t, control;\r\n\r\n\t\tcontrol = controls[idx];\r\n\r\n\t\tif (control) control.destroy();\r\n\t},\r\n\r\n\t/**\r\n\t* Removes any [controls]{@link module:enyo/Control~Control} that are outside the boundaries of the\r\n\t* [data]{@link module:enyo/DataRepeater~DataRepeater#data} [collection]{@link module:enyo/Collection~Collection} for the\r\n\t* [repeater]{@link module:enyo/DataRepeater~DataRepeater}.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tprune: function () {\r\n\t\tvar g = this.getClientControls(),\r\n\t\t\tdd = this.get('data'),\r\n\t\t\tlen = (dd ? dd.length: 0),\r\n\t\t\tx;\r\n\t\tif (g.length > len) {\r\n\t\t\tx = g.slice(len);\r\n\t\t\tfor (var i=0, c; (c=x[i]); ++i) {\r\n\t\t\t\tc.destroy();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Syncs the bindings of all repeater children. Designed for use cases where\r\n\t* the repeater's collection is a native JavaScript array with native JavaScript\r\n\t* objects as models (as opposed to Enyo Collections and Models). In this case,\r\n\t* you can't depend on bindings to update automatically when the underlying data\r\n\t* changes, so if you know that there has been a change to the data, you can force\r\n\t* an update by sync'ing all of the bindings.\r\n\t*\r\n\t* This API is to be considered experimental and is subject to change.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tsyncChildBindings: function (opts) {\r\n\t\tthis.getClientControls().forEach(function (c) {\r\n\t\t\tc.syncBindings(opts);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tinitContainer: function () {\r\n\t\tvar ops = this.get('containerOptions'),\r\n\t\t\tnom = ops.name || (ops.name = this.containerName);\r\n\t\tthis.createChrome([ops]);\r\n\t\tthis.discoverControlParent();\r\n\t\tif (nom != this.containerName) {\r\n\t\t\tthis.$[this.containerName] = this.$[nom];\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tonSelected: 'childSelected',\r\n\t\tonDeselected: 'childDeselected'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_handlers: {\r\n\t\tadd: 'modelsAdded',\r\n\t\tremove: 'modelsRemoved',\r\n\t\treset: 'refresh',\r\n\t\tsort: 'refresh',\r\n\t\tfilter: 'refresh'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcomponentsChanged: function (p) {\r\n\t\tthis.initComponents();\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcollectionChanged: function (p) {\r\n\t\tvar c = this.collection;\r\n\t\tif (typeof c == 'string') {\r\n\t\t\tc = this.collection = utils.getPath.call(global, c);\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tthis.initCollection(c, p);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tinitCollection: function (c, p) {\r\n\t\tvar e, filter, isArray = c && c instanceof Array;\r\n\r\n\t\tif (c && c.addListener) {\r\n\t\t\tfor (e in this._handlers) {\r\n\t\t\t\tc.addListener(e, this._handlers[e]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Decorate native JS array with at() so that we can\r\n\t\t// access members of our dataset consistently, regardless\r\n\t\t// of whether our data is in an array or a Collection\r\n\t\tif (c && !c.at) {\r\n\t\t\tObject.defineProperty(c, 'at', {value: at, enumerable: false});\r\n\t\t}\r\n\t\tif (p && p.removeListener) {\r\n\t\t\tfor (e in this._handlers) {\r\n\t\t\t\tp.removeListener(e, this._handlers[e]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (c && this.selectionProperty) {\r\n\t\t\tfilter = isArray ? arrayFilter : modelFilter;\r\n\t\t\tthis._selection = c.filter(filter, this);\r\n\t\t} else {\r\n\t\t\tthis._selection = [];\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmodelsAdded: function (sender, e, props) {\r\n\t\tif (sender === this.collection) this.refresh();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmodelsRemoved: function (sender, e, props) {\r\n\t\tif (sender === this.collection) {\r\n\t\t\tthis.deselectRemovedModels(props.models);\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Deselect removed models from _selected array.\r\n\t* After calling it, we can ensure that the removed models aren't currently selected.\r\n\t* @param {array} models - The array of models that are removed from collection.\r\n\t* @private\r\n\t*/\r\n\tdeselectRemovedModels: function(models) {\r\n\t\tvar selected = this._selection,\r\n\t\t\torig,\r\n\t\t\tmodel,\r\n\t\t\tidx,\r\n\t\t\tlen = selected && selected.length,\r\n\t\t\ti = models.length - 1;\r\n\r\n\t\t// We have selected models\r\n\t\tif (len) {\r\n\t\t\t// unfortunately we need to make a copy to preserve what the original was\r\n\t\t\t// so we can pass it with the notification if any of these are deselected\r\n\t\t\torig = selected.slice();\r\n\r\n\t\t\t// we have _selected array to track currently selected models\r\n\t\t\t// if some removed models are in _selected, we should remove them from _selected\r\n\t\t\t// clearly we won't need to continue checking if selected does not have any models\r\n\t\t\tfor (; (model = models[i]) && selected.length; --i) {\r\n\t\t\t\tidx = selected.indexOf(model);\r\n\t\t\t\tif (idx > -1) selected.splice(idx, 1);\r\n\t\t\t}\r\n\r\n\t\t\t// Some selected models are discovered, so we need to notify\r\n\t\t\tif (len != selected.length) {\r\n\t\t\t\tif (this.selection) {\r\n\t\t\t\t\tif (this.selectionType == 'multi') this.notify('selected', orig, selected);\r\n\t\t\t\t\telse this.notify('selected', orig[0], selected[0] || null);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tbatchingChanged: function (prev, val) {\r\n\t\tif (this.generated && false === val) {\r\n\t\t\tthis.$[this.containerName].render();\r\n\t\t\tthis.refresh(true);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Calls [childForIndex()]{@link module:enyo/DataRepeater~DataRepeater#getChildForIndex}. Leaving for posterity.\r\n\t*\r\n\t* @param {Number} idx - The index of the child to retrieve.\r\n\t* @returns {module:enyo/Control~Control|undefined} The [control]{@link module:enyo/Control~Control} at the specified\r\n\t* index, or `undefined` if it could not be found or the index is out of bounds.\r\n\t* @public\r\n\t*/\r\n\tgetChildForIndex: function (idx) {\r\n\t\treturn this.childForIndex(idx);\r\n\t},\r\n\r\n\t/**\r\n\t* Attempts to return the [control]{@link module:enyo/Control~Control} representation at a particular index.\r\n\t*\r\n\t* @param {Number} idx - The index of the child to retrieve.\r\n\t* @returns {module:enyo/Control~Control|undefined} The [control]{@link module:enyo/Control~Control} at the specified\r\n\t* index, or `undefined` if it could not be found or the index is out of bounds.\r\n\t* @public\r\n\t*/\r\n\tchildForIndex: function (idx) {\r\n\t\treturn this.$.container.children[idx];\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the index of a child control. This is useful primarily when you have a reference to a Control\r\n\t* that is not (or may not be) an immediate child of the repeater, but is instead a sub-child of one of the\r\n\t* repeater's immediate children.\r\n\t*\r\n\t* @param {Control} child - The child (or sub-child) whose index you want to retrieve.\r\n\t* @returns {Number} The index of the child, or -1 if the Control is not a child of the repeater.\r\n\t* @public\r\n\t*/\r\n\tindexForChild: function (child) {\r\n\t\twhile (child && child.repeater !== this) {\r\n\t\t\tchild = child.parent;\r\n\t\t}\r\n\t\treturn child ? child.index : -1;\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the data associated with the [repeater]{@link module:enyo/DataRepeater~DataRepeater}.\r\n\t*\r\n\t* @returns {module:enyo/Collection~Collection} The {@link module:enyo/Collection~Collection} that comprises the data.\r\n\t* @public\r\n\t*/\r\n\tdata: function () {\r\n\t\treturn this.collection;\r\n\t},\r\n\r\n\t/**\r\n\t* Consolidates selection logic and allows for deselection of a [model]{@link module:enyo/Model~Model}\r\n\t* that has already been removed from the [collection]{@link module:enyo/Collection~Collection}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_select: function (idx, model, select) {\r\n\t\tif (!this.selection) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar c = this.getChildForIndex(idx),\r\n\t\t\ts = this._selection,\r\n\t\t\ti = utils.indexOf(model, s),\r\n\t\t\tdd = this.get('data'),\r\n\t\t\tp = this.selectionProperty;\r\n\r\n\t\tif (select) {\r\n\t\t\tif(i == -1) {\r\n\t\t\t\tif(this.selectionType != 'multi') {\r\n\t\t\t\t\twhile (s.length) {\r\n\t\t\t\t\t\ti = dd.indexOf(s.pop());\r\n\t\t\t\t\t\tthis.deselect(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ts.push(model);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(i >= 0) {\r\n\t\t\t\ts.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (c) {\r\n\t\t\tc.set('selected', select);\r\n\t\t}\r\n\t\tif (p && model) {\r\n\t\t\tif (typeof model.set === 'function') {\r\n\t\t\t\tmodel.set(p, select);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmodel[p] = select;\r\n\t\t\t\tif(c) c.syncBindings({force: true, all: true});\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.notifyObservers('selected');\r\n\t},\r\n\r\n\t/**\r\n\t* Selects the item at the given index.\r\n\t*\r\n\t* @param {Number} idx - The index of the item to select.\r\n\t* @public\r\n\t*/\r\n\tselect: function (idx) {\r\n\t\tvar dd = this.get('data');\r\n\r\n\t\tthis._select(idx, dd.at(idx), true);\r\n\t},\r\n\r\n\t/**\r\n\t* Deselects the item at the given index.\r\n\t*\r\n\t* @param {Number} idx - The index of the item to deselect.\r\n\t* @public\r\n\t*/\r\n\tdeselect: function (idx) {\r\n\t\tvar dd = this.get('data');\r\n\r\n\t\tthis._select(idx, dd.at(idx), false);\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether a [model]{@link module:enyo/Model~Model} is currently selected.\r\n\t*\r\n\t* @param {module:enyo/Model~Model} model - The [model]{@link module:enyo/Model~Model} whose selection status\r\n\t* is to be determined.\r\n\t* @returns {Boolean} `true` if the given model is selected; otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\tisSelected: function (model) {\r\n\t\treturn !!~utils.indexOf(model, this._selection);\r\n\t},\r\n\r\n\t/**\r\n\t* Selects all items (if [selectionType]{@link module:enyo/DataRepeater~DataRepeater#selectionType} is `multi`).\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tselectAll: function () {\r\n\t\tvar dd = this.get('data');\r\n\r\n\t\tif (this.selectionType == 'multi') {\r\n\t\t\tthis.stopNotifications();\r\n\t\t\tvar s = this._selection\r\n\t\t\t\t, len = dd ? dd.length: 0;\r\n\t\t\ts.length = 0;\r\n\t\t\tfor (var i=0; i<len; ++i) {\r\n\t\t\t\tthis.select(i);\r\n\t\t\t}\r\n\t\t\tthis.startNotifications();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Deselects all items.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tdeselectAll: function () {\r\n\t\tvar dd = this.get('data');\r\n\r\n\t\tif (this.selection) {\r\n\t\t\tthis.stopNotifications();\r\n\t\t\tvar s = this._selection, m, i;\r\n\t\t\twhile (s.length) {\r\n\t\t\t\tm = s.pop();\r\n\t\t\t\ti = dd.indexOf(m);\r\n\t\t\t\tthis.deselect(i);\r\n\t\t\t}\r\n\t\t\tthis.startNotifications();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* A computed property that returns the currently selected [model]{@link module:enyo/Model~Model}\r\n\t* (if [selectionType]{@link module:enyo/DataRepeater~DataRepeater#selectionType} is not `multi'`),\r\n\t* or an immutable [array]{@glossary Array} of all currently selected models (if\r\n\t* `selectionType` is `multi'`).\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tselected: function() {\r\n\t\t// to ensure that bindings will clear properly according to their api\r\n\t\treturn (this.selectionType == 'multi' ? this._selection : this._selection[0]) || null;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdataChanged: function () {\r\n\t\tif (this.get('data') && this.hasRendered) {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcomputed: [\r\n\t\t{method: 'selected'},\r\n\t\t{method: 'data', path: ['controller', 'collection']}\r\n\t],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tchildMixins: [RepeaterChildSupport],\r\n\r\n\t/**\r\n\t* The name of the container specified in\r\n\t* [containerOptions]{@link module:enyo/DataRepeater~DataRepeater#containerOptions}. This may or\r\n\t* may not have the same value as\r\n\t* [controlParentName]{@link module:enyo/DataRepeater~DataRepeater#controlParentName}.\r\n\t*\r\n\t* @type {String}\r\n\t* @default 'container'\r\n\t* @public\r\n\t*/\r\n\tcontainerName: 'container',\r\n\r\n\t/**\r\n\t* A [Kind]{@glossary Kind} definition that will be used as the chrome for the container\r\n\t*  of the DataRepeater. When specifying a custom definition be sure to include a container\r\n\t*  component that has the name specified in\r\n\t*  [controlParentName]{@link module:enyo/DataRepeater~DataRepeater#controlParentName}.\r\n\t*\r\n\t* @type {Object}\r\n\t* @default {name: 'container', classes: 'enyo-fill enyo-data-repeater-container'}\r\n\t* @public\r\n\t*/\r\n\tcontainerOptions: {name: 'container', classes: 'enyo-fill enyo-data-repeater-container'},\r\n\r\n\t/**\r\n\t* See {@link module:enyo/UiComponent~UiComponent#controlParentName}\r\n\t* @type {String}\r\n\t* @default 'container'\r\n\t* @public\r\n\t*/\r\n\tcontrolParentName: 'container',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tbatching: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_selection: null,\r\n\r\n\t// Accessibility\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tariaObservers: [\r\n\t\t{path: ['selection', 'multipleSelection'], method: function () {\r\n\t\t\tthis.setAriaAttribute('role', this.selection ? 'listbox' : 'list');\r\n\t\t\tthis.setAriaAttribute('aria-multiselectable', this.selection && this.multipleSelection ? true : null);\r\n\t\t}}\r\n\t]\r\n});\r\n\r\n/**\r\n* @static\r\n* @private\r\n*/\r\nDataRepeater.concat = function (ctor, props) {\r\n\tvar p = ctor.prototype || ctor;\r\n\tif (props.childMixins) {\r\n\t\tp.childMixins = (p.childMixins? utils.merge(p.childMixins, props.childMixins): props.childMixins.slice());\r\n\t\tdelete props.childMixins;\r\n\t}\r\n};\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/GroupItem~GroupItem} kind.\r\n* @module enyo/GroupItem\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind');\r\nvar\r\n\tControl = require('./Control');\r\n\r\n/**\r\n* Fires when the [active state]{@link module:enyo/GroupItem~GroupItem#active} has changed.\r\n*\r\n* @event module:enyo/GroupItem~GroupItem#onActivate\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/GroupItem~GroupItem} is the base [kind]{@glossary kind} for the\r\n* [Grouping]{@link module:enyo/Group~Group} API. It manages the\r\n* [active state]{@link module:enyo/GroupItem~GroupItem#active} of the [component]{@link module:enyo/Component~Component}\r\n* (or the [inheriting]{@glossary subkind} component). A subkind may call `setActive()` \r\n* to set the [active]{@link module:enyo/GroupItem~GroupItem#active} property to the desired state; this\r\n* will additionally [bubble]{@link module:enyo/Component~Component#bubble} an \r\n* [onActivate]{@link module:enyo/GroupItem~GroupItem#onActivate} {@glossary event}, which may\r\n* be handled as needed by the containing components. This is useful for creating\r\n* groups of items whose state should be managed collectively.\r\n*\r\n* For an example of how this works, see the {@link module:enyo/Group~Group} kind, which enables the\r\n* creation of radio groups from arbitrary components that\tsupport the Grouping API.\r\n*\r\n* @class GroupItem\r\n* @extends module:enyo/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Groupitem~Groupitem.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.GroupItem',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished: \r\n\t\t/** @lends module:enyo/Groupitem~Groupitem.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Will be `true` if the item is currently selected.\r\n\t\t* \r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tactive: false\r\n\t},\r\n\t\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.activeChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @fires module:enyo/GroupItem~GroupItem#onActivate\r\n\t* @private\r\n\t*/\r\n\tactiveChanged: function () {\r\n\t\tthis.bubble('onActivate');\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Checkbox~Checkbox} kind.\r\n* @module enyo/Checkbox\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind'),\r\n\tutils = require('../utils');\r\nvar\r\n\tInput = require('../Input');\r\n\r\n/**\r\n* Fires when checkbox is tapped.\r\n*\r\n* @event module:enyo/Checkbox~Checkbox#onActivate\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing event information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/Checkbox~Checkbox} implements an HTML checkbox [input]{@glossary input}, with\r\n* support for grouping using {@link module:enyo/Group~Group}.\r\n*\r\n* @class Checkbox\r\n* @extends module:enyo/Input~Input\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Checkbox~Checkbox.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.Checkbox',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Input,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclasses: 'enyo-checkbox',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonActivate: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/Checkbox~Checkbox.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Value of the checkbox; will be `true` if checked.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tchecked: false,\r\n\r\n\t\t/**\r\n\t\t* A [Group API]{@link module:enyo/Group~Group} requirement for determining the selected item.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tactive: false,\r\n\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\ttype: 'checkbox'\r\n\t},\r\n\r\n\t/**\r\n\t* Disable classes inherited from {@link module:enyo/Input~Input}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tkindClasses: \"\",\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tonchange: 'change'\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tif (this.active) {\r\n\t\t\t\tthis.activeChanged();\r\n\t\t\t}\r\n\t\t\tthis.checkedChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcheckedChanged: function () {\r\n\t\tthis.setNodeProperty('checked', this.checked);\r\n\t\tthis.setAttribute('checked', this.checked ? 'checked' : '');\r\n\t\tthis.setActive(this.checked);\r\n\t},\r\n\r\n\t/**\r\n\t* The [active]{@link module:enyo/Checkbox~Checkbox#active} property and `onActivate`\r\n\t* {@glossary event} are part of the [GroupItem]{@link module:enyo/GroupItem~GroupItem}\r\n\t* interface supported by this [object]{@glossary Object}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tactiveChanged: function () {\r\n\t\tthis.active = utils.isTrue(this.active);\r\n\t\tthis.setChecked(this.active);\r\n\t\tthis.bubble('onActivate');\r\n\t},\r\n\r\n\t/**\r\n\t* All [input]{@link module:enyo/Input~Input} type [controls]{@link module:enyo/Control~Control} support the\r\n\t* [value]{@link module:enyo/Input~Input#value} property.\r\n\t*\r\n\t* @param {Boolean} val - Whether or not the [checkbox]{@link module:enyo/Checkbox~Checkbox} should\r\n\t* be checked. The value will be treated as `true` if it is truthy; otherwise,\r\n\t* `false`.\r\n\t* @public\r\n\t*/\r\n\tsetValue: function (val) {\r\n\t\tthis.setChecked(utils.isTrue(val));\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the current [value]{@link module:enyo/Input~Input#value} of the\r\n\t* [checkbox]{@link module:enyo/Checkbox~Checkbox}.\r\n\t*\r\n\t* @returns {Boolean} `true` if the [checkbox]{@link module:enyo/Checkbox~Checkbox} is checked;\r\n\t* otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\tgetValue: function () {\r\n\t\treturn this.getChecked();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tvalueChanged: function () {\r\n\t\t// inherited behavior is to set \"value\" attribute and node-property\r\n\t\t// which does not apply to checkbox (uses \"checked\") so\r\n\t\t// we squelch the inherited method\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tchange: function () {\r\n\t\tvar nodeChecked = utils.isTrue(this.getNodeProperty('checked'));\r\n\t\tthis.setActive(nodeChecked);\r\n\t},\r\n\r\n\t// Accessibility\r\n\r\n\t/**\r\n\t* @default checkbox\r\n\t* @type {String}\r\n\t* @see enyo/AccessibilitySupport~AccessibilitySupport#accessibilityRole\r\n\t* @public\r\n\t*/\r\n\taccessibilityRole: 'checkbox',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tariaObservers: [\r\n\t\t{from: 'checked', to: 'aria-checked'}\r\n\t]\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Select~Select} kind.\r\n* @module enyo/Select\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tplatform = require('./platform');\r\nvar\r\n\tControl = require('./Control'),\r\n\t/*jshint -W079*/\r\n\tOption = require('./Option');\r\n\t/*jshint +W079*/\r\n\r\n/**\r\n* {@link module:enyo/Select~Select} implements an HTML [selection]{@glossary select} widget, using\r\n* {@link module:enyo/Option~Option} instances by default.\r\n*\r\n* ```javascript\r\n* var\r\n* \tkind = require('enyo/kind'),\r\n* \tSelect = require('enyo/Select');\r\n*\r\n* {kind: Select, onchange: 'selectChanged', components: [\r\n* \t{content: 'Descending', value: 'd'},\r\n* \t{content: 'Ascending', value: 'a'}\r\n* ]}\r\n*\r\n* selectChanged: function (inSender, inEvent) {\r\n* \tvar s = inSender.getValue();\r\n* \tif (s == 'd') {\r\n* \t\tthis.sortListDescending();\r\n* \t} else {\r\n* \t\tthis.sortListAscending();\r\n* \t}\r\n* }\r\n* ```\r\n*\r\n* Note: This uses the [&lt;select&gt;]{@glossary select} tag, which isn't implemented for\r\n* native webOS applications, although it does work in the webOS Web browser.\r\n*\r\n* @class Select\r\n* @extends module:enyo/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Select~Select.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.Select',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/Select~Select.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* The index of the selected [option]{@link module:enyo/Option~Option} in the list.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default null\r\n\t\t* @public\r\n\t\t*/\r\n\t\tselected: null,\r\n\r\n\t\t/**\r\n\t\t* The value of the selected [option]{@link module:enyo/Option~Option}.\r\n\t\t*\r\n\t\t* @type {Object}\r\n\t\t* @default null\r\n\t\t* @public\r\n\t\t*/\r\n\t\tvalue: null,\r\n\r\n\t\t/**\r\n\t\t* The size of the select box in rows.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default 0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tsize: 0,\r\n\r\n\t\t/**\r\n\t\t* Sets whether the enyo/Select can select multiple options\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tmultiple: false,\r\n\r\n\t\t/**\r\n\t\t* Sets whether the enyo/Select is disabled, or not\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tdisabled: false\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tonchange: 'change'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttag: 'select',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdefaultKind: Option,\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t// This makes Select.selected a higher priority than Option.selected but ensures that\r\n\t\t\t// the former works at create time\r\n\t\t\tif (this.selected !== null) {\r\n\t\t\t\tthis.selectedChanged();\r\n\t\t\t} else {\r\n\t\t\t\tthis.updateSelectedFromNode();\r\n\t\t\t\tthis.updateValueFromNode();\r\n\t\t\t}\r\n\t\t\tthis.sizeChanged();\r\n\t\t\tthis.multipleChanged();\r\n\t\t\tthis.disabledChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tupdateSelectedFromNode: function () {\r\n\t\tthis.set('selected', Number(this.getNodeProperty('selectedIndex', this.selected)));\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tupdateValueFromNode: function () {\r\n\t\tthis.set('value', this.getNodeProperty('value', this.value));\r\n\t},\r\n\r\n\t/**\r\n\t* Updates the `selected` option matching the current value. If the option doesn't have a value,\r\n\t* it will match its content instead.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tselectOptionByValue: function () {\r\n\t\tvar i, controls, l, c;\r\n\r\n\t\tfor (i = 0, controls = this.getControls(), l = controls.length; i < l; i++) {\r\n\t\t\tc = controls[i];\r\n\t\t\t// support \r\n\t\t\tif (c.value ? c.value === this.value : c.content === this.value) {\r\n\t\t\t\tif (i !== this.selected) this.set('selected', i);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tselectedChanged: function () {\r\n\t\tthis.setNodeProperty('selectedIndex', this.selected);\r\n\t\tthis.updateValueFromNode();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tvalueChanged: function () {\r\n\t\t// IE will clear selectedIndex when setting the value directly on the node so instead we\r\n\t\t// iterate the children, find the matching value, and update selected if necessary.\r\n\t\tif (platform.ie || platform.edge) {\r\n\t\t\tthis.selectOptionByValue();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setNodeProperty('value', this.value);\r\n\t\t\tthis.updateSelectedFromNode();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsizeChanged: function () {\r\n\t\tthis.setNodeProperty('size', this.size);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmultipleChanged: function () {\r\n\t\tthis.setNodeProperty('multiple', this.multiple);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdisabledChanged: function () {\r\n\t\tthis.setNodeProperty('disabled', this.disabled);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tchange: function () {\r\n\t\tthis.updateSelectedFromNode();\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trender: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\t// work around IE bug with innerHTML setting of <select>, rerender parent instead\r\n\t\t\t// http://support.microsoft.com/default.aspx?scid=kb;en-us;276228\r\n\t\t\tif (platform.ie) {\r\n\t\t\t\tthis.parent.render();\r\n\t\t\t} else {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t})\r\n});\r\n","require('enyo');\r\nrequire('./touch');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/TouchScrollStrategy~TouchScrollStrategy} kind.\r\n* @module enyo/TouchScrollStrategy\r\n*/\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tutils = require('./utils'),\r\n\tdispatcher = require('./dispatcher'),\r\n\tplatform = require('./platform');\r\n\r\nvar\r\n\tScrollMath = require('./ScrollMath'),\r\n\tScrollStrategy = require('./ScrollStrategy'),\r\n\tScrollThumb = require('./ScrollThumb'),\r\n\tDom = require('./dom');\r\n\r\n/**\r\n* Fires when dragging has started, allowing drags to propagate to parent\r\n* [scrollers]{@link module:enyo/Scroller~Scroller}.\r\n*\r\n* @event module:enyo/TouchScrollStrategy~TouchScrollStrategy#onShouldDrag\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {module:enyo/Scroller~ScrollEvent} event - An [object]{@glossary Object} containing\r\n*\tevent information.\r\n* @private\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/TouchScrollStrategy~TouchScrollStrategy} is a helper [kind]{@glossary kind} for implementing a\r\n* touch-based [scroller]{@link module:enyo/Scroller~Scroller}. It integrates the scrolling simulation provided\r\n* by {@link module:enyo/ScrollMath~ScrollMath} into an `enyo/Scroller`.\r\n*\r\n* `enyo/TouchScrollStrategy` is not typically created in application code. Instead, it is\r\n* specified as the value of the [strategyKind]{@link module:enyo/Scroller~Scroller#strategyKind} property\r\n* of an `enyo/Scroller` or {@link module:layout/List~List}, or is used by the framework implicitly.\r\n*\r\n* @class TouchScrollStrategy\r\n* @extends module:enyo/ScrollStrategy~ScrollStrategy\r\n* @protected\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/TouchScrollStrategy~TouchScrollStrategy.prototype */ {\r\n\r\n\tname: 'enyo.TouchScrollStrategy',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: ScrollStrategy,\r\n\r\n\t/**\r\n\t\tIf `true` (the default), the scroller will overscroll and bounce back at the edges.\r\n\t*/\r\n\toverscroll: true,\r\n\r\n\t/**\r\n\t\tIf `true` (the default), the scroller will not propagate `dragstart`\r\n\t\tevents that cause it to start scrolling.\r\n\t*/\r\n\tpreventDragPropagation: true,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/TouchScrollStrategy~TouchScrollStrategy.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Specifies how to vertically scroll.  Acceptable values are `'scroll'`, `'auto'`,\r\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\r\n\t\t* scroll strategy.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default 'default'\r\n\t\t* @public\r\n\t\t*/\r\n\t\tvertical: 'default',\r\n\r\n\t\t/**\r\n\t\t* Specifies how to horizontally scroll.  Acceptable values are `'scroll'`, `'auto'`,\r\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\r\n\t\t* scroll strategy.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default 'default'\r\n\t\t* @public\r\n\t\t*/\r\n\t\thorizontal: 'default',\r\n\r\n\t\t/**\r\n\t\t* Set to `true` to display a scroll thumb.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tthumb: true,\r\n\r\n\t\t/**\r\n\t\t* Set to `true` to display a transparent overlay while scrolling. This can help improve\r\n\t\t* performance of complex, large scroll regions on some platforms (e.g., Android).\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tscrim: false,\r\n\r\n\t\t/**\r\n\t\t* Indicates whether to allow drag [events]{@glossary event} to be sent while gesture\r\n\t\t* events are happening simultaneously.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tdragDuringGesture: true,\r\n\r\n\t\t/**\r\n\t\t* Facades animation time step from [ScrollMath]{@link module:enyo/ScrollMath~ScrollMath}.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default 20\r\n\t\t* @public\r\n\t\t*/\r\n\t\tinterval: 20,\r\n\r\n\t\t/**\r\n\t\t* Facades animation interval type from [ScrollMath]{@link module:enyo/ScrollMath~ScrollMath}.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tfixedTime: true,\r\n\r\n\t\t/**\r\n\t\t* Facades one unit of time for simulation from [ScrollMath]{@link module:enyo/ScrollMath~ScrollMath}.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default 10\r\n\t\t* @public\r\n\t\t*/\r\n\t\tframe: 10,\r\n\r\n\t\t/**\r\n\t\t* Indicates whether default [events]{@glossary event} (e.g., native scrolling\r\n\t\t* events) should be suppressed.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tpreventDefault: true\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonShouldDrag: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tonflick: 'flick',\r\n\t\tonShouldDrag: 'shouldDrag',\r\n\t\tondrag: 'drag'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttools: [\r\n\t\t{kind: ScrollMath, onScrollStart: 'scrollMathStart', onScroll: 'scrollMathScroll', onScrollStop: 'scrollMathStop', onStabilize: 'scrollMathStabilize'},\r\n\t\t{name: 'vthumb', kind: ScrollThumb, axis: 'v', showing: false},\r\n\t\t{name: 'hthumb', kind: ScrollThumb, axis: 'h', showing: false}\r\n\t],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tscrimTools: [{name: 'scrim', classes: 'enyo-fit', style: 'z-index: 1;', showing: false}],\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcomponents: [\r\n\t\t{name: 'client', classes: 'enyo-touch-scroller enyo-touch-scroller-client'}\r\n\t],\r\n\r\n\t/**\r\n\t* Flag indicating whether the list is currently reordering.\r\n\t*\r\n\t* @readonly\r\n\t* @public\r\n\t*/\r\n\tlistReordering: false,\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.transform = Dom.canTransform();\r\n\t\t\tif(!this.transform) {\r\n\t\t\t\tif(this.overscroll) {\r\n\t\t\t\t\t//so we can adjust top/left if browser can't handle translations\r\n\t\t\t\t\tthis.$.client.applyStyle('position', 'relative');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.accel = Dom.canAccelerate();\r\n\t\t\tvar containerClasses = 'enyo-touch-strategy-container';\r\n\t\t\t// note: needed for ios to avoid incorrect clipping of thumb\r\n\t\t\t// and need to avoid on Android as it causes problems hiding the thumb\r\n\t\t\tif (platform.ios && this.accel) {\r\n\t\t\t\tcontainerClasses += ' enyo-composite';\r\n\t\t\t}\r\n\t\t\tthis.scrimChanged();\r\n\t\t\tthis.intervalChanged();\r\n\t\t\tthis.fixedTimeChanged();\r\n\t\t\tthis.frameChanged();\r\n\t\t\tthis.container.addClass(containerClasses);\r\n\t\t\tthis.translation = this.accel ? 'translate3d' : 'translate';\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tinitComponents: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tthis.createChrome(this.tools);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tthis.container.removeClass('enyo-touch-strategy-container');\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tdispatcher.makeBubble(this.$.client, 'scroll');\r\n\t\t\tthis.calcBoundaries();\r\n\t\t\tthis.syncScrollMath();\r\n\t\t\tif (this.thumb) {\r\n\t\t\t\tthis.alertThumbs();\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tscrimChanged: function () {\r\n\t\tif (this.scrim && !this.$.scrim) {\r\n\t\t\tthis.makeScrim();\r\n\t\t}\r\n\t\tif (!this.scrim && this.$.scrim) {\r\n\t\t\tthis.$.scrim.destroy();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmakeScrim: function () {\r\n\t\t// reset control parent so scrim doesn't go into client.\r\n\t\tvar cp = this.controlParent;\r\n\t\tthis.controlParent = null;\r\n\t\tthis.createChrome(this.scrimTools);\r\n\t\tthis.controlParent = cp;\r\n\t\tvar cn = this.container.hasNode();\r\n\t\t// render scrim in container, strategy has no dom.\r\n\t\tif (cn) {\r\n\t\t\tthis.$.scrim.parentNode = cn;\r\n\t\t\tthis.$.scrim.render();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether or not the scroller is actively moving.\r\n\t*\r\n\t* @return {Boolean} `true` if actively moving; otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\tisScrolling: function () {\r\n\t\tvar m = this.$.scrollMath;\r\n\t\treturn m ? m.isScrolling() : this.scrolling;\r\n\t},\r\n\r\n\t/**\r\n\t* Determines whether or not the scroller is in overscroll.\r\n\t*\r\n\t* @return {Boolean} `true` if in overscroll; otherwise, `false`.\r\n\t* @public\r\n\t*/\r\n\tisOverscrolling: function () {\r\n\t\tvar m = this.$.scrollMath || this;\r\n\t\treturn (this.overscroll) ? Boolean(m.isInOverScroll()) : false;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdomScroll: function () {\r\n\t\tif (!this.isScrolling()) {\r\n\t\t\tthis.calcBoundaries();\r\n\t\t\tthis.syncScrollMath();\r\n\t\t\tif (this.thumb) {\r\n\t\t\t\tthis.alertThumbs();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thorizontalChanged: function () {\r\n\t\tthis.$.scrollMath.horizontal = (this.horizontal != 'hidden');\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tverticalChanged: function () {\r\n\t\tthis.$.scrollMath.vertical = (this.vertical != 'hidden');\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmaxHeightChanged: function () {\r\n\t\tthis.$.client.applyStyle('max-height', this.maxHeight);\r\n\t\t// note: previously used enyo-fit here but IE would reset scroll position when the scroll thumb\r\n\t\t// was hidden; in general IE resets scrollTop when there are 2 abs position siblings, one has\r\n\t\t// scrollTop and the other is hidden.\r\n\t\tthis.$.client.addRemoveClass('enyo-scrollee-fit', !this.maxHeight);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tthumbChanged: function () {\r\n\t\tthis.hideThumbs();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tintervalChanged: function () {\r\n\t\tif (this.$.scrollMath) {\r\n\t\t\tthis.$.scrollMath.interval = this.interval;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfixedTimeChanged: function () {\r\n\t\tif (this.$.scrollMath) {\r\n\t\t\tthis.$.scrollMath.fixedTime = this.fixedTime;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tframeChanged: function () {\r\n\t\tif (this.$.scrollMath) {\r\n\t\t\tthis.$.scrollMath.frame = this.frame;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Stops any active scroll movement.\r\n\t*\r\n\t* @todo Doc update made while merging, need official documentation update!\r\n\t*\r\n\t* @param {Boolean} emit - Whether or not to fire the `onScrollStop` event.\r\n\t* @public\r\n\t*/\r\n\tstop: function (emit) {\r\n\t\tif (this.isScrolling()) {\r\n\t\t\tthis.$.scrollMath.stop(emit);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Adjusts the scroll position to be valid, if necessary (e.g., after the scroll contents\r\n\t* have changed).\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tstabilize: function () {\r\n\t\tif(this.$.scrollMath) {\r\n\t\t\tthis.$.scrollMath.stabilize();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Scrolls to a specific position within the scroll area.\r\n\t*\r\n\t* @param {Number} x - The `x` position in pixels.\r\n\t* @param {Number} y - The `y` position in pixels.\r\n\t* @public\r\n\t*/\r\n\tscrollTo: function (x, y) {\r\n\t\tthis.stop(true);\r\n\t\tthis.$.scrollMath.scrollTo(x, y || y === 0 ? y : null);\r\n\t},\r\n\r\n\t/**\r\n\t* Scrolls the given [control]{@link module:enyo/Control~Control} into view.\r\n\t*\r\n\t* @param {module:enyo/Control~Control} ctl - The [control]{@link module:enyo/Control~Control} to make visible in the\r\n\t*\t[scroller's]{@link module:enyo/Scroller~Scroller} viewport.\r\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\r\n\t*\tscroller.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tscrollIntoView: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tthis.stop(true);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Sets the horizontal scroll position.\r\n\t*\r\n\t* @param {Number} left - The horizontal scroll position in pixels.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tsetScrollLeft: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tthis.stop(true);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Sets the vertical scroll position.\r\n\t*\r\n\t* @param {Number} top - The vertical scroll position in pixels.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tsetScrollTop: kind.inherit(function (sup) {\r\n\t\treturn function(top) {\r\n\t\t\tthis.stop(true);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Retrieves the horizontal scroll position.\r\n\t*\r\n\t* @returns {Number} The horizontal scroll position in pixels.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tgetScrollLeft: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\treturn this.isScrolling() ? this.scrollLeft : sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Retrieves the vertical scroll position.\r\n\t*\r\n\t* @returns {Number} The vertical scroll position in pixels.\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tgetScrollTop: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\treturn this.isScrolling() ? this.scrollTop : sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcalcScrollNode: function () {\r\n\t\treturn this.$.client.hasNode();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcalcAutoScrolling: function () {\r\n\t\tvar v = (this.vertical == 'auto');\r\n\t\tvar h = (this.horizontal == 'auto') || (this.horizontal == 'default');\r\n\t\tif ((v || h) && this.scrollNode) {\r\n\t\t\tvar b = this.getScrollBounds();\r\n\t\t\tif (v) {\r\n\t\t\t\tthis.$.scrollMath.vertical = b.height > b.clientHeight;\r\n\t\t\t}\r\n\t\t\tif (h) {\r\n\t\t\t\tthis.$.scrollMath.horizontal = b.width > b.clientWidth;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tshouldDrag: function (sender, e) {\r\n\t\tthis.calcAutoScrolling();\r\n\t\tvar requestV = e.vertical;\r\n\t\tvar canH = this.$.scrollMath.horizontal && !requestV;\r\n\t\tvar canV = this.$.scrollMath.vertical && requestV;\r\n\t\tvar down = e.dy < 0, right = e.dx < 0;\r\n\t\tvar oobV = (!down && this.startEdges.top || down && this.startEdges.bottom);\r\n\t\tvar oobH = (!right && this.startEdges.left || right && this.startEdges.right);\r\n\t\t// we would scroll if not at a boundary\r\n\t\tif (!e.boundaryDragger && (canH || canV)) {\r\n\t\t\te.boundaryDragger = this;\r\n\t\t}\r\n\t\t// include boundary exclusion\r\n\t\tif ((!oobV && canV) || (!oobH && canH)) {\r\n\t\t\te.dragger = this;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tflick: function (sender, e) {\r\n\t\tvar onAxis = Math.abs(e.xVelocity) > Math.abs(e.yVelocity) ? this.$.scrollMath.horizontal : this.$.scrollMath.vertical;\r\n\t\tif (onAxis && this.dragging) {\r\n\t\t\tthis.$.scrollMath.flick(e);\r\n\t\t\treturn this.preventDragPropagation;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdown: kind.inherit(function (sup) {\r\n\t\treturn function (sender, e) {\r\n\t\t\tif (!this.isOverscrolling()) {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmove: function (sender, e) {\r\n\t},\r\n\r\n\t// Special synthetic DOM events served up by the Gesture system\r\n\r\n\t/**\r\n\t* @fires module:enyo/TouchScrollStrategy~TouchScrollStrategy#onShouldDrag\r\n\t* @private\r\n\t*/\r\n\tdragstart: function (sender, e) {\r\n\t\t// Ignore drags sent from multi-touch events\r\n\t\tif(!this.dragDuringGesture && e.srcEvent.touches && e.srcEvent.touches.length > 1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t// note: allow drags to propagate to parent scrollers via data returned in the shouldDrag event.\r\n\t\tthis.doShouldDrag(e);\r\n\t\tthis.dragging = (e.dragger == this || (!e.dragger && e.boundaryDragger == this));\r\n\t\tif (this.dragging) {\r\n\t\t\tif(this.preventDefault){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\t// note: needed because show/hide changes\r\n\t\t\t// the position so sync'ing is required when\r\n\t\t\t// dragging begins (needed because show/hide does not trigger onscroll)\r\n\t\t\tthis.syncScrollMath();\r\n\t\t\tthis.$.scrollMath.startDrag(e);\r\n\t\t\tif (this.preventDragPropagation) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdrag: function (sender, e) {\r\n\t\t// if the list is doing a reorder, don't scroll\r\n\t\tif(this.listReordering) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.dragging) {\r\n\t\t\tif(this.preventDefault){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\tthis.$.scrollMath.drag(e);\r\n\t\t\tif (this.scrim) {\r\n\t\t\t\tthis.$.scrim.show();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tdragfinish: function (sender, e) {\r\n\t\tif (this.dragging) {\r\n\t\t\te.preventTap();\r\n\t\t\tthis.$.scrollMath.dragFinish();\r\n\t\t\tthis.dragging = false;\r\n\t\t\tif (this.scrim) {\r\n\t\t\t\tthis.$.scrim.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmousewheel: function (sender, e) {\r\n\t\tif (!this.dragging && this.useMouseWheel) {\r\n\t\t\tthis.calcBoundaries();\r\n\t\t\tthis.syncScrollMath();\r\n\t\t\tthis.stabilize();\r\n\t\t\tif (this.$.scrollMath.mousewheel(e)) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tscrollMathStart: function () {\r\n\t\tif (this.scrollNode && !this.isScrolling()) {\r\n\t\t\tthis.scrolling = true;\r\n\t\t\tif (!this.isOverscrolling()) {\r\n\t\t\t\tthis.calcBoundaries();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tscrollMathScroll: function (sender) {\r\n\t\tif(!this.overscroll) {\r\n\t\t\t//don't overscroll past edges\r\n\t\t\tthis.effectScroll(-Math.min(sender.leftBoundary, Math.max(sender.rightBoundary, sender.x)),\r\n\t\t\t\t\t-Math.min(sender.topBoundary, Math.max(sender.bottomBoundary, sender.y)));\r\n\t\t} else {\r\n\t\t\tthis.effectScroll(-sender.x, -sender.y);\r\n\t\t}\r\n\t\tif (this.thumb) {\r\n\t\t\tthis.showThumbs();\r\n\t\t\tthis.delayHideThumbs(100);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tscrollMathStop: function () {\r\n\t\tthis.scrolling = false;\r\n\t\tthis.effectScrollStop();\r\n\t\tif (this.thumb) {\r\n\t\t\tthis.delayHideThumbs(100);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tscrollMathStabilize: function (sender) {\r\n\t\tthis.effectScroll(-sender.x, -sender.y);\r\n\t\tif (this.thumb) {\r\n\t\t\tthis.showThumbs();\r\n\t\t\tthis.delayHideThumbs(100);\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcalcBoundaries: function () {\r\n\t\tvar s = this.$.scrollMath || this, b = this._getScrollBounds();\r\n\t\ts.bottomBoundary = b.clientHeight - b.height;\r\n\t\ts.rightBoundary = b.clientWidth - b.width;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tsyncScrollMath: function () {\r\n\t\tvar m = this.$.scrollMath;\r\n\t\tif(m) {\r\n\t\t\tm.setScrollX(-this.getScrollLeft());\r\n\t\t\tm.setScrollY(-this.getScrollTop());\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\teffectScroll: function (x, y) {\r\n\t\tif (this.scrollNode) {\r\n\t\t\tthis.scrollLeft = this.scrollNode.scrollLeft = x;\r\n\t\t\tthis.scrollTop = this.scrollNode.scrollTop = y;\r\n\t\t\tthis.effectOverscroll(x !== null? Math.round(x): x, y !== null? Math.round(y): y);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\teffectScrollStop: function () {\r\n\t\tthis.effectOverscroll(null, null);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\teffectOverscroll: function (x, y) {\r\n\t\tvar n = this.scrollNode;\r\n\t\tvar xt = '0', yt = '0', zt = this.accel ? ',0' : '';\r\n\t\tif (y !== null && Math.abs(y - n.scrollTop) > 1) {\r\n\t\t\tyt = (n.scrollTop - y);\r\n\t\t}\r\n\t\tif (x !== null && Math.abs(x - n.scrollLeft) > 1) {\r\n\t\t\txt = (n.scrollLeft - x);\r\n\t\t}\r\n\t\tif(!this.transform) {\r\n\t\t\t//adjust top/left if browser can't handle translations\r\n\t\t\tthis.$.client.setBounds({left:xt + 'px', top:yt + 'px'});\r\n\t\t} else {\r\n\t\t\tDom.transformValue(this.$.client, this.translation, xt + 'px, ' + yt + 'px' + zt);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the overscroll boundaries of the [scroller]{@link module:enyo/Scroller~Scroller}.\r\n\t*\r\n\t* @returns {module:enyo/Scroller~OverscrollBoundaryObject} An [object]{@glossary Object}\r\n\t*\tdescribing the overscroll boundaries.\r\n\t* @public\r\n\t*/\r\n\tgetOverScrollBounds: function () {\r\n\t\tvar m = this.$.scrollMath || this;\r\n\t\treturn {\r\n\t\t\toverleft: Math.min(m.leftBoundary - m.x, 0) || Math.max(m.rightBoundary - m.x, 0),\r\n\t\t\tovertop: Math.min(m.topBoundary - m.y, 0) || Math.max(m.bottomBoundary - m.y, 0)\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\t_getScrollBounds: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tvar r = sup.apply(this, arguments);\r\n\t\t\tutils.mixin(r, this.getOverScrollBounds());\r\n\t\t\treturn r;\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Retrieves the scroll boundaries of the [scroller]{@link module:enyo/Scroller~Scroller}.\r\n\t*\r\n\t* @returns {module:enyo/Scroller~BoundaryObject} An [object]{@glossary Object} describing the\r\n\t*\tscroll boundaries.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tgetScrollBounds: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tthis.stop(true);\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* This method exists primarily to support an internal use case for\r\n\t* [enyo/DataList]{@link module:enyo/DataList~DataList}. It is intended to be called by the\r\n\t* [scroller]{@link module:enyo/Scroller~Scroller} that owns this strategy.\r\n\t*\r\n\t* Triggers a remeasurement of the scroller's metrics (specifically, the\r\n\t* size of its viewport, the size of its contents and the difference between\r\n\t* the two, which determines the extent to which the scroller may scroll).\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tremeasure: function () {\r\n\t\tthis.calcBoundaries();\r\n\t\tif (this.thumb) {\r\n\t\t\tthis.syncThumbs();\r\n\t\t}\r\n\t\tthis.stabilize();\r\n\t},\r\n\r\n\t/**\r\n\t* Displays the scroll indicators and sets the auto-hide timeout.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\talertThumbs: function () {\r\n\t\tthis.showThumbs();\r\n\t\tthis.delayHideThumbs(500);\r\n\t},\r\n\r\n\t/**\r\n\t* Syncs the vertical and horizontal scroll indicators.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tsyncThumbs: function () {\r\n\t\tthis.$.vthumb.sync(this);\r\n\t\tthis.$.hthumb.sync(this);\r\n\t},\r\n\tupdateThumbs: function () {\r\n\t\tthis.$.vthumb.update(this);\r\n\t\tthis.$.hthumb.update(this);\r\n\t},\r\n\r\n\t/**\r\n\t* Syncs and shows both the vertical and horizontal scroll indicators. We only sync after we\r\n\t* have checked if the vertical and/or horizontal scroll indicators are to be shown, so that\r\n\t* {@link module:enyo/ScrollThumb~ScrollThumb#update} accurately makes calculations when the indicators are\r\n\t* visible.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tshowThumbs: function () {\r\n\t\tif (this.horizontal != 'hidden') {\r\n\t\t\tthis.$.hthumb.show();\r\n\t\t}\r\n\t\tif (this.vertical != 'hidden') {\r\n\t\t\tthis.$.vthumb.show();\r\n\t\t}\r\n\t\tthis.syncThumbs();\r\n\t},\r\n\r\n\t/**\r\n\t* Hides the vertical and horizontal scroll indicators.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\thideThumbs: function () {\r\n\t\tthis.$.vthumb.hide();\r\n\t\tthis.$.hthumb.hide();\r\n\t},\r\n\r\n\t/**\r\n\t* Hides the vertical and horizontal scroll indicators asynchronously.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tdelayHideThumbs: function (delay) {\r\n\t\tthis.$.vthumb.delayHide(delay);\r\n\t\tthis.$.hthumb.delayHide(delay);\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/ToolDecorator~ToolDecorator} kind.\r\n* @module enyo/ToolDecorator\r\n*/\r\n\r\n\r\n\r\nvar\r\n\tkind = require('../kind');\r\nvar\r\n\tGroupItem = require('../GroupItem');\r\n\r\n/**\r\n* {@link module:enyo/ToolDecorator~ToolDecorator} lines up [components]{@link module:enyo/Component~Component} in a row,\r\n* centered vertically.\r\n*\r\n* @class ToolDecorator\r\n* @extends module:enyo/GroupItem~GroupItem\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/ToolDecorator~ToolDecorator.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.ToolDecorator',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: GroupItem,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclasses: 'enyo-tool-decorator'\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n * Contains the declaration for the {@link module:enyo/TranslateScrollStrategy~TranslateScrollStrategy} kind.\r\n * @module enyo/TranslateScrollStrategy\r\n */\r\n\r\nvar\r\n\tkind = require('./kind'),\r\n\tdispatcher = require('./dispatcher');\r\n\r\nvar\r\n\tTouchScrollStrategy = require('./TouchScrollStrategy'),\r\n\tDom = require('./dom');\r\n\r\n/**\r\n* {@link module:enyo/TranslateScrollStrategy~TranslateScrollStrategy} is a helper [kind]{@glossary kind} that extends\r\n* {@link module:enyo/TouchScrollStrategy~TouchScrollStrategy}, optimizing it for scrolling environments in which effecting\r\n* scroll changes with transforms using CSS translations is fastest.\r\n* \r\n* `TranslateScrollStrategy` is not typically created in application code. Instead, it is\r\n* specified as the value of the [strategyKind]{@link module:enyo/Scroller~Scroller#strategyKind} property of\r\n* an {@link module:enyo/Scroller~Scroller} or {@link module:layout/List~List}, or is used by the framework implicitly.\r\n*\r\n* @class TranslateScrollStrategy\r\n* @extends module:enyo/TouchScrollStrategy~TouchScrollStrategy\r\n* @protected\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/TranslateScrollStrategy~TranslateScrollStrategy.prototype */ {\r\n\r\n\tname: 'enyo.TranslateScrollStrategy',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: TouchScrollStrategy,\r\n\r\n\t/** \r\n\t* Set to `true` to optimize the strategy to only use translation to scroll; this increases\r\n\t* fluidity of scrolling animation. It should not be used when the\r\n\t* [scroller]{@link module:enyo/Scroller~Scroller} contains [controls]{@link module:enyo/Control~Control} that require\r\n\t* keyboard input. This is because when `translateOptimized` is `true`, it is possible to\r\n\t* position inputs such that they will not become visible when focused.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\ttranslateOptimized: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcomponents: [\r\n\t\t{name: 'clientContainer', classes: 'enyo-touch-scroller', components: [\r\n\t\t\t{name: 'client', classes: 'enyo-touch-scroller-client'}\r\n\t\t]}\r\n\t],\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tdispatcher.makeBubble(this.$.clientContainer, 'scroll');\r\n\t\t\tif (this.translateOptimized) {\r\n\t\t\t\t// on render, the start positions should be 0 for translateOptimized because the\r\n\t\t\t\t// scrollNode's scrollTop/Left will always be 0 and therefore offsetting the\r\n\t\t\t\t// translate to account for a non-zero scrollTop/Left isn't necessary.\r\n\t\t\t\tthis.setStartPosition(true);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Sets the start position for scrolling.\r\n\t*\r\n\t* @param {Boolean} [reset] When true, resets the start position to 0 rather than the current\r\n\t* \tscrollTop and scrollLeft.\r\n\t* @private\r\n\t*/\r\n\tsetStartPosition: function (reset) {\r\n\t\tif (reset) {\r\n\t\t\tthis.startX = this.startY = 0;\r\n\t\t} else {\r\n\t\t\tthis.startX = this.getScrollLeft();\r\n\t\t\tthis.startY = this.getScrollTop();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetScrollSize: function () {\r\n\t\tvar n = this.$.client.hasNode();\r\n\t\treturn {width: n ? n.scrollWidth : 0, height: n ? n.scrollHeight : 0};\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t// apply initial transform so we're always composited\r\n\t\t\tDom.transformValue(this.$.client, this.translation, '0,0,0');\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcalcScrollNode: function () {\r\n\t\treturn this.$.clientContainer.hasNode();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmaxHeightChanged: function () {\r\n\t\t// content should cover scroller at a minimum if there's no max-height.\r\n\t\tthis.$.client.applyStyle('min-height', this.maxHeight ? null : '100%');\r\n\t\tthis.$.client.applyStyle('max-height', this.maxHeight);\r\n\t\tthis.$.clientContainer.addRemoveClass('enyo-scrollee-fit', !this.maxHeight);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tshouldDrag: kind.inherit(function (sup) {\r\n\t\treturn function(inEvent) {\r\n\t\t\t// stop and update drag info before checking drag status\r\n\t\t\tthis.stop();\r\n\t\t\tthis.calcStartInfo();\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tsyncScrollMath: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tif (!this._translated) {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Sets the horizontal scroll position.\r\n\t*\r\n\t* @param {Number} left - The horizontal scroll position in pixels.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tsetScrollLeft: kind.inherit(function (sup) {\r\n\t\treturn function(inLeft) {\r\n\t\t\tvar m, p;\r\n\t\t\tif (this.translateOptimized) {\r\n\t\t\t\tp = this.scrollLeft;\r\n\t\t\t\tm = this.$.scrollMath;\r\n\t\t\t\tthis.stop(true);\r\n\t\t\t\tm.setScrollX(-inLeft);\r\n\t\t\t\tm.stabilize();\r\n\t\t\t\tif (p != -m.x) {\r\n\t\t\t\t\t// We won't get a native scroll event,\r\n\t\t\t\t\t// so need to make one ourselves\r\n\t\t\t\t\tm.doScroll();\r\n\t\t\t\t\tthis.delayHideThumbs(100);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Sets the vertical scroll position.\r\n\t*\r\n\t* @param {Number} top - The vertical scroll position in pixels.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tsetScrollTop: kind.inherit(function (sup) {\r\n\t\treturn function(inTop) {\r\n\t\t\tvar m, p;\r\n\t\t\tif (this.translateOptimized) {\r\n\t\t\t\tp = this.scrollTop;\r\n\t\t\t\tm = this.$.scrollMath;\r\n\t\t\t\tthis.stop(true);\r\n\t\t\t\tm.setScrollY(-inTop);\r\n\t\t\t\tm.stabilize();\r\n\t\t\t\tif (p != -m.y) {\r\n\t\t\t\t\t// We won't get a native scroll event,\r\n\t\t\t\t\t// so need to make one ourselves\r\n\t\t\t\t\tm.doScroll();\r\n\t\t\t\t\tthis.delayHideThumbs(100);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Retrieves the horizontal scroll position.\r\n\t*\r\n\t* @returns {Number} The horizontal scroll position in pixels.\r\n\t* @method\r\n\t* @public\r\n\t*/\r\n\tgetScrollLeft: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\treturn this._translated ? this.scrollLeft: sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Retrieves the vertical scroll position.\r\n\t*\r\n\t* @returns {Number} The vertical scroll position in pixels.\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tgetScrollTop: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\treturn this._translated ? this.scrollTop : sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcalcBoundaries: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tif (this.translateOptimized && !this.isScrolling()) this.stabilize();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\thandleResize: function() {\r\n\t\tif (this.translateOptimized) {\r\n\t\t\tthis.stabilize();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tscrollMathStart: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tif (!this._translated) {\r\n\t\t\t\tthis.setStartPosition();\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tscrollMathScroll: function (sender) {\r\n\t\tif(!this.overscroll) { //don't overscroll past edges\r\n\t\t\tthis.scrollLeft = -Math.min(sender.leftBoundary, Math.max(sender.rightBoundary, sender.x));\r\n\t\t\tthis.scrollTop = -Math.min(sender.topBoundary, Math.max(sender.bottomBoundary, sender.y));\r\n\t\t} else {\r\n\t\t\tthis.scrollLeft = -sender.x;\r\n\t\t\tthis.scrollTop = -sender.y;\r\n\t\t}\r\n\t\tthis.effectScroll(this.scrollLeft, this.scrollTop);\r\n\t\tif (this.thumb) {\r\n\t\t\tthis.showThumbs();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tscrollMathStabilize: kind.inherit(function (sup) {\r\n\t\treturn function (sender) {\r\n\t\t\tif (this._translated) {\r\n\t\t\t\tthis.scrollLeft = -sender.x;\r\n\t\t\t\tthis.scrollTop = -sender.y;\r\n\t\t\t\tthis.effectScroll(-sender.x, -sender.y);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn sup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* While moving, scroller uses translate.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\teffectScroll: kind.inherit(function (sup) {\r\n\t\treturn function (x, y) {\r\n\t\t\tvar o;\r\n\t\t\tif (this.translateOptimized || this.isScrolling()) {\r\n\t\t\t\tx = this.startX - x;\r\n\t\t\t\ty = this.startY - y;\r\n\t\t\t\to = x + 'px, ' + y + 'px' + (this.accel ? ',0' : '');\r\n\t\t\t\tDom.transformValue(this.$.client, this.translation, o);\r\n\t\t\t\tthis._translated = true;\r\n\t\t\t} else {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* When stopped, we use `scrollLeft/scrollTop` (makes cursor positioning automagic).\r\n\t*\r\n\t* @private\r\n\t*/\r\n\teffectScrollStop: function () {\r\n\t\tif (!this.translateOptimized) {\r\n\t\t\tvar t = '0,0' + (this.accel ? ',0' : '');\r\n\t\t\t// FIXME: normally translate3d changes not effect scrollHeight; however\r\n\t\t\t// there appear to be some dom changes (e.g. showing a node inside the scroller,\r\n\t\t\t// which do cause the scrollHeight to be changed from the translate3d.\r\n\t\t\t// In this case setting the translate3d back to 0 does not restore scrollHeight.\r\n\t\t\t// This causes a problem because setting scrollTop can produced an unexpected result if\r\n\t\t\t// scrollHeight is less than expected.\r\n\t\t\t// We detect this fault by validating scroll bounds and (1) un-apply the translate3d,\r\n\t\t\t// (2) update scrollTop/Left, and (3) re-apply a 0,0,0 translate3d to ensure compositing.\r\n\t\t\t// Luckily this corrects the problem (which appears to be a webkit bug). Note that\r\n\t\t\t// it's important to maintain a composited state (translate3d 0,0,0) or Android 4 is\r\n\t\t\t// slow to start scrolling.\r\n\t\t\tvar m = this.$.scrollMath, sb = this._getScrollBounds();\r\n\t\t\tvar needsBoundsFix = Boolean((sb.maxTop + m.bottomBoundary) || (sb.maxLeft + m.rightBoundary));\r\n\t\t\tDom.transformValue(this.$.client, this.translation, needsBoundsFix ? null : t);\r\n\t\t\t// note: this asynchronously triggers dom scroll event\r\n\t\t\tthis.setScrollLeft(this.scrollLeft);\r\n\t\t\tthis.setScrollTop(this.scrollTop);\r\n\t\t\tif (needsBoundsFix) {\r\n\t\t\t\tDom.transformValue(this.$.client, this.translation, t);\r\n\t\t\t}\r\n\t\t\tthis._translated = false;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* FIXME: we can fix scrolling artifacts BUGS on Android 4.04 with this heinous incantation.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\ttwiddle: function () {\r\n\t\tif (this.translateOptimized && this.scrollNode) { // this.scrollNode is not always defined and makes Motorola XOOM crash\r\n\t\t\tthis.scrollNode.scrollTop = 1;\r\n\t\t\tthis.scrollNode.scrollTop = 0;\r\n\t\t}\r\n\t}\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Button~Button} kind.\r\n* @module enyo/Button\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind');\r\nvar\r\n\tToolDecorator = require('../ToolDecorator');\r\n\r\n/**\r\n* {@link module:enyo/Button~Button} implements an HTML [button]{@glossary button}, with support\r\n* for grouping using {@link module:enyo/Group~Group}.\r\n*\r\n* For more information, see the documentation on\r\n* [Buttons]{@linkplain $dev-guide/building-apps/controls/buttons.html} in the\r\n* Enyo Developer Guide.\r\n*\r\n* @class Button\r\n* @extends module:enyo/ToolDecorator~ToolDecorator\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:enyo/Button~Button.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.Button',\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: ToolDecorator,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttag: 'button',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tattributes: {\r\n\t\t/**\r\n\t\t * Set to `'button'`; otherwise, the default value would be `'submit'`, which\r\n\t\t * can cause unexpected problems when [controls]{@link module:enyo/Control~Control} are used\r\n\t\t * inside of a [form]{@glossary form}.\r\n\t\t * \r\n\t\t * @type {String}\r\n\t\t * @private\r\n\t\t */\r\n\t\ttype: 'button'\r\n\t},\r\n\t\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished: \r\n\t\t/** @lends module:enyo/Button~Button.prototype */ {\r\n\t\t\r\n\t\t/**\r\n\t\t * When `true`, the [button]{@glossary button} is shown as disabled and does not \r\n\t\t * generate tap [events]{@glossary event}.\r\n\t\t * \r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t * @public\r\n\t\t */\r\n\t\tdisabled: false\r\n\t},\r\n\t\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.disabledChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdisabledChanged: function () {\r\n\t\tthis.setAttribute('disabled', this.disabled);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttap: function () {\r\n\t\tif (this.disabled) {\r\n\t\t\t// work around for platforms like Chrome on Android or Opera that send\r\n\t\t\t// mouseup to disabled form controls\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis.setActive(true);\r\n\t\t}\r\n\t},\r\n\r\n\t// Accessibility\r\n\r\n\t/**\r\n\t* @default button\r\n\t* @type {String}\r\n\t* @see enyo/AccessibilitySupport~AccessibilitySupport#accessibilityRole\r\n\t* @public\r\n\t*/\r\n\taccessibilityRole: 'button',\r\n\r\n\t/**\r\n\t* When `true`, `aria-pressed` will reflect the state of\r\n\t* {@link module:enyo/GroupItem~GroupItem#active}\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default false\r\n\t* @public\r\n\t*/\r\n\taccessibilityPressed: false,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tariaObservers: [\r\n\t\t{from: 'disabled', to: 'aria-disabled'},\r\n\t\t{path: ['active', 'accessibilityPressed'], method: function () {\r\n\t\t\tthis.setAriaAttribute('aria-pressed', this.accessibilityPressed ? String(this.active) : null);\r\n\t\t}},\r\n\t\t{from: 'accessibilityRole', to: 'role'}\r\n\t]\r\n});\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/Scroller~Scroller} kind.\r\n* @module enyo/Scroller\r\n*/\r\n\r\n\r\n\r\nvar\r\n\tkind = require('../kind'),\r\n\tplatform = require('../platform');\r\n\r\nvar\r\n\tControl = require('../Control'),\r\n\tScrollStrategy = require('../ScrollStrategy'),\r\n\tTouchScrollStrategy = require('../TouchScrollStrategy'),\r\n\tTranslateScrollStrategy = require('../TranslateScrollStrategy');\r\n\r\n/**\r\n* An [object]{@glossary Object} representing the scroll boundaries.\r\n*\r\n* @typedef {Object} module:enyo/Scroller~Scroller~BoundaryObject\r\n* @property {Number} left - The left scroll position.\r\n* @property {Number} top - The top scroll position.\r\n* @property {Number} maxLeft - Maximum value for the left scroll position (minimum is always 0).\r\n* @property {Number} maxTop - Maximum value for the top scroll position (minimum is always 0).\r\n* @property {Number} clientHeight - The vertical size of the [scroller]{@link module:enyo/Scroller~Scroller} on\r\n*\tscreen.\r\n* @property {Number} clientWidth - The horizontal size of the [scroller]{@link module:enyo/Scroller~Scroller} on\r\n*\tscreen.\r\n* @property {Number} width - The horizontal size of the full area of the scrolled region.\r\n* @property {Number} height - The vertical size of the full area of the scrolled region.\r\n* @property {Number} xDir - Either `1`, `-1`, or `0`, indicating positive movement along the\r\n*\tx-axis, negative movement, or no movement, respectively.\r\n* @property {Number} yDir - Either `1`, `-1`, or `0`, indicating positive movement along the\r\n*\ty-axis, negative movement, or no movement, respectively.\r\n*/\r\n\r\n\r\n/**\r\n* An [object]{@glossary Object} representing the overscroll boundaries.\r\n*\r\n* @typedef {Object} module:enyo/Scroller~Scroller~OverscrollBoundaryObject\r\n* @property {Number} overleft - The left overscroll position.\r\n* @property {Number} overtop - The top overscroll position.\r\n*/\r\n\r\n/**\r\n* The extended {@glossary event} [object]{@glossary Object} that is provided\r\n* when a scroll event is fired.\r\n*\r\n* @typedef {Object} module:enyo/Scroller~Scroller~ScrollEvent\r\n* @property {module:enyo/Scroller~Scroller~BoundaryObject} bounds - Current values of scroller bounds.\r\n*/\r\n\r\n/**\r\n* Fires when a scrolling action starts.\r\n*\r\n* @event module:enyo/Scroller~Scroller#onScrollStart\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {module:enyo/Scroller~Scroller~ScrollEvent} event - An [object]{@glossary Object} containing\r\n*\tevent information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires while a scrolling action is in progress.\r\n*\r\n* @event module:enyo/Scroller~Scroller#onScroll\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing\r\n*\tevent information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* Fires when a scrolling action stops.\r\n*\r\n* @event module:enyo/Scroller~Scroller#onScrollStop\r\n* @type {Object}\r\n* @property {Object} sender - The [component]{@link module:enyo/Component~Component} that most recently\r\n*\tpropagated the {@glossary event}.\r\n* @property {Object} event - An [object]{@glossary Object} containing\r\n*\tevent information.\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/Scroller~Scroller} is a scroller suitable for use in both desktop and mobile\r\n* applications.\r\n*\r\n* In some mobile environments, a default scrolling solution is not implemented for\r\n* DOM elements. In such cases, `enyo/Scroller` implements a touch-based scrolling\r\n* solution, which may be opted into either globally (by setting\r\n* [touchScrolling]{@link module:enyo/Scroller~Scroller#touchScrolling} to `true`) or on a\r\n* per-instance basis (by specifying a [strategyKind]{@link module:enyo/Scroller~Scroller#strategyKind}\r\n* of `'TouchScrollStrategy'`).\r\n*\r\n* For more information, see the documentation on\r\n* [Scrollers]{@linkplain $dev-guide/building-apps/layout/scrollers.html} in the\r\n* Enyo Developer Guide.\r\n*\r\n* @class Scroller\r\n* @public\r\n*/\r\nvar Scroller = module.exports = kind(\r\n\t/** @lends module:enyo/Scroller~Scroller.prototype */ {\r\n\r\n\tname: 'enyo.Scroller',\r\n\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tpublished:\r\n\t\t/** @lends module:enyo/Scroller~Scroller.prototype */ {\r\n\r\n\t\t/**\r\n\t\t* Specifies how to horizontally scroll.  Acceptable values are `'scroll'`, `'auto'`,\r\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\r\n\t\t* scroll strategy.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default 'default'\r\n\t\t* @public\r\n\t\t*/\r\n\t\thorizontal: 'default',\r\n\r\n\t\t/**\r\n\t\t* Specifies how to vertically scroll.  Acceptable values are `'scroll'`, `'auto'`,\r\n\t\t* `'hidden'`, and `'default'`. The precise effect of the setting is determined by the\r\n\t\t* scroll strategy.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default 'default'\r\n\t\t* @public\r\n\t\t*/\r\n\t\tvertical: 'default',\r\n\r\n\t\t/**\r\n\t\t* The vertical scroll position.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default 0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tscrollTop: 0,\r\n\r\n\t\t/**\r\n\t\t* The horizontal scroll position.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default 0\r\n\t\t* @public\r\n\t\t*/\r\n\t\tscrollLeft: 0,\r\n\r\n\t\t/**\r\n\t\t* Maximum height of the scroll content.\r\n\t\t*\r\n\t\t* @type {Number}\r\n\t\t* @default null\r\n\t\t* @memberof enyo/Scroller~Scroller.prototype\r\n\t\t* @public\r\n\t\t*/\r\n\t\tmaxHeight: null,\r\n\r\n\t\t/**\r\n\t\t* Set to `true` to make this [scroller]{@link module:enyo/Scroller~Scroller} select a\r\n\t\t* platform-appropriate touch-based scrolling strategy. Note that if you specify a value\r\n\t\t* for [strategyKind]{@link module:enyo/Scroller~Scroller#strategyKind}, that will take precedence over\r\n\t\t* this setting.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\ttouch: false,\r\n\t\t/**\r\n\t\t* Specifies a type of scrolling. The [scroller]{@link module:enyo/Scroller~Scroller} will attempt to\r\n\t\t* automatically select a strategy compatible with the runtime environment. Alternatively,\r\n\t\t* you may choose to use a specific strategy:\r\n\t\t*\r\n\t\t* - [ScrollStrategy]{@link module:enyo/ScrollStrategy~ScrollStrategy} is the default and implements no\r\n\t\t*\tscrolling, relying instead on the environment to scroll properly.\r\n\t\t* - [TouchScrollStrategy]{@link module:enyo/TouchScrollStrategy~TouchScrollStrategy} implements a touch scrolling\r\n\t\t*\tmechanism.\r\n\t\t* - [TranslateScrollStrategy]{@link module:enyo/TranslateScrollStrategy~TranslateScrollStrategy} implements a touch\r\n\t\t*\tscrolling mechanism using translations; it is currently recommended only for Android\r\n\t\t*\t3+, iOS 5+ and Windows Phone 8.\r\n\t\t* - [TransitionScrollStrategy]{@link module:enyo/TransitionScrollStrategy~TransitionScrollStrategy} implements a touch\r\n\t\t*\tscrolling mechanism using CSS transitions;\r\n\t\t*\r\n\t\t* @type {Object}\r\n\t\t* @default module:enyo/ScrollStrategy~ScrollStrategy\r\n\t\t* @public\r\n\t\t*/\r\n\t\tstrategyKind: ScrollStrategy,\r\n\r\n\t\t/**\r\n\t\t* Set to `true` to display a scroll thumb in touch [scrollers]{@link module:enyo/Scroller~Scroller}.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tthumb: true,\r\n\r\n\t\t/**\r\n\t\t* If `true`, mouse wheel may be used to move the [scroller]{@link module:enyo/Scroller~Scroller}.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default true\r\n\t\t* @public\r\n\t\t*/\r\n\t\tuseMouseWheel: true\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonScrollStart: '',\r\n\t\tonScroll: '',\r\n\t\tonScrollStop: ''\r\n\t},\r\n\r\n\t/**\r\n\t* If `true`, enables touch scrolling globally.\r\n\t*\r\n\t* @name touchScrolling\r\n\t* @type {Boolean}\r\n\t* @default undefined\r\n\t* @memberof enyo/Scroller~Scroller.prototype\r\n\t* @public\r\n\t*/\r\n\r\n\t/**\r\n\t* If `true` and this is a touch [scroller]{@link module:enyo/Scroller~Scroller}, the scroller\r\n\t* will overscroll and bounce back at the edges.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\ttouchOverscroll: true,\r\n\r\n\t/**\r\n\t* If `true`, the [scroller]{@link module:enyo/Scroller~Scroller} will not propagate `dragstart`\r\n\t* [events]{@glossary event} that cause it to start scrolling.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tpreventDragPropagation: true,\r\n\r\n\t/**\r\n\t* If `true`, the [scroller]{@link module:enyo/Scroller~Scroller} will not propagate scroll\r\n\t* [events]{@glossary event}.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tpreventScrollPropagation: true,\r\n\r\n\t/**\r\n\t* Needed to allow global mods to `enyo/Scroller.touchScrolling`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thandlers: {\r\n\t\tonscroll: 'domScroll',\r\n\t\tonScrollStart: 'scrollStart',\r\n\t\tonScroll: 'scroll',\r\n\t\tonScrollStop: 'scrollStop'\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tclasses: 'enyo-scroller',\r\n\r\n\t/**\r\n\t* @lends module:enyo/Scroller~Scroller\r\n\t* @private\r\n\t*/\r\n\tstatics: {\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\tosInfo: [\r\n\t\t\t{os: 'android', version: 3},\r\n\t\t\t{os: 'androidChrome', version: 18},\r\n\t\t\t{os: 'androidFirefox', version: 16},\r\n\t\t\t{os: 'firefoxOS', version: 16},\r\n\t\t\t{os: 'ios', version: 5},\r\n\t\t\t{os: 'webos', version: 1e9},\r\n\t\t\t{os: 'blackberry', version:1e9},\r\n\t\t\t{os: 'tizen', version: 2}\r\n\t\t],\r\n\t\t/** Returns true if platform should have touch events. */\r\n\t\thasTouchScrolling: function() {\r\n\t\t\tfor (var i=0, t; (t=this.osInfo[i]); i++) {\r\n\t\t\t\tif (platform[t.os]) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// special detection for IE10+ on touch devices\r\n\t\t\tif ((platform.ie >= 10 || platform.windowsPhone >= 8) && platform.touch) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t* Returns true if the platform has native div scrollers (desktop\r\n\t\t* browsers always have them).\r\n\t\t*/\r\n\t\thasNativeScrolling: function() {\r\n\t\t\tfor (var i=0, t; (t=this.osInfo[i]); i++) {\r\n\t\t\t\tif (platform[t.os] < t.version) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\tgetTouchStrategy: function() {\r\n\t\t\treturn (platform.androidChrome >= 27) || (platform.android >= 3) || (platform.ios >= 5) || (platform.windowsPhone === 8) || (platform.webos >= 4)\r\n\t\t\t\t? TranslateScrollStrategy\r\n\t\t\t\t: TouchScrollStrategy;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcontrolParentName: 'strategy',\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.horizontalChanged();\r\n\t\t\tthis.verticalChanged();\r\n\t\t\tthis.useMouseWheelChanged();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\timportProps: kind.inherit(function (sup) {\r\n\t\treturn function(inProps) {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t// allow global overriding of strategy kind\r\n\t\t\tif (inProps && inProps.strategyKind === undefined && (Scroller.touchScrolling || this.touch)) {\r\n\t\t\t\tthis.strategyKind = Scroller.getTouchStrategy();\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tinitComponents: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tthis.strategyKindChanged();\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trendered: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.syncStrategy();\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tsyncStrategy: function() {\r\n\t\tthis.$.strategy.setScrollLeft(this.scrollLeft);\r\n\t\tthis.$.strategy.setScrollTop(this.scrollTop);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tstrategyKindChanged: function () {\r\n\t\tif (this.$.strategy) {\r\n\t\t\tthis.$.strategy.destroy();\r\n\t\t\tthis.controlParent = null;\r\n\t\t}\r\n\t\t// note: createComponents automatically updates controlParent.\r\n\t\tthis.createStrategy();\r\n\t\tif (this.hasNode()) {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tcreateStrategy: function () {\r\n\t\tthis.createComponents([{name: 'strategy', maxHeight: this.maxHeight,\r\n\t\t\tkind: this.strategyKind, thumb: this.thumb,\r\n\t\t\tpreventDragPropagation: this.preventDragPropagation,\r\n\t\t\toverscroll:this.touchOverscroll, isChrome: true}]);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tgetStrategy: function () {\r\n\t\treturn this.$.strategy;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tmaxHeightChanged: function () {\r\n\t\tthis.$.strategy.setMaxHeight(this.maxHeight);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tshowingChanged: kind.inherit(function (sup) {\r\n\t\treturn function() {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tif (this.showing) {\r\n\t\t\t\tthis.syncStrategy();\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tshowingChangedHandler: kind.inherit(function(sup) {\r\n\t\treturn function(sender, event) {\r\n\t\t\tif (this.showing && event.showing) {\r\n\t\t\t\tthis.syncStrategy();\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tthumbChanged: function () {\r\n\t\tthis.$.strategy.setThumb(this.thumb);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\thorizontalChanged: function () {\r\n\t\tthis.$.strategy.setHorizontal(this.horizontal);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tverticalChanged: function () {\r\n\t\tthis.$.strategy.setVertical(this.vertical);\r\n\t},\r\n\r\n\t// FIXME: these properties are virtual; property changed methods are fired only if\r\n\t// property value changes, not if getter changes.\r\n\r\n\t/**\r\n\t* Sets the horizontal scroll position.\r\n\t*\r\n\t* @param {Number} left - The horizontal scroll position in pixels.\r\n\t* @public\r\n\t*/\r\n\tsetScrollLeft: function (left) {\r\n\t\tthis.$.strategy.setScrollLeft(left);\r\n\t},\r\n\r\n\t/**\r\n\t* Sets the vertical scroll position.\r\n\t*\r\n\t* @param {Number} top - The vertical scroll position in pixels.\r\n\t* @public\r\n\t*/\r\n\tsetScrollTop: function (top) {\r\n\t\tthis.$.strategy.setScrollTop(top);\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the horizontal scroll position.\r\n\t*\r\n\t* @returns {Number} The horizontal scroll position in pixels.\r\n\t* @public\r\n\t*/\r\n\tgetScrollLeft: function () {\r\n\t\t// sync our internal property\r\n\t\tthis.scrollLeft = this.$.strategy.getScrollLeft();\r\n\t\treturn this.scrollLeft;\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the vertical scroll position.\r\n\t*\r\n\t* @returns {Number} The vertical scroll position in pixels.\r\n\t* @public\r\n\t*/\r\n\tgetScrollTop: function () {\r\n\t\t// sync our internal property\r\n\t\tthis.scrollTop = this.$.strategy.getScrollTop();\r\n\t\treturn this.scrollTop;\r\n\t},\r\n\r\n\t/**\r\n\t* Retrieves the scroll boundaries of the [scroller]{@link module:enyo/Scroller~Scroller}.\r\n\t*\r\n\t* @returns {module:enyo/Scroller~BoundaryObject} An [object]{@glossary Object} describing the\r\n\t*\tscroll boundaries.\r\n\t* @public\r\n\t*/\r\n\tgetScrollBounds: function () {\r\n\t\tvar bounds  = this.$.strategy.getScrollBounds();\r\n\t\tif (\r\n\t\t\t(bounds.xDir !== -1 && bounds.xDir !== 0 && bounds.xDir !== 1) ||\r\n\t\t\t(bounds.yDir !== -1 && bounds.yDir !== 0 && bounds.yDir !== 1)\r\n\t\t) {\r\n\t\t\tthis.decorateBounds(bounds);\r\n\t\t}\r\n\t\t// keep our properties synchronized always and without extra calls\r\n\t\tthis.scrollTop  = bounds.top;\r\n\t\tthis.scrollLeft = bounds.left;\r\n\t\treturn bounds;\r\n\t},\r\n\r\n\t/**\r\n\t* Trigger a remeasurement of the scroller's metrics (specifically, the\r\n\t* size of its viewport, the size of its contents and the difference between\r\n\t* the two, which determines the extent to which the scroller may scroll).\r\n\t*\r\n\t* You should generally not need to call this from application code, as the\r\n\t* scroller usually remeasures automatically whenever needed. This method\r\n\t* exists primarily to support an internal use case for\r\n\t* [enyo/DataList]{@link module:enyo/DataList~DataList}.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tremeasure: function() {\r\n\t\tvar s = this.$.strategy;\r\n\t\tif (s.remeasure) s.remeasure();\r\n\t},\r\n\r\n\t/**\r\n\t* Scrolls the given [control]{@link module:enyo/Control~Control} into view.\r\n\t*\r\n\t* @param {module:enyo/Control~Control} ctl - The control to make visible in the\r\n\t*\t[scroller's]{@link module:enyo/Scroller~Scroller} viewport.\r\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top\r\n\t* of the scroller.\r\n\t* @public\r\n\t*/\r\n\tscrollIntoView: function (ctl, alignWithTop) {\r\n\t\tthis.$.strategy.scrollIntoView(ctl, alignWithTop);\r\n\t},\r\n\r\n\t/**\r\n\t* Scrolls to the specified position.\r\n\t*\r\n\t* @param {Number} x - The `x` position in pixels.\r\n\t* @param {Number} y - The `y` position in pixels.\r\n\t* @public\r\n\t*/\r\n\tscrollTo: function (x, y) {\r\n\t\tthis.$.strategy.scrollTo(x, y);\r\n\t},\r\n\r\n\t/**\r\n\t* Ensures that the given [control]{@link module:enyo/Control~Control} is visible in the\r\n\t* [scroller's]{@link module:enyo/Scroller~Scroller} viewport. Unlike\r\n\t* [scrollIntoView()]{@link module:enyo/Scroller~Scroller#scrollIntoView}, which uses DOM's\r\n\t* [scrollIntoView()]{@glossary scrollIntoView}, this only affects the current\r\n\t* scroller.\r\n\t*\r\n\t* @param {module:enyo/Control~Control} ctl - The [control]{@link module:enyo/Control~Control} to make visible in the\r\n\t*\t[scroller's]{@link module:enyo/Scroller~Scroller} viewport.\r\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\r\n\t*\tscroller.\r\n\t* @public\r\n\t*/\r\n\tscrollToControl: function (ctl, alignWithTop) {\r\n\t\tthis.scrollToNode(ctl.hasNode(), alignWithTop);\r\n\t},\r\n\r\n\t/**\r\n\t* Ensures that the given node is visible in the [scroller's]{@link module:enyo/Scroller~Scroller} viewport.\r\n\t*\r\n\t* @param {Node} node - The node to make visible in the [scroller's]{@link module:enyo/Scroller~Scroller}\r\n\t*\tviewport.\r\n\t* @param {Boolean} alignWithTop - If `true`, the node is aligned with the top of the\r\n\t*\tscroller.\r\n\t* @public\r\n\t*/\r\n\tscrollToNode: function (node, alignWithTop) {\r\n\t\tthis.$.strategy.scrollToNode(node, alignWithTop);\r\n\t},\r\n\r\n\t/**\r\n\t* Stops the scroller if it is currently animating.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tstop: function() {\r\n\t\tif (typeof this.$.strategy.stop == 'function') {\r\n\t\t\tthis.$.strategy.stop(true);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Adds current values of `getScrollBounds()` to {@glossary event}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tdecorateScrollEvent: function (e) {\r\n\t\tvar bounds = e.scrollBounds = e.scrollBounds || this.$.strategy._getScrollBounds();\r\n\t\t// in the off chance that the event already had scrollBounds then we need\r\n\t\t// to make sure they are decorated\r\n\t\tif (\r\n\t\t\t(bounds.xDir !== -1 && bounds.xDir !== 0 && bounds.xDir !== 1) ||\r\n\t\t\t(bounds.yDir !== -1 && bounds.yDir !== 0 && bounds.yDir !== 1)\r\n\t\t) {\r\n\t\t\tthis.decorateBounds(bounds);\r\n\t\t}\r\n\t\t// keep our properties synchronized always and without extra calls\r\n\t\tthis.scrollTop  = bounds.top;\r\n\t\tthis.scrollLeft = bounds.left;\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdecorateBounds: function (bounds) {\r\n\t\tvar x       = this.scrollLeft - bounds.left,\r\n\t\t\ty       = this.scrollTop  - bounds.top;\r\n\t\tbounds.xDir = (x < 0? 1: x > 0? -1: 0);\r\n\t\tbounds.yDir = (y < 0? 1: y > 0? -1: 0);\r\n\t\t// we update our current bounds properties so we don't have to unnecessarily\r\n\t\t// call getScrollTop/getScrollLeft because we already have the current data\r\n\t\tthis.scrollLeft = bounds.left;\r\n\t\tthis.scrollTop  = bounds.top;\r\n\t},\r\n\r\n\t/**\r\n\t* Normalizes scroll {@glossary event} to `onScroll`.\r\n\t*\r\n\t* @fires module:enyo/Scroller~Scroller#onScroll\r\n\t* @private\r\n\t*/\r\n\tdomScroll: function (sender, e) {\r\n\t\t// if a scroll event originated here, pass it to our strategy to handle\r\n\t\tif (this.$.strategy.domScroll && e.originator == this) {\r\n\t\t\tthis.$.strategy.domScroll(sender, e);\r\n\t\t}\r\n\t\tthis.decorateScrollEvent(e);\r\n\t\tthis.doScroll(e);\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t* @returns {Boolean} `true` if the current scroll {@glossary event} should\r\n\t* be stopped; `false` if it should be allowed to propagate.\r\n\t* @private\r\n\t*/\r\n\tshouldStopScrollEvent: function (e) {\r\n\t\treturn (this.preventScrollPropagation &&\r\n\t\t\te.originator.owner != this.$.strategy);\r\n\t},\r\n\r\n\t/**\r\n\t* Calls [shouldStopScrollEvent()]{@link module:enyo/Scroller~Scroller#shouldStopScrollEvent} to\r\n\t* determine whether current scroll {@glossary event} should be stopped.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tscrollStart: function (sender, e) {\r\n\t\tif (!this.shouldStopScrollEvent(e)) {\r\n\t\t\tthis.decorateScrollEvent(e);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t* Either propagates or stops the current scroll {@glossary event}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tscroll: function (sender, e) {\r\n\t\t// note: scroll event can be native dom or generated.\r\n\t\tvar stop;\r\n\t\tif (e.dispatchTarget) {\r\n\t\t\t// allow a dom event if it orignated with this scroller or its strategy\r\n\t\t\tstop = this.preventScrollPropagation && !(e.originator == this ||\r\n\t\t\t\te.originator.owner == this.$.strategy);\r\n\t\t} else {\r\n\t\t\tstop = this.shouldStopScrollEvent(e);\r\n\t\t}\r\n\t\tif (!stop) {\r\n\t\t\tthis.decorateScrollEvent(e);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t* Calls [shouldStopScrollEvent()]{@link module:enyo/Scroller~Scroller#shouldStopScrollEvent} to\r\n\t* determine whether current scroll {@glossary event} should be stopped.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tscrollStop: function (sender, e) {\r\n\t\tif (!this.shouldStopScrollEvent(e)) {\r\n\t\t\tthis.decorateScrollEvent(e);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t* Scrolls to the top of the scrolling region.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tscrollToTop: function () {\r\n\t\tthis.setScrollTop(0);\r\n\t},\r\n\r\n\t/**\r\n\t* Scrolls to the bottom of the scrolling region.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tscrollToBottom: function () {\r\n\t\tthis.setScrollTop(this.getScrollBounds().maxTop);\r\n\t},\r\n\r\n\t/**\r\n\t* Scrolls to the right edge of the scrolling region.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tscrollToRight: function () {\r\n\t\tthis.setScrollLeft(this.getScrollBounds().maxLeft);\r\n\t},\r\n\r\n\t/**\r\n\t* Scrolls to the left edge of the scrolling region.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tscrollToLeft: function () {\r\n\t\tthis.setScrollLeft(0);\r\n\t},\r\n\r\n\t/**\r\n\t* Ensures scroll position is in bounds.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tstabilize: function () {\r\n\t\tvar s = this.getStrategy();\r\n\t\tif (s.stabilize) {\r\n\t\t\ts.stabilize();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Sends the [useMouseWheel]{@link module:enyo/Scroller~Scroller#useMouseWheel} property to the scroll\r\n\t* strategy.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tuseMouseWheelChanged: function () {\r\n\t\tthis.$.strategy.setUseMouseWheel(this.useMouseWheel);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tresize: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tif (this.getAbsoluteShowing(true)) {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t})\r\n});\r\n\r\n// provide a touch scrolling solution by default when the environment is mobile\r\nif (Scroller.hasTouchScrolling()) {\r\n\tScroller.prototype.strategyKind = Scroller.getTouchStrategy();\r\n}\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/DataList~DataList} kind.\r\n* @module enyo/DataList\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind'),\r\n\tutils = require('../utils');\r\nvar\r\n\tDataRepeater = require('../DataRepeater'),\r\n\tEventEmitter = require('../EventEmitter'),\r\n\tVerticalDelegate = require('../VerticalDelegate'),\r\n\tHorizontalDelegate = require('../HorizontalDelegate'),\r\n\tScroller = require('../Scroller');\r\n\r\n/**\r\n* The {@glossary event} [object]{@glossary Object} that is provided when the\r\n* [paging]{@link module:enyo/DataList~DataList#paging} event is fired.\r\n*\r\n* @typedef {Object} module:enyo/DataList~DataList~PagingEvent\r\n* @property {Number} start - The lowest active index in the dataset.\r\n* @property {Number} end - The highest active index.\r\n* @property {String} action - The action that triggered the paging, either `'scroll'`\r\n* or `'reset'`.\r\n*/\r\n\r\n/**\r\n* Fires each time data is paged, on a per-page basis.\r\n*\r\n* @event module:enyo/DataList~DataList#paging\r\n* @type {Object}\r\n* @property {Object} sender - A reference to the {@link module:enyo/DataList~DataList}.\r\n* @property {String} nom - The name of the {@glossary event}.\r\n* @property {module:enyo/DataList~DataList~PagingEvent} event - A [hash]{@glossary Object} with properties\r\n*\tspecific to this event.\r\n* @public\r\n*/\r\n\r\n/**\r\n* When this property is specified, we force the static usage of this value instead of\r\n* dynamically calculating the number of controls per page based upon the viewport size.\r\n*\r\n* @name module:enyo/DataList~DataList#controlsPerPage\r\n* @type {Number}\r\n* @default undefined\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:enyo/DataList~DataList} is an {@link module:enyo/DataRepeater~DataRepeater} that employs a paginated\r\n* scrolling scheme to enhance performance with larger datasets. The data is provided\r\n* to the DataList by an {@link module:enyo/Collection~Collection} set as the value of its\r\n* `collection` property and accessed by calling [data()]{@link module:enyo/DataRepeater~DataRepeater#data}.\r\n*\r\n* Note that care should be taken when deciding how to lay out the list's children. When\r\n* there are a large number of child [elements]{@link module:enyo/Control~Control}, the layout process\r\n* can be taxing and non-performant for the browser. Avoid dynamically-updated\r\n* [layouts]{@glossary layout} that require lots of calculations each time the data in a\r\n* view is updated. Try to use CSS whenever possible.\r\n*\r\n* While paging through data, `DataList` emits the\r\n* [paging]{@link module:enyo/DataList~DataList#paging} event, which allows you to make updates as\r\n* necessary, on a per-page basis. You may register for this event by calling\r\n* [addListener()]{@link module:enyo/EventEmitter~EventEmitter#addListener} and specifying the event,\r\n* along with a callback method.\r\n*\r\n* @class DataList\r\n* @extends module:enyo/DataRepeater~DataRepeater\r\n* @mixes module:enyo/EventEmitter~EventEmitter\r\n* @ui\r\n* @public\r\n*/\r\nvar DataList = module.exports = kind(\r\n\t/** @lends module:enyo/DataList~DataList.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.DataList',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: DataRepeater,\r\n\r\n\t/**\r\n\t* {@link module:enyo/DataList~DataList} places its rows inside of a [scroller]{@link module:enyo/Scroller~Scroller}.\r\n\t* Any configurable options of {@link module:enyo/Scroller~Scroller} may be placed in the\r\n\t* `scrollerOptions` [hash]{@glossary Object}; their values will be set on the\r\n\t* DataList's scroller accordingly. If no options are specified, the default\r\n\t* `Scroller` settings will be used.\r\n\t*\r\n\t* @type {Object}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tscrollerOptions: null,\r\n\r\n\t/**\r\n\t* The paging orientation. Valid values are `'vertical'` and `'horizontal'`. This property\r\n\t* will be mapped to a particular strategy governing how the list will flow.\r\n\t*\r\n\t* @type {String}\r\n\t* @default 'vertical'\r\n\t* @public\r\n\t*/\r\n\torientation: 'vertical',\r\n\r\n\t/**\r\n\t* While page sizing is typically handled automatically, some platforms may benefit from\r\n\t* having a larger or smaller value set for this property. If a number is specified, it\r\n\t* will be multiplied by the available viewport size (depending on\r\n\t* [orientation]{@link module:enyo/DataList~DataList#orientation}) to determine the minimum page size.\r\n\t* The page size is directly related to the number of [controls]{@link module:enyo/Control~Control} that\r\n\t* are generated at any given time (and that subsequently need updating) whenever paging\r\n\t* occurs. This value may be any rational number greater than `1.2`.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 1.2\r\n\t* @public\r\n\t*/\r\n\tpageSizeMultiplier: null,\r\n\r\n\t/**\r\n\t* It is helpful for performance if the [DataList]{@link module:enyo/DataList~DataList} doesn't need to\r\n\t* guess the size of the children. In cases where all children are a fixed height (or\r\n\t* width, depending on the [orientation]{@link module:enyo/DataList~DataList#orientation} of the list),\r\n\t* you may explicitly define the size of the fixed dimension and thus allow the list to\r\n\t* bypass much of its guesswork. This value is a number that will be interpreted in\r\n\t* pixels and applied to the primary size depending on the list's `orientation` (i.e.,\r\n\t* it will be applied to `height` when the `orientation` is `'vertical'`, and to `width`\r\n\t* when the `orientation` is `'horizontal'`). Note that the list does not apply this\r\n\t* value to the children via CSS and mis-specifying this value can cause list operations that\r\n\t* take the shortcut to fail.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default null\r\n\t* @public\r\n\t*/\r\n\tfixedChildSize: null,\r\n\r\n\t/**\r\n\t* To disable the default smoothing-transitions (for supported platforms), set this flag to\r\n\t* `false`.\r\n\t*\r\n\t* @type {Boolean}\r\n\t* @default true\r\n\t* @public\r\n\t*/\r\n\tallowTransitions: true,\r\n\r\n\t/**\r\n\t* Because some systems perform poorly on initialization, there is a delay when we\r\n\t* attempt to actually draw the contents of a [DataList]{@link module:enyo/DataList~DataList}. Usually,\r\n\t* you will not need to adjust this value, which is expressed in milliseconds. If\r\n\t* `renderDelay` is `null`, there will be no delay and rendering will take place\r\n\t* synchronously; if `renderDelay` is set to `0`, rendering will be done\r\n\t* asynchronously.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 250\r\n\t* @public\r\n\t*/\r\n\trenderDelay: 250,\r\n\r\n\t/**\r\n\t* Percentage (as a number between 0 and 1) of a control that must be visible to be counted\r\n\t* by {@link module:enyo/DataList~DataList#getVisibleControls}.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 0.6\r\n\t* @public\r\n\t*/\r\n\tvisibleThreshold: 0.6,\r\n\r\n\t/**\r\n\t* This is an inclusive list of all methods that can be queued,\r\n\t* and the prefered order they should execute, if a method is\r\n\t* not listed, it will NOT be called ever.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_absoluteShowingPriority:['reset', 'refresh', 'finish rendering', 'scrollToIndex', 'didResize' , 'select'],\r\n\r\n\t/**\r\n\t* Completely resets the current [list]{@link module:enyo/DataList~DataList} such that it scrolls to the top\r\n\t* of the scrollable region and regenerates all of its children. This is typically necessary\r\n\t* only on initialization or if the entire dataset has been swapped out.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\treset: function () {\r\n\t\tif (this.get('absoluteShowing')) {\r\n\t\t\t// we can only reset if we've already rendered\r\n\t\t\tif (this.generated && this.$.scroller.generated) {\r\n\t\t\t\tthis.delegate.reset(this);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._addToShowingQueue('reset', this.reset);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Unlike [reset()]{@link module:enyo/DataList~DataList#reset}, which tears down and regenerates the entire\r\n\t* [list]{@link module:enyo/DataList~DataList}, this method attempts to refresh the pages as they are against\r\n\t* the current dataset. This is much cheaper to call than `reset()`, but is primarily used\r\n\t* internally.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\trefresh: function (c, e) {\r\n\t\tif (this.get('absoluteShowing')) {\r\n\t\t\tif (this.hasRendered) {\r\n\t\t\t\tthis.delegate.refresh(this);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._addToShowingQueue('refresh', this.refresh);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Pass in an integer within the bounds of the [list's]{@link module:enyo/DataList~DataList}\r\n\t* [collection]{@link module:enyo/DataRepeater~DataRepeater#data} to scroll to the position of that\r\n\t* index in the list.\r\n\t*\r\n\t* It is important to note that this scrolling operation is not guaranteed to be synchronous. If\r\n\t* you need to perform another action upon the completion of scrolling, you should pass a callback\r\n\t* function as a second argument to this method.\r\n\t*\r\n\t* @param {Number} idx - The index in the [list's]{@link module:enyo/DataList~DataList}\r\n\t*\t[collection]{@link module:enyo/DataRepeater~DataRepeater#data} to scroll to.\r\n\t* @param {Function} callback - A function to be executed after the scroll operation is\r\n\t*   complete.\r\n\t* @public\r\n\t*/\r\n\tscrollToIndex: function (idx, callback) {\r\n\t\tvar len = this.collection? this.collection.length: 0;\r\n\t\tif (idx >= 0 && idx < len) {\r\n\t\t\tif (this.get('absoluteShowing')) {\r\n\t\t\t\tthis.delegate.scrollToIndex(this, idx, callback);\r\n\t\t\t} else {\r\n\t\t\t\tthis._addToShowingQueue('scrollToIndex', function () {\r\n\t\t\t\t\tthis.delegate.scrollToIndex(this, idx, callback);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Returns the `start` and `end` indices of the visible controls. Partially visible controls\r\n\t* are included if the amount visible exceeds the {@link module:enyo/DataList~DataList#visibleThreshold}.\r\n\t*\r\n\t* This operation is *layout intesive* and should not be called during scrolling.\r\n\t*\r\n\t* @return {Object}\r\n\t* @public\r\n\t*/\r\n\tgetVisibleControlRange: function () {\r\n\t\treturn this.delegate.getVisibleControlRange(this);\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tconstructor: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tthis.metrics       = {};\r\n\t\t\tthis.metrics.pages = {};\r\n\t\t\tif (this.pageSizeMultiplier !== null && !isNaN(this.pageSizeMultiplier)) {\r\n\t\t\t\tthis.pageSizeMultiplier = Math.max(1.2, this.pageSizeMultiplier);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\t// if we can, we use transitions\r\n\t\t\tthis.allowTransitionsChanged();\r\n\t\t\t// map the selected strategy to the correct delegate for operations\r\n\t\t\t// on the list, default to _vertical_ if none is provided or if it\r\n\t\t\t// could not be found\r\n\t\t\tthis.delegate = this.ctor.delegates[this.orientation] || this.base.delegates.vertical;\r\n\t\t\t// if the delegate has an initialization routine execute it now before the\r\n\t\t\t// container and children are rendered\r\n\t\t\tif (this.delegate.initList) {\r\n\t\t\t\tthis.delegate.initList(this);\r\n\t\t\t}\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t// initialize the _pages_ array and add the pages to it\r\n\t\t\tthis.pages = [this.$.page1, this.$.page2];\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\trender: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tthis.$.scroller.canGenerate = false;\r\n\t\t\tthis.$.scroller.teardownRender();\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Attempts to perform initialization. There are only a few basic startup paths, but it's\r\n\t* important to be aware of what they are:\r\n\t*\r\n\t* - The view is rendered, it has a collection, and the collection has data.\r\n\t* - The view is rendered, it has a collection with no data, and data is added\r\n\t\tlater.\r\n\t* - The view is rendered, but has no collection.\r\n\t*\r\n\t* Once the [list]{@link module:enyo/DataList~DataList} itself is rendered, we check to see if we have a\r\n\t* [collection]{@link module:enyo/Collection~Collection}; if so, do we have any data to start rendering the\r\n\t* rest of the list? Ultimately, the implementation decisions are decided by the\r\n\t* [delegate]{@glossary delegate} strategy.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\trendered: function () {\r\n\t\t// Initialize / sync the internal absoluteShowing property when we're rendered\r\n\t\tthis.absoluteShowing = this.getAbsoluteShowing(true);\r\n\t\t// actually rendering a datalist can be taxing for some systems so\r\n\t\t// we arbitrarily delay showing for a fixed amount of time unless delay is\r\n\t\t// null in which case it will be executed immediately\r\n\t\tvar finishRendering = function () {\r\n\t\t\tif (this.get('absoluteShowing')) {\r\n\t\t\t\t// now that the base list is rendered, we can safely generate our scroller\r\n\t\t\t\tthis.$.scroller.canGenerate = true;\r\n\t\t\t\tthis.$.scroller.render();\r\n\t\t\t\t// and now we hand over the action to our strategy to let it initialize the\r\n\t\t\t\t// way it needs to\r\n\t\t\t\tthis.delegate.rendered(this);\r\n\t\t\t\tthis.hasRendered = true;\r\n\t\t\t\t// now add our class to adjust visibility (if no overridden)\r\n\t\t\t\tthis.addClass('rendered');\r\n\t\t\t\tif (this.didRender) {\r\n\t\t\t\t\tthis.didRender();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._addToShowingQueue('finish rendering', finishRendering);\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (this.renderDelay === null) {\r\n\t\t\tfinishRendering.call(this);\r\n\t\t} else {\r\n\t\t\tthis.startJob('finish rendering', finishRendering, this.renderDelay);\r\n\t\t\t// this delay will allow slower systems to keep going and get everything else\r\n\t\t\t// on screen before worrying about setting up the list\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\t_absoluteShowingChanged: function () {\r\n\t\tif (this.get('absoluteShowing') && this._showingQueueMethods) {\r\n\t\t\tvar methods = this._showingQueueMethods;\r\n\t\t\tvar fn;\r\n\t\t\tthis._showingQueueMethods = null;\r\n\r\n\t\t\tfor (var i = 0; i < this._absoluteShowingPriority.length; i++) {\r\n\t\t\t\tfn = methods[this._absoluteShowingPriority[i]];\r\n\t\t\t\tif(fn) fn.call(this);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Creates a deferred Que of methods to run.\r\n\t* Methods must be prioritized in [_absoluteShowingPriority]{@link module:enyo/DataList~DataList#_absoluteShowingPriority}\r\n\t* @private\r\n\t*/\r\n\t_addToShowingQueue: function (name, fn) {\r\n\t\tvar methods = this._showingQueueMethods || (this._showingQueueMethods = {});\r\n\t\tmethods[name] = fn;\r\n\t},\r\n\r\n\t/**\r\n\t* This [function]{@glossary Function} is intentionally left blank. In\r\n\t* [DataRepeater]{@link module:enyo/DataRepeater~DataRepeater}, it removes the [control]{@link module:enyo/Control~Control}\r\n\t* at the specified index, but that is handled by the [delegate]{@glossary delegate} here.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tremove: function (idx) {},\r\n\r\n\t/**\r\n\t* Async wrapped to work with dynamic paging, when delegate que renders sup _select will then\r\n\t* be executed.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\t_select: kind.inherit(function (sup) {\r\n\t\treturn function (idx, model, select) {\r\n\r\n\t\t\tif (this.$.scroller.canGenerate) {\r\n\t\t\t\tif (this.get('absoluteShowing')) {\r\n\t\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._addToShowingQueue('select', function () {\r\n\t\t\t\t\t\tsup.apply(this, [idx, model, select]);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsup.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Overloaded to call a method of the [delegate]{@glossary delegate} strategy.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tmodelsAdded: function (c, e, props) {\r\n\t\tif (c === this.collection && this.$.scroller.canGenerate) {\r\n\t\t\tif (this.get('absoluteShowing')) {\r\n\t\t\t\tthis.delegate.modelsAdded(this, props);\r\n\t\t\t} else {\r\n\t\t\t\tthis._addToShowingQueue('refresh', this.refresh);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t* Overloaded to call a method of the [delegate]{@glossary delegate} strategy.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tmodelsRemoved: function (c, e, props) {\r\n\t\tif (c === this.collection && this.$.scroller.canGenerate) {\r\n\t\t\tthis.deselectRemovedModels(props.models);\r\n\t\t\tif (this.get('absoluteShowing')) {\r\n\t\t\t\tthis.delegate.modelsRemoved(this, props);\r\n\t\t\t} else {\r\n\t\t\t\tthis._addToShowingQueue('refresh', this.refresh);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tdestroy: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tif (this.delegate && this.delegate.destroyList) {\r\n\t\t\t\tthis.delegate.destroyList(this);\r\n\t\t\t}\r\n\t\t\tthis._showingQueue = null;\r\n\t\t\tthis._showingQueueMethods = null;\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tbeforeTeardown: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t// reset absoluteShowing on teardown because it can't be absolutely showing if it\r\n\t\t\t// doesn't have a node!\r\n\t\t\tthis.set('absoluteShowing', false);\r\n\t\t};\r\n\t}),\r\n\r\n\t/**\r\n\t* Overloaded from base [kind]{@glossary kind} to ensure that the container options\r\n\t* correctly apply the [scroller]{@link module:enyo/Scroller~Scroller} options before instantiating it.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tinitContainer: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tvar o = utils.clone(this.get('containerOptions')),\r\n\t\t\t\ts = this.get('scrollerOptions');\r\n\t\t\tif (s) { utils.mixin(o, s, {exists: true}); }\r\n\t\t\tthis.set('containerOptions', o);\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t/**\r\n\t* We let the [delegate]{@glossary delegate} strategy manage the {@glossary event},\r\n\t* but we arbitrarily return `true` because we don't want the event to propagate\r\n\t* beyond this [kind]{@glossary kind}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tdidScroll: function (sender, e) {\r\n\t\tif (this.hasRendered && this.collection && this.collection.length > 0) {\r\n\t\t\tif (this.heightNeedsUpdate || this.widthNeedsUpdate) {\r\n\t\t\t\t// assign this here so that if for any reason it needs to\r\n\t\t\t\t// it can reset it\r\n\t\t\t\tthis.heightNeedsUpdate = this.widthNeedsUpdate = false;\r\n\t\t\t\tthis.refresh();\r\n\t\t\t}\r\n\t\t\tthis.delegate.didScroll(this, e);\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\t/**\r\n\t* Special override to handle resizing in an attempt to minimize the amount of work\r\n\t* we're doing. We don't want to [waterfall]{@link module:enyo/Component~Component#waterfall} the\r\n\t* {@glossary event} to all children, so we hijack the normal handler.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tdidResize: function (sender, e) {\r\n\t\tif (this.get('absoluteShowing')) {\r\n\t\t\tif (this.hasRendered && this.collection) {\r\n\t\t\t\tif (this.heightNeedsUpdate || this.widthNeedsUpdate) {\r\n\t\t\t\t\t// assign this here so that if for any reason it needs to\r\n\t\t\t\t\t// it can reset it\r\n\t\t\t\t\tthis.heightNeedsUpdate = this.widthNeedsUpdate = false;\r\n\t\t\t\t\tthis.refresh();\r\n\t\t\t\t}\r\n\t\t\t\tthis.delegate.didResize(this, e);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._addToShowingQueue('didResize', this.didResize);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tshowingChangedHandler: kind.inherit(function (sup) {\r\n\t\treturn function (sender, e) {\r\n\t\t\tthis.set('absoluteShowing', this.getAbsoluteShowing(true));\r\n\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t/**\r\n\t* Overload to adjust the root method to be able to find the nested child based on the\r\n\t* requested index if its page is currently active. Returns `undefined` if the index is out\r\n\t* of bounds or if the [control]{@link module:enyo/Control~Control} is not currently available.\r\n\t*\r\n\t* Also see [getChildForIndex()]{@link module:enyo/Repeater~Repeater#getChildForIndex}, which calls this\r\n\t* method.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tchildForIndex: function (i) {\r\n\t\tif (this.generated) {\r\n\t\t\treturn this.delegate.childForIndex(this, i);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tallowTransitionsChanged: function () {\r\n\t\tthis.addRemoveClass('transitions', this.allowTransitions);\r\n\t},\r\n\t/**\r\n\t* {@link module:enyo/DataList~DataList} uses an overloaded container from its base\r\n\t* [kind]{@glossary kind}. We set the container to a [scroller]{@link module:enyo/Scroller~Scroller}\r\n\t* and provide a way to modify the scroller options (via the\r\n\t*[scrollerOptions]{@link module:enyo/DataList~DataList#scrollerOptions} [hash]{@link module:enyo/CoreObject~Object}).\r\n\t* All children will reside in one of the two pages owned by the scroller.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tcontainerOptions: {name: 'scroller', kind: Scroller, components: [\r\n\t\t{name: 'active', classes: 'active', components: [\r\n\t\t\t{name: 'page1', classes: 'page page1'},\r\n\t\t\t{name: 'page2', classes: 'page page2'},\r\n\t\t\t{name: 'buffer', classes: 'buffer'}\r\n\t\t]}\r\n\t], canGenerate: false, classes: 'enyo-fit enyo-data-list-scroller'},\r\n\r\n\t/**\r\n\t* We access this [kind's]{@glossary kind} [constructor]{@glossary constructor} and\r\n\t* need it to be undeferred at that time.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\r\n\r\n\t/**\r\n\t* All of the CSS is relative to this class.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tclasses: 'enyo-data-list',\r\n\r\n\t/**\r\n\t* Our initial `controlParent` is us for the flyweight child.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tcontrolParentName: '',\r\n\r\n\t/**\r\n\t* Of course we set our container to `'scroller'` as needed by the base\r\n\t* [kind]{@glossary kind}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tcontainerName: 'scroller',\r\n\t/**\r\n\t* We have to trap the Enyo-generated [onScroll]{@link module:enyo/Scroller~Scroller#onScroll}\r\n\t* {@glossary event} and let the [delegate]{@glossary delegate} handle it. We also\r\n\t* need to catch the `onresize` events so we know when to update our cached sizing.\r\n\t* We overload the default handler so that we don't\r\n\t* [waterfall]{@link module:enyo/Component~Component#waterfall} the resizing; we arbitrarily handle it\r\n\t* to minimize the amount of work we do.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\thandlers: {onScroll: 'didScroll', onresize: 'didResize'},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tobservers: [\r\n\t\t{method: '_absoluteShowingChanged', path: 'absoluteShowing'}\r\n\t],\r\n\r\n\t/**\r\n\t* Adds the [EventEmitter]{@link module:enyo/EventEmitter~EventEmitter} [mixin]{@glossary mixin}\r\n\t* for the [paging]{@link module:enyo/DataList~DataList#paging} {@glossary event}.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tmixins: [EventEmitter],\r\n\r\n\t/**\r\n\t* All [delegates]{@glossary delegate} are named elsewhere but are stored in these\r\n\t* statics.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tstatics: /** @lends module:enyo/DataList~DataList */ {\r\n\t\t/**\r\n\t\t* @private\r\n\t\t*/\r\n\t\tdelegates: {vertical: VerticalDelegate, horizontal: HorizontalDelegate}\r\n\t},\r\n\r\n\t/**\r\n\t* An [array]{@glossary Array} of the actual page references for easier access.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tpages: null\r\n});\r\n\r\n/**\r\n* All subclasses of {@link module:enyo/DataList~DataList} will have their own static\r\n* [delegates]{@glossary delegate} [hash]{@glossary Object}. This is\r\n* per-[kind]{@glossary kind}, not per-instance.\r\n*\r\n* @private\r\n*/\r\nDataList.subclass = function (ctor) {\r\n\tctor.delegates = utils.clone(ctor.prototype.base.delegates || this.delegates);\r\n};\r\n","require('enyo');\r\n\r\n/**\r\n* Contains the declaration for the {@link module:enyo/DataGridList~DataGridList} kind.\r\n* @module enyo/DataGridList\r\n*/\r\n\r\nvar\r\n\tkind = require('../kind');\r\nvar\r\n\tDataList = require('../DataList'),\r\n\tVerticalGridDelegate = require('../VerticalGridDelegate');\r\n\r\n/**\r\n* {@link module:enyo/DataGridList~DataGridList} is a paginated {@link module:enyo/DataList~DataList} designed to lay out\r\n* its children in a grid. Like `DataList`, it links its children directly to the\r\n* underlying records in the collection specified as its collection.\r\n*\r\n* Because the layout is arbitrarily handled, spacing of children must be set using\r\n* the kind's available API (e.g., with the [spacing]{@link module:enyo/DataGridList~DataGridList#spacing},\r\n* [minWidth]{@link module:enyo/DataGridList~DataGridList#minWidth}, and\r\n* [minHeight]{@link module:enyo/DataGridList~DataGridList#minHeight} properties).\r\n* \r\n* Note that `DataGridList` will attempt to grow or shrink the size of its\r\n* children in order to keep them evenly spaced.\r\n*\r\n* @class DataGridList\r\n* @extends module:enyo/DataList~DataList\r\n* @ui\r\n* @public\r\n*/\r\nvar DataGridList = module.exports = kind(\r\n\t/** @lends module:enyo/DataGridList~DataGridList.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.DataGridList',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: DataList,\r\n\r\n\t/**\r\n\t* The spacing (in pixels) between elements in the [grid list]{@link module:enyo/DataGridList~DataGridList}. It \r\n\t* should be an even number, or else it will be coerced into one for consistency. This is the\r\n\t* exact spacing to be allocated on all sides of each item.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 10\r\n\t* @public\r\n\t*/\r\n\tspacing: 10,\r\n\r\n\t/**\r\n\t* The minimum width (in pixels) for each [grid]{@link module:enyo/DataGridList~DataGridList} item. \r\n\t* Grid items will not be collapsed beyond this size, but they may be proportionally\r\n\t* expanded.\r\n\t*\r\n\t* @type {Number}\r\n\t* @default 100\r\n\t* @public\r\n\t*/\r\n\tminWidth: 100,\r\n\r\n\t/**\r\n\t* The minimum height (in pixels) for each [grid]{@link module:enyo/DataGridList~DataGridList} item. \r\n\t* Grid items will not be collapsed beyond this size, but they may be proportionally\r\n\t* expanded.\r\n\t*/\r\n\tminHeight: 100,\r\n\r\n\t/**\r\n\t* While {@link module:enyo/DataList~DataList} provides some generic [delegates]{@glossary delegate} for\r\n\t* handling [objects]{@glossary Object}, we have to arbitrarily lay out our children, so\r\n\t* we have our own. We add these and ensure that the appropriate delegate is selected\r\n\t* depending on the request.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tcreate: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tvar o = this.orientation;\r\n\t\t\t// this will only remap _vertical_ and _horizontal_ meaning it is still possible to\r\n\t\t\t// add others easily\r\n\t\t\tthis.orientation = (o == 'vertical'? 'verticalGrid': (o == 'horizontal'? 'horizontalGrid': o));\r\n\t\t\tvar s = this.spacing;\r\n\t\t\t// ensure that spacing is set to an even number or zero\r\n\t\t\tthis.spacing = (s % 2 === 0? s: Math.max(s-1, 0));\r\n\t\t\treturn sup.apply(this, arguments);\r\n\t\t};\r\n\t}),\r\n\t/**\r\n\t* Ensures that each item being created for the [DataGridList]{@link module:enyo/DataGridList~DataGridList}\r\n\t* has the correct CSS classes so it will display properly (and be movable, since the items\r\n\t* must be absolutely positioned).\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tinitComponents: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\t// note we wait until after the container and its children have been created\r\n\t\t\t// so these default properties will only apply to the real children of the grid\r\n\t\t\tvar d = this.defaultProps,\r\n\t\t\t\tc = ' item';\r\n\t\t\td.classes = (d.classes || '') + c;\r\n\t\t};\r\n\t}),\r\n\t/**\r\n\t* We don't want to worry about the normal required handling when `showing` changes\r\n\t* unless we're actually visible and the list has been fully rendered and we actually\r\n\t* have some data.\r\n\t*\r\n\t* @method\r\n\t* @private\r\n\t*/\r\n\tshowingChanged: kind.inherit(function (sup) {\r\n\t\treturn function () {\r\n\t\t\tsup.apply(this, arguments);\r\n\t\t\tvar len = this.collection? this.collection.length: 0;\r\n\t\t\tif (this.$.scroller.generated && len && this.showing) {\r\n\t\t\t\t// avoid the default handler and call the event handler method\r\n\t\t\t\t// designated by `enyo.DataList`\r\n\t\t\t\tthis.didResize();\r\n\t\t\t}\r\n\t\t};\r\n\t}),\r\n\r\n\t/** \r\n\t* We access this [kind's]{@glossary kind} [constructor]{@glossary constructor}\r\n\t* and need it to be undeferred at that time.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\r\n\t\r\n\t/**\r\n\t* All of the CSS is relative to this class.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tclasses: 'enyo-data-grid-list',\r\n\r\n\t// Accessibility\r\n\r\n\t/**\r\n\t* @default grid\r\n\t* @type {String}\r\n\t* @see enyo/AccessibilitySupport~AccessibilitySupport#accessibilityRole\r\n\t* @public\r\n\t*/\r\n\taccessibilityRole: 'grid'\r\n});\r\n\r\nDataGridList.delegates.verticalGrid = VerticalGridDelegate;\r\n"]}