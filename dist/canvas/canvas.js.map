{"version":3,"sources":["..\\..\\lib\\canvas\\index.js","..\\..\\lib\\canvas\\src\\Control.js","..\\..\\lib\\canvas\\src\\Shape.js","..\\..\\lib\\canvas\\src\\Circle.js","..\\..\\lib\\canvas\\src\\Rectangle.js","..\\..\\lib\\canvas\\src\\Text.js","..\\..\\lib\\canvas\\src\\Canvas.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzfile":"generated.js","sourceRoot":"","sourcesContent":["exports.version = '2.7.0';\r\n","/**\r\n* Contains the declaration for the {@link module:canvas/Control~Control} kind.\r\n* @module canvas/Control\r\n*/\r\n\r\nvar\r\n\tkind = require('enyo/kind'),\r\n\tutils = require('enyo/utils');\r\n\r\nvar\r\n\tUiComponent = require('enyo/UiComponent');\r\n\r\n/**\r\n* Fires when this control is to be rendered.\r\n*\r\n* @event module:canvas/Control~Control#onRender\r\n* @param {Context} context - The active canvas context.\r\n* @public\r\n*/\r\n\r\n/**\r\n* {@link module:canvas/Control~Control} is the base kind for items that live\r\n* inside a {@link module:canvas/Canvas~Canvas} control.\r\n*\r\n* If you're using this kind directly, you may implement an `onRender` event\r\n* handler in the owner to handle drawing into the canvas.\r\n*\r\n* If you're deriving a new kind based on this one, override the\r\n* `renderSelf()` method and use that for your drawing code.\r\n*\r\n* @class Control\r\n* @extends module:enyo/UiComponent~UiComponent\r\n* @ui\r\n* @public\r\n*/\r\nvar Control = module.exports = kind(\r\n\t/** @lends module:canvas/Control~Control.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.canvas.Control',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: UiComponent,\r\n\r\n\t/**\r\n\t* @lends module:canvas/Control~Control.prototype\r\n\t* @private\r\n\t*/\r\n\tpublished: {\r\n\t\t/**\r\n\t\t* Object with members `l` (left), `t` (top), `w` (width), and `h` (height).\r\n\t\t* The default constructor sets these properties to random values.\r\n\t\t*\r\n\t\t* @type {Object}\r\n\t\t* @public\r\n\t\t*/\r\n\t\tbounds: null\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tevents: {\r\n\t\tonRender: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tconstructor: function () {\r\n\t\tthis.bounds = {l: utils.irand(400), t: utils.irand(400), w: utils.irand(100), h: utils.irand(100)};\r\n\t\tthis.inherited(arguments);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\timportProps: function (props) {\r\n\t\tthis.inherited(arguments);\r\n\t\tif (props && props.bounds) {\r\n\t\t\tutils.mixin(this.bounds, props.bounds);\r\n\t\t\tdelete props.bounds;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Fires module:canvas/Control~Control#onRender\r\n\t* @protected\r\n\t*/\r\n\trenderSelf: function (context) {\r\n\t\tthis.doRender({context: context});\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trender: function (context) {\r\n\t\tif (this.children.length) {\r\n\t\t\tthis.renderChildren(context);\r\n\t\t} else {\r\n\t\t\tthis.renderSelf(context);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trenderChildren: function (context) {\r\n\t\tfor (var i=0, c; (c=this.children[i]); i++) {\r\n\t\t\tc.render(context);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nControl.prototype.defaultKind = Control;\r\n","/**\r\n* Contains the declaration for the {@link module:canvas/Shape~Shape} kind.\r\n* @module canvas/Shape\r\n*/\r\n\r\nvar\r\n\tkind = require('enyo/kind');\r\n\r\nvar\r\n\tControl = require('./Control');\r\n\r\n/**\r\n* {@link module:canvas/Shape~Shape} is the base kind for shapes that can be drawn into the\r\n* canvas. It doesn't have a default rendering, but an event handler may call its\r\n* [draw()]{@link module:canvas/Shape~Shape#draw} method.\r\n*\r\n* Kinds derived from this one should provide their own implementation of\r\n* `renderSelf()`. If more complex operations are needed for filled mode or\r\n* outline mode, override the `fill()` method or the `outline()` method,\r\n* respectively.\r\n*\r\n* @class Shape\r\n* @extends module:canvas/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:canvas/Shape~Shape.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.canvas.Shape',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* @lends module:canvas/Shape~Shape.prototype\r\n\t* @private\r\n\t*/\r\n\tpublished: {\r\n\t\t/**\r\n\t\t* Color used to draw the interior of the shape.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default 'red'\r\n\t\t* @private\r\n\t\t*/\r\n\t\tcolor: 'red',\r\n\r\n\t\t/**\r\n\t\t* Color used to draw the outline of the shape.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default ''\r\n\t\t* @private\r\n\t\t*/\r\n\t\toutlineColor: ''\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfill: function (context) {\r\n\t\tcontext.fill();\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\toutline: function (context) {\r\n\t\tcontext.stroke();\r\n\t},\r\n\r\n\t/**\r\n\t* Draws the shape by invoking its [fill()]{@link module:canvas/Shape~Shape#fill} or\r\n\t* [outline()]{@link module:canvas/Shape~Shape#outline} method. Usually\r\n\t* invoked by the derived shape's [renderSelf()]{@link module:canvas/Shape~Shape#renderSelf}\r\n\t* method in response to the rendering of the canvas control's parent.\r\n\t*\r\n\t* @param {Context} context - The canvas context.\r\n\t* @public\r\n\t*/\r\n\tdraw: function (context) {\r\n\t\tif (this.color) {\r\n\t\t\tcontext.fillStyle = this.color;\r\n\t\t\tthis.fill(context);\r\n\t\t}\r\n\t\tif (this.outlineColor) {\r\n\t\t\tcontext.strokeStyle = this.outlineColor;\r\n\t\t\tthis.outline(context);\r\n\t\t}\r\n\t}\r\n});\r\n","/**\r\n* Contains the declaration for the {@link module:canvas/Circle~Circle} kind.\r\n* @module canvas/Circle\r\n*/\r\n\r\nvar\r\n\tkind = require('enyo/kind');\r\n\r\nvar\r\n\tShape = require('./Shape');\r\n\r\n/**\r\n* {@link module:canvas/Circle~Circle} is a canvas control that draws a circle fitting\r\n* the parameters specified by the [bounds]{@link module:canvas/Control~Control#bounds}\r\n* property on {@link module:canvas/Control~Control}. \r\n*\r\n* @class Circle\r\n* @extends module:canvas/Shape~Shape\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:canvas/Circle~Circle.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.canvas.Circle',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Shape,\r\n\r\n\t/**\r\n\t* @protected\r\n\t*/\r\n\trenderSelf: function (ctx) {\r\n\t\tctx.beginPath();\r\n\t\tctx.arc(this.bounds.l, this.bounds.t, this.bounds.w, 0, Math.PI*2);\r\n\t\tthis.draw(ctx);\r\n\t}\r\n});\r\n","/**\r\n* Contains the declaration for the {@link module:canvas/Rectangle~Rectangle} kind.\r\n* @module canvas/Rectangle\r\n*/\r\n\r\nvar\r\n\tkind = require('enyo/kind');\r\n\r\nvar\r\n\tShape = require('./Shape');\r\n\r\n/**\r\n* {@link module:canvas/Rectangle~Rectangle} is a canvas control that draws a rectangle\r\n* fitting the parameters specified by the [bounds]{@link module:canvas/Control~Control#bounds}\r\n* property.\r\n*\r\n* @class Rectangle\r\n* @extends module:canvas/Shape~Shape\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:canvas/Rectangle~Rectangle.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.canvas.Rectangle',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Shape,\r\n\r\n\t/**\r\n\t* @lends module:canvas/Rectangle~Rectangle.prototype\r\n\t* @private\r\n\t*/\r\n\tpublished: {\r\n\t\t/**\r\n\t\t* If `true`, the area of the rectangle is cleared instead of drawn.\r\n\t\t*\r\n\t\t* @type {Boolean}\r\n\t\t* @default false\r\n\t\t* @public\r\n\t\t*/\r\n\t\tclear: false\r\n\t},\r\n\r\n\t/**\r\n\t* @protected\r\n\t*/\r\n\trenderSelf: function (ctx) {\r\n\t\tif (this.clear) {\r\n\t\t\tctx.clearRect(this.bounds.l, this.bounds.t, this.bounds.w, this.bounds.h);\r\n\t\t} else {\r\n\t\t\tthis.draw(ctx);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfill: function (ctx) {\r\n\t\tctx.fillRect(this.bounds.l, this.bounds.t, this.bounds.w, this.bounds.h);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\toutline: function (ctx) {\r\n\t\tctx.strokeRect(this.bounds.l, this.bounds.t, this.bounds.w, this.bounds.h);\r\n\t}\r\n});\r\n","/**\r\n* Contains the declaration for the {@link module:canvas/Text~Text} kind.\r\n* @module canvas/Text\r\n*/\r\n\r\nvar\r\n\tkind = require('enyo/kind');\r\n\r\nvar\r\n\tShape = require('./Shape');\r\n\r\n/**\r\n* {@link module:canvas/Text~Text} is a canvas control that draws a text string.\r\n*\r\n* @class Text\r\n* @extends module:canvas/Shape~Shape\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:canvas/Text~Text.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.canvas.Text',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Shape,\r\n\r\n\t/**\r\n\t* @lends module:canvas/Text~Text.prototype\r\n\t* @private\r\n\t*/\r\n\tpublished: {\r\n\t\t/**\r\n\t\t * The text to draw.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @default ''\r\n\t\t * @public\r\n\t\t */\r\n\t\ttext: '',\r\n\r\n\t\t/**\r\n\t\t * CSS font specification used to select a font for drawing.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @default '12pt Arial'\r\n\t\t * @public\r\n\t\t */\r\n\t\tfont: '12pt Arial',\r\n\r\n\t\t/**\r\n\t\t * Text alignment within the rectangle specified by the\r\n\t\t * [bounds]{@link module:canvas/Control~Control#bounds} property.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @default 'left'\r\n\t\t * @public\r\n\t\t */\r\n\t\talign: 'left'\r\n\t},\r\n\r\n\t/**\r\n\t* @protected\r\n\t*/\r\n\trenderSelf: function (ctx) {\r\n\t\tctx.textAlign = this.align;\r\n\t\tctx.font = this.font;\r\n\t\tthis.draw(ctx);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tfill: function (ctx) {\r\n\t\tctx.fillText(this.text, this.bounds.l, this.bounds.t);\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\toutline: function (ctx) {\r\n\t\tctx.strokeText(this.text, this.bounds.l, this.bounds.t);\r\n\t}\r\n});\r\n","/**\r\n* Contains the declaration for the {@link module:canvas/Canvas~Canvas} kind.\r\n* @module canvas/Canvas\r\n*/\r\n\r\nvar\r\n\tkind = require('enyo/kind');\r\n\r\nvar\r\n\tControl = require('./Control'),\r\n\tUiComponent = require('enyo/UiComponent'),\r\n\tControl = require('enyo/Control');\r\n\r\n/**\r\n* {@link module:canvas/Canvas~Canvas} is a control that generates a &lt;canvas&gt; HTML tag.\r\n* It may contain other canvas components derived not from {@link module:enyo/Control~Control},\r\n* but from {@link module:canvas/Control~Control}. These components are not true controls\r\n* in the sense of being DOM elements; they are, instead, shapes drawn into the\r\n* canvas.\r\n*\r\n* @class Canvas\r\n* @extends module:enyo/Control~Control\r\n* @ui\r\n* @public\r\n*/\r\nmodule.exports = kind(\r\n\t/** @lends module:canvas/Canvas~Canvas.prototype */ {\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tname: 'enyo.Canvas',\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tkind: Control,\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\ttag: 'canvas',\r\n\r\n\t/**\r\n\t* Hash containing the default height `(500)` and width `(500)` for the canvas.\r\n\t*\r\n\t* @see {@link module:enyo/Control~Control#attributes}\r\n\t* @public\r\n\t*/\r\n\tattributes: {\r\n\t\t// Width of the canvas element\r\n\t\twidth: 500,\r\n\t\t// Height of the canvas element\r\n\t\theight: 500\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tdefaultKind: Control,\r\n\r\n\t/**\r\n\t* Canvas tags do not have any content.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tgenerateInnerHtml: function () {\r\n\t\treturn '';\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\tteardownChildren: function () {\r\n\t},\r\n\r\n\t/**\r\n\t* @private\r\n\t*/\r\n\trendered: function () {\r\n\t\tthis.renderChildren();\r\n\t},\r\n\r\n\t/*\r\n\t* The `addChild()` method of {@link module:enyo/Control~Control} assumes that the child\r\n\t* being added is an instance of `enyo/Control`. Because `canvas/Control` is not derived\r\n\t* from `enyo/Control`, we instead call the `addChild()` method on\r\n\t* {@link module:enyo/UiComponent~UiComponent}, the superkind of `enyo/Control`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\taddChild: function () {\r\n\t\tUiComponent.prototype.addChild.apply(this, arguments);\r\n\t},\r\n\r\n\t/*\r\n\t* The `removeChild()` method of {@link module:enyo/Control~Control} assumes that the child\r\n\t* being removed is an instance of `enyo/Control`. Because `canvas/Control` is not derived\r\n\t* from `enyo/Control`, we instead call the `removeChild()` method on\r\n\t* {@link module:enyo/UiComponent~UiComponent}, the superkind of `enyo/Control`.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\tremoveChild: function () {\r\n\t\tUiComponent.prototype.removeChild.apply(this, arguments);\r\n\t},\r\n\r\n\t/**\r\n\t* Iterates over the canvas's children, rendering each onto the canvas.\r\n\t*\r\n\t* @private\r\n\t*/\r\n\trenderChildren: function (ctx) {\r\n\t\tvar canvas = this.hasNode();\r\n\t\tif (!ctx) {\r\n\t\t\tif (canvas.getContext) {\r\n\t\t\t\tctx = canvas.getContext('2d');\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (ctx) {\r\n\t\t\tfor (var i=0, c; (c=this.children[i]); i++) {\r\n\t\t\t\tc.render(ctx);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t* Refreshes the canvas context, clears existing drawings, and redraws all\r\n\t* of the children.\r\n\t*\r\n\t* @public\r\n\t*/\r\n\tupdate: function () {\r\n\t\tvar canvas = this.hasNode();\r\n\t\tif (canvas.getContext) {\r\n\t\t\tvar ctx = canvas.getContext('2d');\r\n\t\t\tvar b = this.getBounds();\r\n\t\t\t// clear canvas\r\n\t\t\tctx.clearRect(0, 0, b.width, b.height);\r\n\t\t\tthis.renderChildren(ctx);\r\n\t\t}\r\n\t}\r\n});\r\n"]}